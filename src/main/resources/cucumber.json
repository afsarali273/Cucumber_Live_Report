[
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:41:57.568Z",
        "before": [
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 72000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 2678000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "Datasource service processes a MHA bulk citizen file",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-service-processes-a-mha-bulk-citizen-file",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 50000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 63000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 10,
            "name": "the mha bulk file is being created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsBeingCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 61000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 11,
            "name": "the mha bulk file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Singaporean,M,Name:Dao Sa Pia,Fin:F8100327X,DoB:20070101,DoD:20200101,MHAAddress,BuildingName:123113afweaafawe aefa121,UnitNo:12,BlkNo:212,StrtName:faea eae,FlrNo:12,InvalidAddressTag:D,ctzIssDate:20100101,Quantity:1"
                ]
              },
              {
                "cells": [
                  "PermanentResident,DoB:19860901,Name:Roti John,F,Overseas,mhaAddrType:C,BlkNo:212,StrtName:faea eae,FlrNo:12,BuildingName:123113afweaafawe aefa121,mhaAddrType:A,Quantity:1"
                ]
              },
              {
                "cells": [
                  "DualCitizen,M,NCAAddress,BlkNo:212,StrtCode:1h2y3u,LvlNo:131,UnitNo:123ka,Quantity:1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 16,
            "name": "the mha bulk file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 222287000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 17,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 19,
            "name": "the Mha Bulk batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          },
          {
            "name": "@GRYFFINDOR-912"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:45:42.921Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 697000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 143,
        "name": "Datasource should not process record(s) with empty name",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-empty-name",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 144,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "-",
                  "19990219",
                  "-",
                  "M",
                  "Z",
                  "F",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12298000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 147,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 2000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 148,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 149,
            "name": "the error message contains Name field cannot be empty",
            "match": {
              "arguments": [
                {
                  "val": "Name field cannot be empty",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:45:56.013Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 510000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 352,
        "name": "To verify record is persisted correctly when person record does not exist in database but residential address is, and person is a born SG",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;to-verify-record-is-persisted-correctly-when-person-record-does-not-exist-in-database-but-residential-address-is--and-person-is-a-born-sg;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 334,
            "name": "MHA send MHA_BULK_CITIZEN file with date of run on 20200413 and cut off date on 20191231",
            "match": {
              "arguments": [
                {
                  "val": "20200413",
                  "offset": 51
                },
                {
                  "val": "20191231",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.dateOfRunOnDATE_OF_RUNCutOffDateOnCUT_OF_DATE(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 335,
            "name": "the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T3455467B",
                  "-",
                  "Bob The Builder",
                  "20000505",
                  "-",
                  "M",
                  "Z",
                  "A",
                  "104",
                  "10",
                  "537",
                  "Bukit Batok Street 52",
                  "Bukit Batok Estate",
                  "-",
                  "650537",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 46000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 338,
            "name": "the database has the following mha property persisted:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theDatabaseHasTheFollowingMhaPropertyPersisted(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE"
                ]
              },
              {
                "cells": [
                  "A",
                  "104",
                  "10",
                  "537",
                  "Bukit Batok Street 52",
                  "Bukit Batok Estate",
                  "-",
                  "650537"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 108397000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 341,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 342,
            "name": "the Mha Bulk Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 85000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 343,
            "name": "I verify that a NRIC record is created in PERSON_ID table that valid from 20000505",
            "match": {
              "arguments": [
                {
                  "val": "NRIC",
                  "offset": 16
                },
                {
                  "val": "20000505",
                  "offset": 74
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatANricRecordIsCreatedInPERSON_IDTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 344,
            "name": "I verify that a record with name Bob The Builder is created in PERSON_NAME table that valid from 20000505",
            "match": {
              "arguments": [
                {
                  "val": "Bob The Builder",
                  "offset": 33
                },
                {
                  "val": "20000505",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPERSON_NAMETableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 345,
            "name": "I verify that a record with gender type M is created in GENDER table that valid from 20000505",
            "match": {
              "arguments": [
                {
                  "val": "M",
                  "offset": 40
                },
                {
                  "val": "20000505",
                  "offset": 85
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInGENDERTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 346,
            "name": "I verify that a record with date of birth 20000505 is created in PERSON_DETAIL table that valid from 20000505",
            "match": {
              "arguments": [
                {
                  "val": "20000505",
                  "offset": 42
                },
                {
                  "val": "20000505",
                  "offset": 101
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPERSON_DETAILTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 347,
            "name": "I verify that a record with type SINGAPORE_CITIZEN is created in NATIONALITY table that valid from 20000505",
            "match": {
              "arguments": [
                {
                  "val": "SINGAPORE_CITIZEN",
                  "offset": 33
                },
                {
                  "val": "20000505",
                  "offset": 99
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInNATIONALITYTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 348,
            "name": "I verify that no record is created in PROPERTY_DETAIL",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatNoRecordIsCreatedInPROPERTY_DETAIL()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 349,
            "name": "I verify that a record with type RESIDENCE is created in PERSON_PROPERTY that valid from 31 December of preceding year",
            "match": {
              "arguments": [
                {
                  "val": "RESIDENCE",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPERSON_PROPERTYThatValidFromDecemberOfPrecedingYear(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:05:09.042Z",
        "before": [
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 75000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 2581000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 137,
        "name": "Datasource should not process record(s) with invalid FIN format",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-fin-format;;2",
        "after": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 76000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 90000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T7754288J",
                  "F4132581X",
                  "Janice",
                  "20010719",
                  "-",
                  "F",
                  "C",
                  "C",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20010719"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 74502000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 33000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 133,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "the error message contains Invalid FIN",
            "match": {
              "arguments": [
                {
                  "val": "Invalid FIN",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:06:26.561Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 828000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 138,
        "name": "Datasource should not process record(s) with invalid FIN format",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-fin-format;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T7754288J",
                  "F413258W",
                  "Janice",
                  "20010719",
                  "-",
                  "F",
                  "C",
                  "C",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20010719"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 51377000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 133,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "the error message contains Invalid FIN",
            "match": {
              "arguments": [
                {
                  "val": "Invalid FIN",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:07:18.843Z",
        "before": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 716000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 139,
        "name": "Datasource should not process record(s) with invalid FIN format",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-fin-format;;4",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T7754288J",
                  "E4132581W",
                  "Janice",
                  "20010719",
                  "-",
                  "F",
                  "C",
                  "C",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20010719"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 50442000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 2000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 133,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "the error message contains Invalid FIN",
            "match": {
              "arguments": [
                {
                  "val": "Invalid FIN",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:08:10.103Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 577000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 140,
        "name": "Datasource should not process record(s) with invalid FIN format",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-fin-format;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T7754288J",
                  "H4132581W",
                  "Janice",
                  "20010719",
                  "-",
                  "F",
                  "C",
                  "C",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20010719"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49827000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 133,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "the error message contains Invalid FIN",
            "match": {
              "arguments": [
                {
                  "val": "Invalid FIN",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:09:00.575Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 612000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 330,
        "name": "To verify record is persisted correctly when person & residential address record does not exist in database, and person is a foreigner turn SG",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;to-verify-record-is-persisted-correctly-when-person-&-residential-address-record-does-not-exist-in-database--and-person-is-a-foreigner-turn-sg;;2",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 30000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 314,
            "name": "MHA send MHA_BULK_CITIZEN file with date of run on 20200413 and cut off date on 20191231",
            "match": {
              "arguments": [
                {
                  "val": "20200413",
                  "offset": 51
                },
                {
                  "val": "20191231",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.dateOfRunOnDATE_OF_RUNCutOffDateOnCUT_OF_DATE(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 315,
            "name": "the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T3455467B",
                  "F9523330U",
                  "Bob The Builder",
                  "20000505",
                  "-",
                  "M",
                  "Z",
                  "A",
                  "104",
                  "10",
                  "537",
                  "Bukit Batok Street 52",
                  "Bukit Batok Estate",
                  "-",
                  "650537",
                  "-",
                  "20010505"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 142755000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 318,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 319,
            "name": "the Mha Bulk Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 320,
            "name": "I verify that a FIN record is created in PERSON_ID table that valid till the end of day before 20010505",
            "match": {
              "arguments": [
                {
                  "val": "20010505",
                  "offset": 95
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatAFINRecordIsCreatedInPERSON_IDTableThatValidTillTheEndOfDayBeforeDOB(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 57000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 321,
            "name": "I verify that a NRIC record is created in PERSON_ID table that valid from 20010505",
            "match": {
              "arguments": [
                {
                  "val": "NRIC",
                  "offset": 16
                },
                {
                  "val": "20010505",
                  "offset": 74
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatANricRecordIsCreatedInPERSON_IDTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 322,
            "name": "I verify that a record with name Bob The Builder is created in PERSON_NAME table that valid from 20010505",
            "match": {
              "arguments": [
                {
                  "val": "Bob The Builder",
                  "offset": 33
                },
                {
                  "val": "20010505",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPERSON_NAMETableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 323,
            "name": "I verify that a record with gender type M is created in GENDER table that valid from 20010505",
            "match": {
              "arguments": [
                {
                  "val": "M",
                  "offset": 40
                },
                {
                  "val": "20010505",
                  "offset": 85
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInGENDERTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 324,
            "name": "I verify that a record with date of birth 20000505 is created in PERSON_DETAIL table that valid from 20010505",
            "match": {
              "arguments": [
                {
                  "val": "20000505",
                  "offset": 42
                },
                {
                  "val": "20010505",
                  "offset": 101
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPERSON_DETAILTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 325,
            "name": "I verify that a record with type SINGAPORE_CITIZEN is created in NATIONALITY table that valid from 20010505",
            "match": {
              "arguments": [
                {
                  "val": "SINGAPORE_CITIZEN",
                  "offset": 33
                },
                {
                  "val": "20010505",
                  "offset": 99
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInNATIONALITYTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 326,
            "name": "I verify that a record is created in PROPERTY_DETAIL that valid from 20191231",
            "match": {
              "arguments": [
                {
                  "val": "20191231",
                  "offset": 69
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPROPERTY_DETAILThatValidFromDATE_OF_RUN(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 327,
            "name": "I verify that a record with type RESIDENCE is created in PERSON_PROPERTY that valid from 31 December of preceding year",
            "match": {
              "arguments": [
                {
                  "val": "RESIDENCE",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPERSON_PROPERTYThatValidFromDecemberOfPrecedingYear(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:04.849Z",
        "before": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 66000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 2456000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 68,
        "name": "Datasource service completely duplicated records",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-service-completely-duplicated-records",
        "after": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 44000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 85000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 69,
            "name": "the mha bulk file is being created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsBeingCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 75000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 70,
            "name": "the mha bulk file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Singaporean,M,Name:Laksa Boy,Nric:S1412535C,DoB:20071231,ctzIssDate:20190325,MHAAddress,mhaAddrType:A,BuildingName:123113afweaafawe aefa121,UnitNo:12,BlkNo:212,StrtName:faea eae,FlrNo:12,InvalidAddressTag:D,Quantity:1"
                ]
              },
              {
                "cells": [
                  "Singaporean,M,Name:Laksa Boy,Nric:S1412535C,DoB:20071231,ctzIssDate:20190325,MHAAddress,mhaAddrType:A,BuildingName:123113afweaafawe aefa121,UnitNo:12,BlkNo:212,StrtName:faea eae,FlrNo:12,InvalidAddressTag:D,Quantity:1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 73,
            "name": "the mha bulk file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 158349000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 74,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 75,
            "name": "the Mha Bulk batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 76,
            "name": "the error message contains Completely Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Completely Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:46.087Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 782000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 227,
        "name": "Datasource should not process record(s) of mismatch MHA address indicator with type",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-of-mismatch-mha-address-indicator-with-type;;2",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 219,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "A",
                  "A",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12272000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 222,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 224,
            "name": "the error message contains Invalid address indicator",
            "match": {
              "arguments": [
                {
                  "val": "Invalid address indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:59.214Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 496000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 228,
        "name": "Datasource should not process record(s) of mismatch MHA address indicator with type",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-of-mismatch-mha-address-indicator-with-type;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 219,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "-",
                  "B",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49484000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 222,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 224,
            "name": "the error message contains Invalid address indicator",
            "match": {
              "arguments": [
                {
                  "val": "Invalid address indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:49.254Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 549000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 229,
        "name": "Datasource should not process record(s) of mismatch MHA address indicator with type",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-of-mismatch-mha-address-indicator-with-type;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 219,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "P",
                  "C",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12252000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 222,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 2000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 224,
            "name": "the error message contains Invalid address indicator",
            "match": {
              "arguments": [
                {
                  "val": "Invalid address indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:02.111Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 517000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 230,
        "name": "Datasource should not process record(s) of mismatch MHA address indicator with type",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-of-mismatch-mha-address-indicator-with-type;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 219,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "Y",
                  "D",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12301000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 222,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 224,
            "name": "the error message contains Invalid address indicator",
            "match": {
              "arguments": [
                {
                  "val": "Invalid address indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:14.991Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 468000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 231,
        "name": "Datasource should not process record(s) of mismatch MHA address indicator with type",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-of-mismatch-mha-address-indicator-with-type;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 219,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "O",
                  "E",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12169000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 222,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 224,
            "name": "the error message contains Invalid address indicator",
            "match": {
              "arguments": [
                {
                  "val": "Invalid address indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:27.693Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 452000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 232,
        "name": "Datasource should not process record(s) of mismatch MHA address indicator with type",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-of-mismatch-mha-address-indicator-with-type;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 219,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "B",
                  "F",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12201000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 222,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 224,
            "name": "the error message contains Invalid address indicator",
            "match": {
              "arguments": [
                {
                  "val": "Invalid address indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:40.407Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 430000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 233,
        "name": "Datasource should not process record(s) of mismatch MHA address indicator with type",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-of-mismatch-mha-address-indicator-with-type;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 219,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "R",
                  "Q",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12108000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 222,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 224,
            "name": "the error message contains Invalid address indicator",
            "match": {
              "arguments": [
                {
                  "val": "Invalid address indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:52.993Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 414000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 234,
        "name": "Datasource should not process record(s) of mismatch MHA address indicator with type",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-of-mismatch-mha-address-indicator-with-type;;9",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 219,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "U",
                  "I",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12177000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 222,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 224,
            "name": "the error message contains Invalid address indicator",
            "match": {
              "arguments": [
                {
                  "val": "Invalid address indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:05.633Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 402000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 235,
        "name": "Datasource should not process record(s) of mismatch MHA address indicator with type",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-of-mismatch-mha-address-indicator-with-type;;10",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 219,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "T",
                  "-",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12159000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 222,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 224,
            "name": "the error message contains Invalid address indicator",
            "match": {
              "arguments": [
                {
                  "val": "Invalid address indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:18.264Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 414000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 236,
        "name": "Datasource should not process record(s) of mismatch MHA address indicator with type",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-of-mismatch-mha-address-indicator-with-type;;11",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 219,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "Z",
                  "H",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49190000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 222,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 224,
            "name": "the error message contains Invalid address indicator",
            "match": {
              "arguments": [
                {
                  "val": "Invalid address indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:57:07.920Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 478000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 237,
        "name": "Datasource should not process record(s) of mismatch MHA address indicator with type",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-of-mismatch-mha-address-indicator-with-type;;12",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 219,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "C",
                  "R",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49700000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 222,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 2000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 224,
            "name": "the error message contains Invalid address indicator",
            "match": {
              "arguments": [
                {
                  "val": "Invalid address indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:57:58.150Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 464000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 440,
        "name": "Datasource service partial and completely duplicated records",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-service-partial-and-completely-duplicated-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 441,
            "name": "the mha bulk file is being created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsBeingCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 442,
            "name": "the mha bulk file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Singaporean,M,Name:Laksa Boy,Nric:S1412535C,ctzIssDate:20190325,MHAAddress,BuildingName:123113afweaafawe aefa121,UnitNo:12,BlkNo:212,StrtName:faea eae,FlrNo:12,InvalidAddressTag:D,Quantity:1"
                ]
              },
              {
                "cells": [
                  "Singaporean,M,Name:Laksa Boy,Nric:S1412535C,ctzIssDate:20190325,MHAAddress,BuildingName:123113afweaafawe aefa121,UnitNo:12,BlkNo:212,StrtName:faea eae,FlrNo:12,InvalidAddressTag:D,Quantity:1"
                ]
              },
              {
                "cells": [
                  "Singaporean,M,Name:Laksa Girl,Nric:S1412535C,ctzIssDate:20190110,MHAAddress,BuildingName:987456afweaafawe aefa454,UnitNo:11,BlkNo:515,StrtName:seee eae,FlrNo:12,InvalidAddressTag:D,Quantity:1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 446,
            "name": "the mha bulk file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 50832000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 447,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 448,
            "name": "the Mha Bulk batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 449,
            "name": "the error message contains Partially Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:46:39.578Z",
        "before": [
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 60000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 2351000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 87,
        "name": "Datasource should not process file(s) with either invalid DateOfRun or CutOffDate",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-file(s)-with-either-invalid-dateofrun-or-cutoffdate;;2",
        "after": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 130000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 150000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "the mha bulk file is created with DateOfRun EMPTY and CutOffDate CurrentDate with one record",
            "match": {
              "arguments": [
                {
                  "val": "EMPTY",
                  "offset": 44
                },
                {
                  "val": "CurrentDate",
                  "offset": 65
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreatedWithDateOfRunDateOfRunAndCutOffDateCutOffDate(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3271000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 46000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the Mha Bulk batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 2000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 53000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "the error message contains Wrong header length.",
            "match": {
              "arguments": [
                {
                  "val": "Wrong header length.",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 4000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:46:45.794Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 570000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 88,
        "name": "Datasource should not process file(s) with either invalid DateOfRun or CutOffDate",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-file(s)-with-either-invalid-dateofrun-or-cutoffdate;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "the mha bulk file is created with DateOfRun CurrentDate and CutOffDate EMPTY with one record",
            "match": {
              "arguments": [
                {
                  "val": "CurrentDate",
                  "offset": 44
                },
                {
                  "val": "EMPTY",
                  "offset": 71
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreatedWithDateOfRunDateOfRunAndCutOffDateCutOffDate(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1508000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the Mha Bulk batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "the error message contains Wrong header length.",
            "match": {
              "arguments": [
                {
                  "val": "Wrong header length.",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:46:47.943Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 508000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 89,
        "name": "Datasource should not process file(s) with either invalid DateOfRun or CutOffDate",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-file(s)-with-either-invalid-dateofrun-or-cutoffdate;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "the mha bulk file is created with DateOfRun SPACE and CutOffDate CurrentDate with one record",
            "match": {
              "arguments": [
                {
                  "val": "SPACE",
                  "offset": 44
                },
                {
                  "val": "CurrentDate",
                  "offset": 65
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreatedWithDateOfRunDateOfRunAndCutOffDateCutOffDate(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12592000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the Mha Bulk batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "the error message contains size must be between 8 and 8, Must be in yyyyMMdd date format",
            "match": {
              "arguments": [
                {
                  "val": "size must be between 8 and 8, Must be in yyyyMMdd date format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:47:01.097Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 491000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 90,
        "name": "Datasource should not process file(s) with either invalid DateOfRun or CutOffDate",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-file(s)-with-either-invalid-dateofrun-or-cutoffdate;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "the mha bulk file is created with DateOfRun CurrentDate and CutOffDate SPACE with one record",
            "match": {
              "arguments": [
                {
                  "val": "CurrentDate",
                  "offset": 44
                },
                {
                  "val": "SPACE",
                  "offset": 71
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreatedWithDateOfRunDateOfRunAndCutOffDateCutOffDate(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12520000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the Mha Bulk batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "the error message contains size must be between 8 and 8, Must be in yyyyMMdd date format",
            "match": {
              "arguments": [
                {
                  "val": "size must be between 8 and 8, Must be in yyyyMMdd date format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:47:14.174Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 528000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 91,
        "name": "Datasource should not process file(s) with either invalid DateOfRun or CutOffDate",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-file(s)-with-either-invalid-dateofrun-or-cutoffdate;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "the mha bulk file is created with DateOfRun CurrentDate - 1 and CutOffDate CurrentDate with one record",
            "match": {
              "arguments": [
                {
                  "val": "CurrentDate - 1",
                  "offset": 44
                },
                {
                  "val": "CurrentDate",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreatedWithDateOfRunDateOfRunAndCutOffDateCutOffDate(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12461000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the Mha Bulk batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "the error message contains Extraction Date must be equal/after Cut-off Date",
            "match": {
              "arguments": [
                {
                  "val": "Extraction Date must be equal/after Cut-off Date",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:47:27.228Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 496000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 92,
        "name": "Datasource should not process file(s) with either invalid DateOfRun or CutOffDate",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-file(s)-with-either-invalid-dateofrun-or-cutoffdate;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "the mha bulk file is created with DateOfRun CurrentDate and CutOffDate CurrentDate + 1 with one record",
            "match": {
              "arguments": [
                {
                  "val": "CurrentDate",
                  "offset": 44
                },
                {
                  "val": "CurrentDate + 1",
                  "offset": 71
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreatedWithDateOfRunDateOfRunAndCutOffDateCutOffDate(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12286000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the Mha Bulk batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "the error message contains Extraction Date must be equal/after Cut-off Date",
            "match": {
              "arguments": [
                {
                  "val": "Extraction Date must be equal/after Cut-off Date",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:47:40.071Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 487000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 93,
        "name": "Datasource should not process file(s) with either invalid DateOfRun or CutOffDate",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-file(s)-with-either-invalid-dateofrun-or-cutoffdate;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "the mha bulk file is created with DateOfRun CurrentDate + 1 and CutOffDate CurrentDate with one record",
            "match": {
              "arguments": [
                {
                  "val": "CurrentDate + 1",
                  "offset": 44
                },
                {
                  "val": "CurrentDate",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreatedWithDateOfRunDateOfRunAndCutOffDateCutOffDate(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12758000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the Mha Bulk batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "the error message contains Extraction date cannot be after File Received date",
            "match": {
              "arguments": [
                {
                  "val": "Extraction date cannot be after File Received date",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:47:53.368Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 495000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 94,
        "name": "Datasource should not process file(s) with either invalid DateOfRun or CutOffDate",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-file(s)-with-either-invalid-dateofrun-or-cutoffdate;;9",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "the mha bulk file is created with DateOfRun CurrentDate + 1 and CutOffDate CurrentDate + 1 with one record",
            "match": {
              "arguments": [
                {
                  "val": "CurrentDate + 1",
                  "offset": 44
                },
                {
                  "val": "CurrentDate + 1",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreatedWithDateOfRunDateOfRunAndCutOffDateCutOffDate(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12755000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the Mha Bulk batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "the error message contains Extraction date cannot be after File Received date, Cut-off date cannot be after File Received date",
            "match": {
              "arguments": [
                {
                  "val": "Extraction date cannot be after File Received date, Cut-off date cannot be after File Received date",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:06.664Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 485000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 95,
        "name": "Datasource should not process file(s) with either invalid DateOfRun or CutOffDate",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-file(s)-with-either-invalid-dateofrun-or-cutoffdate;;10",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "the mha bulk file is created with DateOfRun 31052020 and CutOffDate CurrentDate + 1 with one record",
            "match": {
              "arguments": [
                {
                  "val": "31052020",
                  "offset": 44
                },
                {
                  "val": "CurrentDate + 1",
                  "offset": 68
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreatedWithDateOfRunDateOfRunAndCutOffDateCutOffDate(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12242000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the Mha Bulk batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "the error message contains Must be in yyyyMMdd date format",
            "match": {
              "arguments": [
                {
                  "val": "Must be in yyyyMMdd date format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:19.444Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 455000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 96,
        "name": "Datasource should not process file(s) with either invalid DateOfRun or CutOffDate",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-file(s)-with-either-invalid-dateofrun-or-cutoffdate;;11",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "the mha bulk file is created with DateOfRun CurrentDate and CutOffDate 10102020 with one record",
            "match": {
              "arguments": [
                {
                  "val": "CurrentDate",
                  "offset": 44
                },
                {
                  "val": "10102020",
                  "offset": 71
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreatedWithDateOfRunDateOfRunAndCutOffDateCutOffDate(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12221000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the Mha Bulk batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "the error message contains Must be in yyyyMMdd date format",
            "match": {
              "arguments": [
                {
                  "val": "Must be in yyyyMMdd date format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:32.200Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 449000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 252,
        "name": "Datasource should not process record(s) with invalid address tag",
        "description": "  \"\"\"\n    Possible value for Invalid Address Tag are: D, M, F, G, I, N, P, S, \" \"\n    \"\"\"",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-address-tag;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "Z",
                  "A",
                  "63",
                  "41",
                  "77I",
                  "Adams Prairie",
                  "Mayer, Pacocha and Kuhlman",
                  "0570",
                  "634269",
                  "A",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12227000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 247,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 248,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 249,
            "name": "the error message contains Wrong Invalid Address Indicator",
            "match": {
              "arguments": [
                {
                  "val": "Wrong Invalid Address Indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:44.945Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 491000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 253,
        "name": "Datasource should not process record(s) with invalid address tag",
        "description": "  \"\"\"\n    Possible value for Invalid Address Tag are: D, M, F, G, I, N, P, S, \" \"\n    \"\"\"",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-address-tag;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "C",
                  "C",
                  "63",
                  "41",
                  "77I",
                  "Adams Prairie",
                  "Mayer, Pacocha and Kuhlman",
                  "0570",
                  "634269",
                  "B",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12364000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 247,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 248,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 249,
            "name": "the error message contains Wrong Invalid Address Indicator",
            "match": {
              "arguments": [
                {
                  "val": "Wrong Invalid Address Indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:57.853Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 432000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 254,
        "name": "Datasource should not process record(s) with invalid address tag",
        "description": "  \"\"\"\n    Possible value for Invalid Address Tag are: D, M, F, G, I, N, P, S, \" \"\n    \"\"\"",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-address-tag;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "-",
                  "S",
                  "19",
                  "91",
                  "520",
                  "604093",
                  "",
                  "2132",
                  "2132",
                  "C",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12234000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 247,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 248,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 249,
            "name": "the error message contains Wrong Invalid Address Indicator",
            "match": {
              "arguments": [
                {
                  "val": "Wrong Invalid Address Indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:47:43.812Z",
        "before": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 74000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 2384000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 109,
        "name": "Datasource should not process files with invalid NRIC records",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-files-with-invalid-nric-records;;2",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 50000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 155000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 100,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "-",
                  "-",
                  "<AUTO>",
                  "19881003",
                  "-",
                  "M",
                  "Z",
                  "I",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "19881003"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 14701000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 103,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 104,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 105,
            "name": "the error message contains NRIC cannot be null/blank, size must be between 9 and 9",
            "match": {
              "arguments": [
                {
                  "val": "NRIC cannot be null/blank, size must be between 9 and 9",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:01.343Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 638000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 110,
        "name": "Datasource should not process files with invalid NRIC records",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-files-with-invalid-nric-records;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 100,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1234567A",
                  "-",
                  "<AUTO>",
                  "19881003",
                  "-",
                  "M",
                  "Z",
                  "I",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "19881003"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 70695000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 103,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 104,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 105,
            "name": "the error message contains Invalid NRIC",
            "match": {
              "arguments": [
                {
                  "val": "Invalid NRIC",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:12.770Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 609000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 111,
        "name": "Datasource should not process files with invalid NRIC records",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-files-with-invalid-nric-records;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 100,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T494552B",
                  "-",
                  "<AUTO>",
                  "19881003",
                  "-",
                  "M",
                  "Z",
                  "I",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "19881003"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12621000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 103,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 104,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 105,
            "name": "the error message contains size must be between 9 and 9",
            "match": {
              "arguments": [
                {
                  "val": "size must be between 9 and 9",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:26.059Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 472000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 112,
        "name": "Datasource should not process files with invalid NRIC records",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-files-with-invalid-nric-records;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 100,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "t4945521B",
                  "-",
                  "<AUTO>",
                  "19881003",
                  "-",
                  "M",
                  "Z",
                  "I",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "19881003"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 50045000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 103,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 104,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 105,
            "name": "the error message contains Invalid NRIC",
            "match": {
              "arguments": [
                {
                  "val": "Invalid NRIC",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:16.645Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 617000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 113,
        "name": "Datasource should not process files with invalid NRIC records",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-files-with-invalid-nric-records;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 100,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "s4945521B",
                  "-",
                  "<AUTO>",
                  "19881003",
                  "-",
                  "M",
                  "Z",
                  "I",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "19881003"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49545000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 103,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 104,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 105,
            "name": "the error message contains Invalid NRIC",
            "match": {
              "arguments": [
                {
                  "val": "Invalid NRIC",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:06.870Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 533000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 114,
        "name": "Datasource should not process files with invalid NRIC records",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-files-with-invalid-nric-records;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 100,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S5550000B",
                  "-",
                  "<AUTO>",
                  "19881003",
                  "-",
                  "M",
                  "Z",
                  "I",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "19881003"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49060000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 103,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 104,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 105,
            "name": "the error message contains Invalid NRIC",
            "match": {
              "arguments": [
                {
                  "val": "Invalid NRIC",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:56.530Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 550000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 115,
        "name": "Datasource should not process files with invalid NRIC records",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-files-with-invalid-nric-records;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 100,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S8880001Z",
                  "-",
                  "<AUTO>",
                  "19881003",
                  "-",
                  "M",
                  "Z",
                  "I",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "19881003"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49329000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 103,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 104,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 105,
            "name": "the error message contains Invalid NRIC",
            "match": {
              "arguments": [
                {
                  "val": "Invalid NRIC",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:46.475Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 534000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 280,
        "name": "Datasource should not process record(s) with invalid citizen attainment date",
        "description": "  \"\"\"\n    Clarified with PO with the following possible scenario:\n\n    (Q) Can DOB & DOD be on the same date?\n    (A) Possible if we are ingesting citizens once they are born but we are not. For now, there is no need to implement this check.\n\n    (Q) Can citizen attainment date & DOD be on the same date?\n    (A) Possible. For now, there is no need to implement this check.\n\n    (Q) Can citizen attainment date be after DOD?\n    (A) Not likely. For now, there is no need to implement this check since they are separate entities.\n\n    Hence, will be excluding the above mention scenario(s).\n    \"\"\"",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-citizen-attainment-date;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 272,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "U",
                  "Z",
                  "B",
                  "63",
                  "41",
                  "77I",
                  "Adams Prairie",
                  "Mayer, Pacocha and Kuhlman",
                  "0570",
                  "634269",
                  "-",
                  "00000000"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12430000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 275,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 276,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 277,
            "name": "the error message contains Must be in yyyyMMdd date format",
            "match": {
              "arguments": [
                {
                  "val": "Must be in yyyyMMdd date format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:59.496Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 470000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 281,
        "name": "Datasource should not process record(s) with invalid citizen attainment date",
        "description": "  \"\"\"\n    Clarified with PO with the following possible scenario:\n\n    (Q) Can DOB & DOD be on the same date?\n    (A) Possible if we are ingesting citizens once they are born but we are not. For now, there is no need to implement this check.\n\n    (Q) Can citizen attainment date & DOD be on the same date?\n    (A) Possible. For now, there is no need to implement this check.\n\n    (Q) Can citizen attainment date be after DOD?\n    (A) Not likely. For now, there is no need to implement this check since they are separate entities.\n\n    Hence, will be excluding the above mention scenario(s).\n    \"\"\"",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-citizen-attainment-date;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 272,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "U",
                  "Z",
                  "B",
                  "63",
                  "41",
                  "77I",
                  "Adams Prairie",
                  "Mayer, Pacocha and Kuhlman",
                  "0570",
                  "634269",
                  "-",
                  "00001015"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12196000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 275,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 276,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 277,
            "name": "the error message contains Must be in yyyyMMdd date format",
            "match": {
              "arguments": [
                {
                  "val": "Must be in yyyyMMdd date format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:12.210Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 447000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 282,
        "name": "Datasource should not process record(s) with invalid citizen attainment date",
        "description": "  \"\"\"\n    Clarified with PO with the following possible scenario:\n\n    (Q) Can DOB & DOD be on the same date?\n    (A) Possible if we are ingesting citizens once they are born but we are not. For now, there is no need to implement this check.\n\n    (Q) Can citizen attainment date & DOD be on the same date?\n    (A) Possible. For now, there is no need to implement this check.\n\n    (Q) Can citizen attainment date be after DOD?\n    (A) Not likely. For now, there is no need to implement this check since they are separate entities.\n\n    Hence, will be excluding the above mention scenario(s).\n    \"\"\"",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-citizen-attainment-date;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 272,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "U",
                  "Z",
                  "B",
                  "63",
                  "41",
                  "77I",
                  "Adams Prairie",
                  "Mayer, Pacocha and Kuhlman",
                  "0570",
                  "634269",
                  "-",
                  "99991015"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 50215000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 275,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 276,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 277,
            "name": "the error message contains Citizenship attainment date must be year 1800 onwards, equal/before cut-off date and after date of birth",
            "match": {
              "arguments": [
                {
                  "val": "Citizenship attainment date must be year 1800 onwards, equal/before cut-off date and after date of birth",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:02.924Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 480000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 283,
        "name": "Datasource should not process record(s) with invalid citizen attainment date",
        "description": "  \"\"\"\n    Clarified with PO with the following possible scenario:\n\n    (Q) Can DOB & DOD be on the same date?\n    (A) Possible if we are ingesting citizens once they are born but we are not. For now, there is no need to implement this check.\n\n    (Q) Can citizen attainment date & DOD be on the same date?\n    (A) Possible. For now, there is no need to implement this check.\n\n    (Q) Can citizen attainment date be after DOD?\n    (A) Not likely. For now, there is no need to implement this check since they are separate entities.\n\n    Hence, will be excluding the above mention scenario(s).\n    \"\"\"",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-citizen-attainment-date;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 272,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "U",
                  "Z",
                  "B",
                  "63",
                  "41",
                  "77I",
                  "Adams Prairie",
                  "Mayer, Pacocha and Kuhlman",
                  "0570",
                  "634269",
                  "-",
                  "19901015"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 51083000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 275,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 276,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 277,
            "name": "the error message contains Citizenship attainment date must be year 1800 onwards, equal/before cut-off date and after date of birth",
            "match": {
              "arguments": [
                {
                  "val": "Citizenship attainment date must be year 1800 onwards, equal/before cut-off date and after date of birth",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:54.542Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 514000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 284,
        "name": "Datasource should not process record(s) with invalid citizen attainment date",
        "description": "  \"\"\"\n    Clarified with PO with the following possible scenario:\n\n    (Q) Can DOB & DOD be on the same date?\n    (A) Possible if we are ingesting citizens once they are born but we are not. For now, there is no need to implement this check.\n\n    (Q) Can citizen attainment date & DOD be on the same date?\n    (A) Possible. For now, there is no need to implement this check.\n\n    (Q) Can citizen attainment date be after DOD?\n    (A) Not likely. For now, there is no need to implement this check since they are separate entities.\n\n    Hence, will be excluding the above mention scenario(s).\n    \"\"\"",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-citizen-attainment-date;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 272,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "U",
                  "Z",
                  "B",
                  "63",
                  "41",
                  "77I",
                  "Adams Prairie",
                  "Mayer, Pacocha and Kuhlman",
                  "0570",
                  "634269",
                  "-",
                  "17991015"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 52041000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 275,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 276,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 277,
            "name": "the error message contains Citizenship attainment date must be year 1800 onwards, equal/before cut-off date and after date of birth",
            "match": {
              "arguments": [
                {
                  "val": "Citizenship attainment date must be year 1800 onwards, equal/before cut-off date and after date of birth",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:47.152Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 484000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 285,
        "name": "Datasource should not process record(s) with invalid citizen attainment date",
        "description": "  \"\"\"\n    Clarified with PO with the following possible scenario:\n\n    (Q) Can DOB & DOD be on the same date?\n    (A) Possible if we are ingesting citizens once they are born but we are not. For now, there is no need to implement this check.\n\n    (Q) Can citizen attainment date & DOD be on the same date?\n    (A) Possible. For now, there is no need to implement this check.\n\n    (Q) Can citizen attainment date be after DOD?\n    (A) Not likely. For now, there is no need to implement this check since they are separate entities.\n\n    Hence, will be excluding the above mention scenario(s).\n    \"\"\"",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-citizen-attainment-date;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 272,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "20050406",
                  "U",
                  "Z",
                  "B",
                  "63",
                  "41",
                  "77I",
                  "Adams Prairie",
                  "Mayer, Pacocha and Kuhlman",
                  "0570",
                  "634269",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 52544000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 275,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 276,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 277,
            "name": "the error message contains Missing citizenship attainment date for FIN holder",
            "match": {
              "arguments": [
                {
                  "val": "Missing citizenship attainment date for FIN holder",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:42:21.497Z",
        "before": [
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 74000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 2302000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 45,
        "name": "Datasource service partial duplicated records",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-service-partial-duplicated-records",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 85000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 83000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 46,
            "name": "the mha bulk file is being created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsBeingCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 72000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 47,
            "name": "the mha bulk file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Singaporean,M,Name:Laksa Girl,Nric:S1412535C,ctzIssDate:20190325,MHAAddress,BuildingName:123113afweaafawe aefa121,UnitNo:12,BlkNo:212,StrtName:faea eae,FlrNo:12,InvalidAddressTag:D,Quantity:1"
                ]
              },
              {
                "cells": [
                  "Singaporean,M,Name:Laksa Boy,Nric:S1412535C,ctzIssDate:20190325,MHAAddress,BuildingName:123113afweaafawe aefa121,UnitNo:12,BlkNo:212,StrtName:faea eae,FlrNo:12,InvalidAddressTag:D,Quantity:1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 50,
            "name": "the mha bulk file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 70119000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 51,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 52,
            "name": "the Mha Bulk batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 53,
            "name": "the error message contains Partially Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:43:34.419Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 694000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 197,
        "name": "Datasource should not process record(s) with invalid gender",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-gender;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 189,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "A",
                  "Z",
                  "D",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12549000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 192,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 193,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 194,
            "name": "the error message contains Gender can only be M, F or U",
            "match": {
              "arguments": [
                {
                  "val": "Gender can only be M, F or U",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:43:47.754Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 509000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 198,
        "name": "Datasource should not process record(s) with invalid gender",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-gender;;3",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 189,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "-",
                  "Z",
                  "D",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12219000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 192,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 193,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 194,
            "name": "the error message contains Gender field cannot be empty",
            "match": {
              "arguments": [
                {
                  "val": "Gender field cannot be empty",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:44:00.553Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 469000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 413,
        "name": "To verify that Datasource should flag repeating record that already persisted in database as error when the person is a foreigner turned SG",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;to-verify-that-datasource-should-flag-repeating-record-that-already-persisted-in-database-as-error-when-the-person-is-a-foreigner-turned-sg;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 398,
            "name": "MHA send MHA_BULK_CITIZEN file with date of run on 20200413 and cut off date on 20191231",
            "match": {
              "arguments": [
                {
                  "val": "20200413",
                  "offset": 51
                },
                {
                  "val": "20191231",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.dateOfRunOnDATE_OF_RUNCutOffDateOnCUT_OF_DATE(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 399,
            "name": "the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T3455467B",
                  "F9523330U",
                  "Bob The Builder",
                  "20000505",
                  "-",
                  "M",
                  "-",
                  "S",
                  "19",
                  "91",
                  "520",
                  "604093",
                  "",
                  "2132",
                  "2132",
                  "-",
                  "20010505"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 133508000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 402,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 403,
            "name": "the Mha Bulk Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 404,
            "name": "MHA send MHA_BULK_CITIZEN file with date of run on 20200415 and cut off date on 20200131",
            "match": {
              "arguments": [
                {
                  "val": "20200415",
                  "offset": 51
                },
                {
                  "val": "20200131",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.dateOfRunOnDATE_OF_RUNCutOffDateOnCUT_OF_DATE(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 405,
            "name": "the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T3455467B",
                  "F9523330U",
                  "Bob The Builder",
                  "20000505",
                  "-",
                  "M",
                  "-",
                  "S",
                  "19",
                  "91",
                  "520",
                  "604093",
                  "",
                  "2132",
                  "2132",
                  "-",
                  "20010505"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 48998000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 408,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 409,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 410,
            "name": "the error message contains Duplicate NRIC exists in the database",
            "match": {
              "arguments": [
                {
                  "val": "Duplicate NRIC exists in the database",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:13.019Z",
        "before": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 71000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 2975000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 56,
        "name": "Datasource service partial duplicated records and one valid record",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-service-partial-duplicated-records-and-one-valid-record",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 68000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 87000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 57,
            "name": "the mha bulk file is being created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsBeingCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 72000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 58,
            "name": "the mha bulk file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Singaporean,M,Name:Laksa Girl,Nric:S1412535C,ctzIssDate:20190325,MHAAddress,BuildingName:123113afweaafawe aefa121,UnitNo:12,BlkNo:212,StrtName:faea eae,FlrNo:12,InvalidAddressTag:D,Quantity:1"
                ]
              },
              {
                "cells": [
                  "Singaporean,M,Name:Laksa Boy,Nric:S1412535C,ctzIssDate:20190325,MHAAddress,BuildingName:123113afweaafawe aefa121,UnitNo:12,BlkNo:212,StrtName:faea eae,FlrNo:12,InvalidAddressTag:D,Quantity:1"
                ]
              },
              {
                "cells": [
                  "PermanentResident,DoB:19860901,Name:Roti John,F,DoD:DeathBeforeBirth,Overseas,BlkNo:212,StrtName:faea eae,FlrNo:12,BuildingName:123113afweaafawe aefa121,mhaAddrType:A,Quantity:1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 62,
            "name": "the mha bulk file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 72601000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 63,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 32000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 64,
            "name": "the Mha Bulk batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 65,
            "name": "the error message contains Partially Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:29.070Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 847000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 213,
        "name": "Datasource should not process record(s) of mismatch NCA address indicator with type",
        "description": "  \"\"\"\n    Mapping of NCA address indicator to address type can only be : \" \" to S\n    \"\"\"",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-of-mismatch-nca-address-indicator-with-type;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 46000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 205,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "-",
                  "C",
                  "19",
                  "91",
                  "520",
                  "604093",
                  "",
                  "2132",
                  "2132",
                  "-",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 50161000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 208,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 209,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 210,
            "name": "the error message contains Invalid address indicator",
            "match": {
              "arguments": [
                {
                  "val": "Invalid address indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:20.193Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 651000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 214,
        "name": "Datasource should not process record(s) of mismatch NCA address indicator with type",
        "description": "  \"\"\"\n    Mapping of NCA address indicator to address type can only be : \" \" to S\n    \"\"\"",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-of-mismatch-nca-address-indicator-with-type;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 33000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 205,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "Z",
                  "S",
                  "19",
                  "91",
                  "520",
                  "604093",
                  "",
                  "2132",
                  "2132",
                  "-",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49465000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 208,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 209,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 210,
            "name": "the error message contains Invalid address indicator",
            "match": {
              "arguments": [
                {
                  "val": "Invalid address indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:10.458Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 672000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 215,
        "name": "Datasource should not process record(s) of mismatch NCA address indicator with type",
        "description": "  \"\"\"\n    Mapping of NCA address indicator to address type can only be : \" \" to S\n    \"\"\"",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-of-mismatch-nca-address-indicator-with-type;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 205,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "-",
                  "M",
                  "C",
                  "S",
                  "19",
                  "91",
                  "520",
                  "604093",
                  "",
                  "2132",
                  "2132",
                  "-",
                  "20050802"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 49327000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 208,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 209,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 210,
            "name": "the error message contains Invalid address indicator",
            "match": {
              "arguments": [
                {
                  "val": "Invalid address indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:00.535Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 622000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 437,
        "name": "To verify that Datasource should flag repeating record that already persisted in database as error when the person has ceased citizenship",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;to-verify-that-datasource-should-flag-repeating-record-that-already-persisted-in-database-as-error-when-the-person-has-ceased-citizenship;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 417,
            "name": "MHA send MHA_BULK_CITIZEN file with date of run on 20200213 and cut off date on 20191231",
            "match": {
              "arguments": [
                {
                  "val": "20200213",
                  "offset": 51
                },
                {
                  "val": "20191231",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.dateOfRunOnDATE_OF_RUNCutOffDateOnCUT_OF_DATE(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 418,
            "name": "the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T3455467B",
                  "F9523330U",
                  "Bob The Builder",
                  "20000505",
                  "-",
                  "M",
                  "-",
                  "S",
                  "19",
                  "91",
                  "520",
                  "604093",
                  "",
                  "2132",
                  "2132",
                  "-",
                  "20010505"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 134246000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 421,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 422,
            "name": "the Mha Bulk Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 423,
            "name": "MHA send MHA_CEASED_CITIZEN file on 20200310 with the following data:",
            "match": {
              "arguments": [
                {
                  "val": "20200310",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.AssessableIncomeSteps.mhaSendMHA_CEASED_CITIZENFileOnWithTheFollowingData(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "NAME",
                  "NATIONALITY",
                  "CESSATION_DATE"
                ]
              },
              {
                "cells": [
                  "T3455467B",
                  "Bob The Builder",
                  "OO",
                  "20200302"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20251000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 426,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 427,
            "name": "the Mha Ceased Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 428,
            "name": "MHA send MHA_BULK_CITIZEN file with date of run on 20200415 and cut off date on 20200131",
            "match": {
              "arguments": [
                {
                  "val": "20200415",
                  "offset": 51
                },
                {
                  "val": "20200131",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.dateOfRunOnDATE_OF_RUNCutOffDateOnCUT_OF_DATE(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 429,
            "name": "the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T3455467B",
                  "F9523330U",
                  "Bob The Builder",
                  "20000505",
                  "-",
                  "M",
                  "-",
                  "S",
                  "19",
                  "91",
                  "520",
                  "604093",
                  "",
                  "2132",
                  "2132",
                  "-",
                  "20010505"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 48241000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 432,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 433,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 434,
            "name": "the error message contains Duplicate NRIC exists in the database",
            "match": {
              "arguments": [
                {
                  "val": "Duplicate NRIC exists in the database",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:19.537Z",
        "before": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 53000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 2314000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 118,
        "name": "Datasource should not process record(s) with same FIN",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-same-fin",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 79000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 93000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 119,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T7754288J",
                  "G2020975K",
                  "Marry",
                  "20010719",
                  "-",
                  "F",
                  "Z",
                  "C",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20010719"
                ]
              },
              {
                "cells": [
                  "T8741641G",
                  "G2020975K",
                  "Marry",
                  "20010719",
                  "-",
                  "F",
                  "Z",
                  "C",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20010719"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 71741000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 123,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 124,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 125,
            "name": "the error message contains Partially Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:33.992Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 658000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 310,
        "name": "To verify record is persisted correctly in database when person & residential address does not exist in database",
        "description": "  \"\"\"\n    Verify that the record(s) in database to satisfy the following:\n    1) PersonId, PersonName, Gender, PersonDetail, Nationality must have valid from DOB\n    2) PropertyDetail valid from Date Of Run\n    3) PersonProperty valid from 31 December of preceding year\n    \"\"\"",
        "id": "data-processing-for-mha-bulk-citizen-file;to-verify-record-is-persisted-correctly-in-database-when-person-&-residential-address-does-not-exist-in-database;;2",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 41000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 295,
            "name": "MHA send MHA_BULK_CITIZEN file with date of run on 20200413 and cut off date on 20191231",
            "match": {
              "arguments": [
                {
                  "val": "20200413",
                  "offset": 51
                },
                {
                  "val": "20191231",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.dateOfRunOnDATE_OF_RUNCutOffDateOnCUT_OF_DATE(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 296,
            "name": "the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T3455467B",
                  "-",
                  "Bob The Builder",
                  "20000505",
                  "-",
                  "M",
                  "Z",
                  "A",
                  "104",
                  "10",
                  "537",
                  "Bukit Batok Street 52",
                  "Bukit Batok Estate",
                  "-",
                  "650537",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 133702000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 299,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 300,
            "name": "the Mha Bulk Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 97000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 301,
            "name": "I verify that a NRIC record is created in PERSON_ID table that valid from 20000505",
            "match": {
              "arguments": [
                {
                  "val": "NRIC",
                  "offset": 16
                },
                {
                  "val": "20000505",
                  "offset": 74
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatANricRecordIsCreatedInPERSON_IDTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 302,
            "name": "I verify that a record with name Bob The Builder is created in PERSON_NAME table that valid from 20000505",
            "match": {
              "arguments": [
                {
                  "val": "Bob The Builder",
                  "offset": 33
                },
                {
                  "val": "20000505",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPERSON_NAMETableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 303,
            "name": "I verify that a record with gender type M is created in GENDER table that valid from 20000505",
            "match": {
              "arguments": [
                {
                  "val": "M",
                  "offset": 40
                },
                {
                  "val": "20000505",
                  "offset": 85
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInGENDERTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 304,
            "name": "I verify that a record with date of birth 20000505 is created in PERSON_DETAIL table that valid from 20000505",
            "match": {
              "arguments": [
                {
                  "val": "20000505",
                  "offset": 42
                },
                {
                  "val": "20000505",
                  "offset": 101
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPERSON_DETAILTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 305,
            "name": "I verify that a record with type SINGAPORE_CITIZEN is created in NATIONALITY table that valid from 20000505",
            "match": {
              "arguments": [
                {
                  "val": "SINGAPORE_CITIZEN",
                  "offset": 33
                },
                {
                  "val": "20000505",
                  "offset": 99
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInNATIONALITYTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 48000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 306,
            "name": "I verify that a record is created in PROPERTY_DETAIL that valid from 20191231",
            "match": {
              "arguments": [
                {
                  "val": "20191231",
                  "offset": 69
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPROPERTY_DETAILThatValidFromDATE_OF_RUN(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 307,
            "name": "I verify that a record with type RESIDENCE is created in PERSON_PROPERTY that valid from 31 December of preceding year",
            "match": {
              "arguments": [
                {
                  "val": "RESIDENCE",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPERSON_PROPERTYThatValidFromDecemberOfPrecedingYear(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:41:59.176Z",
        "before": [
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 69000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 2517000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 22,
        "name": "Datasource service processes a MHA bulk citizen file",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-service-processes-a-mha-bulk-citizen-file",
        "after": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 66000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 88000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 23,
            "name": "the mha bulk file is being created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsBeingCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 67000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 24,
            "name": "the mha bulk file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Singaporean,M,Name:Laksa Boy,Fin:F8100327X,ctzIssDate:20190325,MHAAddress,BuildingName:123113afweaafawe aefa121,UnitNo:12,BlkNo:212,StrtName:faea eae,FlrNo:12,InvalidAddressTag: ,Quantity:1"
                ]
              },
              {
                "cells": [
                  "PermanentResident,Nric:S3450033I,DoB:19860901,Name:Mee Siam,F,Overseas,mhaAddrType:C,BlkNo:212,StrtName:faea eae,FlrNo:12,BuildingName:123113afweaafawe aefa121,mhaAddrType:A,Quantity:1"
                ]
              },
              {
                "cells": [
                  "DualCitizen,Name:Wan Mo Peh,Nric:S0743815Z,M,NCAAddress,BlkNo:212,StrtCode:1h2y3u,LvlNo:131,UnitNo:123ka,Quantity:1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 29,
            "name": "the mha bulk file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 236565000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 30,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 27000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 32,
            "name": "the Mha Bulk batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 198000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 33,
            "name": "I verify that person with F8100327X is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "F8100327X",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 76000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 34,
            "name": "I verify that person with S3450033I is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S3450033I",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 63000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 35,
            "name": "I verify that person with S0743815Z is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S0743815Z",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:45:59.031Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 770000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 161,
        "name": "Datasource should not process record(s) with invalid DateOfBirth",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofbirth;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "-",
                  "John",
                  "00000000",
                  "-",
                  "F",
                  "Z",
                  "Q",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 52544000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 156,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 157,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 158,
            "name": "the error message contains Date of birth must be year 1800 onwards and equal/before cut-off date",
            "match": {
              "arguments": [
                {
                  "val": "Date of birth must be year 1800 onwards and equal/before cut-off date",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:46:52.436Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 605000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 162,
        "name": "Datasource should not process record(s) with invalid DateOfBirth",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofbirth;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "-",
                  "John",
                  "-",
                  "-",
                  "F",
                  "Z",
                  "Q",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12646000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 156,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 157,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 158,
            "name": "the error message contains Date of Birth must be in valid format",
            "match": {
              "arguments": [
                {
                  "val": "Date of Birth must be in valid format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:47:05.757Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 468000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 163,
        "name": "Datasource should not process record(s) with invalid DateOfBirth",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofbirth;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "-",
                  "John",
                  "19991301",
                  "-",
                  "F",
                  "Z",
                  "Q",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12486000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 156,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 157,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 158,
            "name": "the error message contains Date of Birth must be in valid format",
            "match": {
              "arguments": [
                {
                  "val": "Date of Birth must be in valid format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:47:18.763Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 448000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 164,
        "name": "Datasource should not process record(s) with invalid DateOfBirth",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofbirth;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "-",
                  "John",
                  "19991232",
                  "-",
                  "F",
                  "Z",
                  "Q",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12426000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 156,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 157,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 158,
            "name": "the error message contains Date of Birth must be in valid format",
            "match": {
              "arguments": [
                {
                  "val": "Date of Birth must be in valid format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:47:31.691Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 440000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 165,
        "name": "Datasource should not process record(s) with invalid DateOfBirth",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofbirth;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "-",
                  "John",
                  "20010229",
                  "-",
                  "F",
                  "Z",
                  "Q",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12455000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 156,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 157,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 158,
            "name": "the error message contains Date of Birth must be in valid format",
            "match": {
              "arguments": [
                {
                  "val": "Date of Birth must be in valid format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:47:44.640Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 461000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 166,
        "name": "Datasource should not process record(s) with invalid DateOfBirth",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofbirth;;7",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "-",
                  "John",
                  "20080101",
                  "-",
                  "F",
                  "Z",
                  "Q",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 52862000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 156,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 157,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 158,
            "name": "the error message contains Age as at 31 Dec <File Cut-off Year> must be at least 12",
            "match": {
              "arguments": [
                {
                  "val": "Age as at 31 Dec <File Cut-off Year> must be at least 12",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:38.022Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 602000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 167,
        "name": "Datasource should not process record(s) with invalid DateOfBirth",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofbirth;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "20080101",
                  "-",
                  "F",
                  "Z",
                  "Q",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20081015"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 53907000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 156,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 157,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 158,
            "name": "the error message contains Age as at 31 Dec <File Cut-off Year> must be at least 12",
            "match": {
              "arguments": [
                {
                  "val": "Age as at 31 Dec <File Cut-off Year> must be at least 12",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:32.602Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 497000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 168,
        "name": "Datasource should not process record(s) with invalid DateOfBirth",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofbirth;;9",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "-",
                  "John",
                  "00001001",
                  "-",
                  "F",
                  "Z",
                  "Q",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 54408000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 156,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 157,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 158,
            "name": "the error message contains Date of birth must be year 1800 onwards and equal/before cut-off date",
            "match": {
              "arguments": [
                {
                  "val": "Date of birth must be year 1800 onwards and equal/before cut-off date",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:27.563Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 565000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 169,
        "name": "Datasource should not process record(s) with invalid DateOfBirth",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofbirth;;10",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "-",
                  "John",
                  "17990101",
                  "-",
                  "F",
                  "Z",
                  "Q",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 51342000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 156,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 157,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 158,
            "name": "the error message contains Date of birth must be year 1800 onwards and equal/before cut-off date",
            "match": {
              "arguments": [
                {
                  "val": "Date of birth must be year 1800 onwards and equal/before cut-off date",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:19.539Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 549000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 375,
        "name": "To verify record is persisted correctly when person record does not exist in database but residential address is, and person is a foreigner turned SG",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;to-verify-record-is-persisted-correctly-when-person-record-does-not-exist-in-database-but-residential-address-is--and-person-is-a-foreigner-turned-sg;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 356,
            "name": "MHA send MHA_BULK_CITIZEN file with date of run on 20200413 and cut off date on 20191231",
            "match": {
              "arguments": [
                {
                  "val": "20200413",
                  "offset": 51
                },
                {
                  "val": "20191231",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.dateOfRunOnDATE_OF_RUNCutOffDateOnCUT_OF_DATE(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 357,
            "name": "the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T3455467B",
                  "F9523330U",
                  "Bob The Builder",
                  "20000505",
                  "-",
                  "M",
                  "-",
                  "S",
                  "19",
                  "91",
                  "520",
                  "604093",
                  "",
                  "2132",
                  "2132",
                  "-",
                  "20010505"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 360,
            "name": "the database has the following nca property persisted:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theDatabaseHasTheFollowingNcaPropertyPersisted(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_CODE",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE"
                ]
              },
              {
                "cells": [
                  "S",
                  "19",
                  "91",
                  "520",
                  "604093",
                  "",
                  "2132",
                  "2132"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 110207000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 363,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 364,
            "name": "the Mha Bulk Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 365,
            "name": "I verify that a FIN record is created in PERSON_ID table that valid till the end of day before 20010505",
            "match": {
              "arguments": [
                {
                  "val": "20010505",
                  "offset": 95
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatAFINRecordIsCreatedInPERSON_IDTableThatValidTillTheEndOfDayBeforeDOB(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 366,
            "name": "I verify that a NRIC record is created in PERSON_ID table that valid from 20010505",
            "match": {
              "arguments": [
                {
                  "val": "NRIC",
                  "offset": 16
                },
                {
                  "val": "20010505",
                  "offset": 74
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatANricRecordIsCreatedInPERSON_IDTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 367,
            "name": "I verify that a record with name Bob The Builder is created in PERSON_NAME table that valid from 20010505",
            "match": {
              "arguments": [
                {
                  "val": "Bob The Builder",
                  "offset": 33
                },
                {
                  "val": "20010505",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPERSON_NAMETableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 368,
            "name": "I verify that a record with gender type M is created in GENDER table that valid from 20010505",
            "match": {
              "arguments": [
                {
                  "val": "M",
                  "offset": 40
                },
                {
                  "val": "20010505",
                  "offset": 85
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInGENDERTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 369,
            "name": "I verify that a record with date of birth 20000505 is created in PERSON_DETAIL table that valid from 20010505",
            "match": {
              "arguments": [
                {
                  "val": "20000505",
                  "offset": 42
                },
                {
                  "val": "20010505",
                  "offset": 101
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPERSON_DETAILTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 370,
            "name": "I verify that a record with type SINGAPORE_CITIZEN is created in NATIONALITY table that valid from 20010505",
            "match": {
              "arguments": [
                {
                  "val": "SINGAPORE_CITIZEN",
                  "offset": 33
                },
                {
                  "val": "20010505",
                  "offset": 99
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInNATIONALITYTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 371,
            "name": "I verify that no record is created in PROPERTY_DETAIL",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatNoRecordIsCreatedInPROPERTY_DETAIL()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 372,
            "name": "I verify that a record with type RESIDENCE is created in PERSON_PROPERTY that valid from 31 December of preceding year",
            "match": {
              "arguments": [
                {
                  "val": "RESIDENCE",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPERSON_PROPERTYThatValidFromDecemberOfPrecedingYear(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:42:48.773Z",
        "before": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 51000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 2248000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 38,
        "name": "Datasource service processes an empty MHA bulk citizen file",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-service-processes-an-empty-mha-bulk-citizen-file",
        "after": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 126000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 64000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 39,
            "name": "the mha bulk file is being created with no records",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsBeingCreatedWithNoRecords()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2869000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 40,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 41,
            "name": "the Mha Bulk batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 42,
            "name": "the error message contains Must have at least 1 valid body record",
            "match": {
              "arguments": [
                {
                  "val": "Must have at least 1 valid body record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:42:54.303Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 596000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 181,
        "name": "Datasource should not process record(s) with invalid DateOfDeath",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofdeath;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 173,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "00001010",
                  "M",
                  "Z",
                  "E",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20100528"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12539000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 176,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 177,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 178,
            "name": "the error message contains Date of death format is invalid",
            "match": {
              "arguments": [
                {
                  "val": "Date of death format is invalid",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:43:07.531Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 532000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 182,
        "name": "Datasource should not process record(s) with invalid DateOfDeath",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofdeath;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 173,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "10102008",
                  "M",
                  "Z",
                  "E",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20100528"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12226000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 176,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 177,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 178,
            "name": "the error message contains Date of death format is invalid",
            "match": {
              "arguments": [
                {
                  "val": "Date of death format is invalid",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:43:20.350Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 498000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 183,
        "name": "Datasource should not process record(s) with invalid DateOfDeath",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofdeath;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 173,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "00000000",
                  "M",
                  "Z",
                  "E",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20100528"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12204000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 176,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 177,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 178,
            "name": "the error message contains Date of death format is invalid",
            "match": {
              "arguments": [
                {
                  "val": "Date of death format is invalid",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:43:33.116Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 521000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 184,
        "name": "Datasource should not process record(s) with invalid DateOfDeath",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofdeath;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 173,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "19990516",
                  "M",
                  "Z",
                  "E",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20100528"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 155751000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 176,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 177,
            "name": "the Mha Bulk Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 178,
            "name": "the error message contains ",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:46:09.442Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 630000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 185,
        "name": "Datasource should not process record(s) with invalid DateOfDeath",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofdeath;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 173,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "19901231",
                  "M",
                  "Z",
                  "E",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20100528"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 48524000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 176,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 177,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 178,
            "name": "the error message contains Date of death must be equal/before cut-off date and equal/after date of birth",
            "match": {
              "arguments": [
                {
                  "val": "Date of death must be equal/before cut-off date and equal/after date of birth",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:46:58.661Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 554000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 394,
        "name": "To verify that Datasource should flag repeating record that already persisted in database as error when the person is a born SG",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;to-verify-that-datasource-should-flag-repeating-record-that-already-persisted-in-database-as-error-when-the-person-is-a-born-sg;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 379,
            "name": "MHA send MHA_BULK_CITIZEN file with date of run on 20200413 and cut off date on 20191231",
            "match": {
              "arguments": [
                {
                  "val": "20200413",
                  "offset": 51
                },
                {
                  "val": "20191231",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.dateOfRunOnDATE_OF_RUNCutOffDateOnCUT_OF_DATE(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 380,
            "name": "the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T3455467B",
                  "-",
                  "Bob The Builder",
                  "20000505",
                  "-",
                  "M",
                  "-",
                  "S",
                  "19",
                  "91",
                  "520",
                  "604093",
                  "",
                  "2132",
                  "2132",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 128080000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 383,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 384,
            "name": "the Mha Bulk Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 385,
            "name": "MHA send MHA_BULK_CITIZEN file with date of run on 20200415 and cut off date on 20200131",
            "match": {
              "arguments": [
                {
                  "val": "20200415",
                  "offset": 51
                },
                {
                  "val": "20200131",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.dateOfRunOnDATE_OF_RUNCutOffDateOnCUT_OF_DATE(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 386,
            "name": "the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T3455467B",
                  "-",
                  "Bob The Builder",
                  "20000505",
                  "-",
                  "M",
                  "-",
                  "S",
                  "19",
                  "91",
                  "520",
                  "604093",
                  "",
                  "2132",
                  "2132",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 48955000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 389,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 390,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 391,
            "name": "the error message contains Duplicate NRIC exists in the database",
            "match": {
              "arguments": [
                {
                  "val": "Duplicate NRIC exists in the database",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      }
    ],
    "name": "Data processing for MHA bulk citizen file",
    "description": "",
    "id": "data-processing-for-mha-bulk-citizen-file",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_bulk_citizen.feature",
    "tags": [
      {
        "name": "@datasource",
        "location": {
          "line": 1,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@development",
        "location": {
          "line": 2,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@bulk_citizen",
        "location": {
          "line": 3,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@mha",
        "location": {
          "line": 4,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@truncate",
        "location": {
          "line": 5,
          "column": 1
        },
        "type": "Tag"
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:47:45.204Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 631000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "Mha sends a ceased citizenship file with a person detail record not found in system",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-a-person-detail-record-not-found-in-system",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 10,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18697000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 13,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 14,
            "name": "the Mha Ceased Citizen batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 15,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 16,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "NRIC not found in System.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:04.623Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 522000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 144,
        "name": "Mha sends a ceased citizenship for a citizen would was previously a dual citizen",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-for-a-citizen-would-was-previously-a-dual-citizen",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 30000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 92000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 145,
            "name": "that john was convert from a dual citizen to a singaporean 10 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 5
                },
                {
                  "val": "10",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.thatPersonWasConvertFromADualCitizenToASCDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 146,
            "name": "john's citizenship ceased 9 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "9",
                  "offset": 26
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.hisCitizenshipCeasedDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20138000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 147,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 148,
            "name": "the Mha Ceased Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 149,
            "name": "I verify that john is not a citizen 9 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 14
                },
                {
                  "val": "9",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyThatPersonIsNotACitizenDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:25.462Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 569000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 302,
        "name": "John ceased citizenship after he becomes Singapore Citizen",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;john-ceased-citizenship-after-he-becomes-singapore-citizen",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 33000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 303,
            "name": "john who is 50 years old attained his Singapore Citizenship 100 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "50",
                  "offset": 12
                },
                {
                  "val": "100",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.personAttainedHisSingaporeCitizenshipDaysAgo(java.lang.String,int,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 304,
            "name": "MHA sends a ceased citizenship file stating that john renounced his citizenship 10 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 49
                },
                {
                  "val": "10",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.mhaSendsACeasedCitizenshipFileStatingThatPersonRenouncedHisCitizenshipDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19965000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 305,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 306,
            "name": "the Mha Ceased Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 307,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 308,
            "name": "john is a non singaporean since 10 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "10",
                  "offset": 32
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.personIsANonSingaporeanSinceDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:11:24.191Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 644000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 132,
        "name": "Mha sends a ceased citizenship with an SG country code",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-with-an-sg-country-code",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 171000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 133,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizenWithSGCountryCode"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12341000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 136,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 137,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 138,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 139,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Nationality must not be SG country code",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:11:37.427Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 571000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 292,
        "name": "John ceased citizenship on the same day he becomes Singapore Citizen",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;john-ceased-citizenship-on-the-same-day-he-becomes-singapore-citizen",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 34000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 293,
            "name": "john who is 50 years old attained his Singapore Citizenship 100 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "50",
                  "offset": 12
                },
                {
                  "val": "100",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.personAttainedHisSingaporeCitizenshipDaysAgo(java.lang.String,int,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 294,
            "name": "MHA sends a ceased citizenship file stating that john renounced his citizenship 100 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 49
                },
                {
                  "val": "100",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.mhaSendsACeasedCitizenshipFileStatingThatPersonRenouncedHisCitizenshipDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18537000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 295,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 296,
            "name": "the Mha Ceased Citizen batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 297,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Renunciation Date is not after Citizenship Attainment Date.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:58:49.521Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 544000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 80,
        "name": "Mha sends a ceased citizenship file with an renunciation date that is after cut off date",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-an-renunciation-date-that-is-after-cut-off-date",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "RenunciationDateAfterCutOff"
                ]
              },
              {
                "cells": [
                  "2"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24006000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 84,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 85,
            "name": "the Mha Ceased Citizen batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 86,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 87,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Renunciation Date is after File Date of run.",
                  "2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:14.180Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 432000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 233,
        "name": "Mha sends a ceased citizenship file with various types of nationality",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-nationality;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "valid",
                  "spaces",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12186000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 226,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 227,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 228,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "must not be blank",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:26.865Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 403000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 234,
        "name": "Mha sends a ceased citizenship file with various types of nationality",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-nationality;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "valid",
                  "S",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12181000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 226,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 227,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 228,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "size must be between 2 and 2",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:39.507Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 420000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 235,
        "name": "Mha sends a ceased citizenship file with various types of nationality",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-nationality;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "valid",
                  "invalid",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12170000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 226,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 227,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 228,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Nationality must not be SG country code",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:52.143Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 421000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 236,
        "name": "Mha sends a ceased citizenship file with various types of nationality",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-nationality;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "valid",
                  "Sg",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12178000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 226,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 227,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 228,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Nationality must not be SG country code",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:00:04.791Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 407000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 237,
        "name": "Mha sends a ceased citizenship file with various types of nationality",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-nationality;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "valid",
                  "sG",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12210000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 226,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 227,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 228,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Nationality must not be SG country code",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:00:17.461Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 418000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 238,
        "name": "Mha sends a ceased citizenship file with various types of nationality",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-nationality;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "valid",
                  "sg",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12218000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 226,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 227,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 228,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Nationality must not be SG country code",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:00:30.146Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 390000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 366,
        "name": "John appears in consecutive ceased citizenship files with different cessation dates",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;john-appears-in-consecutive-ceased-citizenship-files-with-different-cessation-dates;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 146000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 359,
            "name": "john who is 12 years old had his citizenship renounced 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "12",
                  "offset": 12
                },
                {
                  "val": "5",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.personHadHisHerCitizenshipRenouncedDaysAgo(java.lang.String,int,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 360,
            "name": "MHA sends a ceased citizenship file stating that john renounced his citizenship 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 49
                },
                {
                  "val": "5",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.mhaSendsACeasedCitizenshipFileStatingThatPersonRenouncedHisCitizenshipDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18432000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 361,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 362,
            "name": "the Mha Ceased Citizen batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 363,
            "name": "the error message contains Not SC or Dual Citizen currently",
            "match": {
              "arguments": [
                {
                  "val": "Not SC or Dual Citizen currently",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:00:49.152Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 525000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 367,
        "name": "John appears in consecutive ceased citizenship files with different cessation dates",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;john-appears-in-consecutive-ceased-citizenship-files-with-different-cessation-dates;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 49000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 359,
            "name": "john who is 12 years old had his citizenship renounced 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "12",
                  "offset": 12
                },
                {
                  "val": "5",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.personHadHisHerCitizenshipRenouncedDaysAgo(java.lang.String,int,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 360,
            "name": "MHA sends a ceased citizenship file stating that john renounced his citizenship 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 49
                },
                {
                  "val": "6",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.mhaSendsACeasedCitizenshipFileStatingThatPersonRenouncedHisCitizenshipDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18435000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 361,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 362,
            "name": "the Mha Ceased Citizen batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 363,
            "name": "the error message contains Not SC or Dual Citizen currently",
            "match": {
              "arguments": [
                {
                  "val": "Not SC or Dual Citizen currently",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:01:08.199Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 521000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 368,
        "name": "John appears in consecutive ceased citizenship files with different cessation dates",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;john-appears-in-consecutive-ceased-citizenship-files-with-different-cessation-dates;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 47000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 359,
            "name": "john who is 12 years old had his citizenship renounced 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "12",
                  "offset": 12
                },
                {
                  "val": "6",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.personHadHisHerCitizenshipRenouncedDaysAgo(java.lang.String,int,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 360,
            "name": "MHA sends a ceased citizenship file stating that john renounced his citizenship 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 49
                },
                {
                  "val": "5",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.mhaSendsACeasedCitizenshipFileStatingThatPersonRenouncedHisCitizenshipDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18434000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 361,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 362,
            "name": "the Mha Ceased Citizen batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 363,
            "name": "the error message contains Not SC or Dual Citizen currently",
            "match": {
              "arguments": [
                {
                  "val": "Not SC or Dual Citizen currently",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:10.572Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 477000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 92,
        "name": "Mha sends a ceased citizenship file for processing",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-for-processing",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 133000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 93,
            "name": "the database populated with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theDatabasePopulatedWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "SingaporeCitizen",
                  "DualCitizen"
                ]
              },
              {
                "cells": [
                  "1",
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 96,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen"
                ]
              },
              {
                "cells": [
                  "2"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25612000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 99,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 100,
            "name": "the Mha Ceased Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 101,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 2",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 74000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 102,
            "name": "I verify the the people listed in the file have nationality of NON_SINGAPORE_CITIZEN",
            "match": {
              "arguments": [
                {
                  "val": "NON_SINGAPORE_CITIZEN",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.nationalityOfAllPersonShouldChangeToNON_SINGAPORE_CITIZEN(cds_automation.enums.datasource.NationalityEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 103,
            "name": "I verify the previous nationality valid till timestamp is the day before renunciation date at 2359HR",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyThePreviousNationalityValidTillTimestampIsTheRenunciationDateAtHR()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 104,
            "name": "I verify the supersede nationality valid from timestamp is the day after renunciation date",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyTheSupersedeNationalityValidFromTimestampIsTheDayAfterRenunciationDate()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:36.971Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 514000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 254,
        "name": "Mha sends a ceased citizenship file with various types of cessation date",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-cessation-date;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "valid",
                  "valid",
                  "invalid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12186000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 247,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 248,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 249,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Invalid Citizen Renunciation Date.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:49.738Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 413000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 255,
        "name": "Mha sends a ceased citizenship file with various types of cessation date",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-cessation-date;;3",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "valid",
                  "valid",
                  "futureDate"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18534000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 247,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 2000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 248,
            "name": "the Mha Ceased Citizen batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 249,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Renunciation Date is after File Date of run.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:08.750Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 451000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 256,
        "name": "Mha sends a ceased citizenship file with various types of cessation date",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-cessation-date;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "valid",
                  "valid",
                  "spaces"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12247000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 247,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 248,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 249,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Invalid Citizen Renunciation Date.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:21.499Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 462000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 257,
        "name": "Mha sends a ceased citizenship file with various types of cessation date",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-cessation-date;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "valid",
                  "valid",
                  "00000000"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12263000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 247,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 248,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 249,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Invalid Citizen Renunciation Date.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:34.271Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 440000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 258,
        "name": "Mha sends a ceased citizenship file with various types of cessation date",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-cessation-date;;6",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "valid",
                  "valid",
                  "20020000"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12207000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 247,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 248,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 249,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Invalid Citizen Renunciation Date.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:46.971Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 418000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 259,
        "name": "Mha sends a ceased citizenship file with various types of cessation date",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-cessation-date;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "valid",
                  "valid",
                  "20010229"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12413000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 247,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 248,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 249,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Invalid Citizen Renunciation Date.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:59.856Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 403000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 260,
        "name": "Mha sends a ceased citizenship file with various types of cessation date",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-cessation-date;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "valid",
                  "valid",
                  "17990101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12163000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 247,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 248,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 249,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Year value cannot be less than 1800",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:12.470Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 415000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 371,
        "name": "Mha sends a ceased citizenship file with no content (i.e totally empty file).",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-no-content-(i.e-totally-empty-file).",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 372,
            "name": "the MHA_CEASED_CITIZEN file is empty",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 4
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theFileIsEmpty(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1274000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 373,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 374,
            "name": "the Mha Ceased Citizen batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 375,
            "name": "I verify number of records in Incoming Record table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.verifyNumberOfRecordsInIncomingRecordTable(long)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 376,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Must have at least 1 valid body record.",
                  "1"
                ]
              },
              {
                "cells": [
                  "Must have 1 Footer record.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:40.235Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 544000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 107,
        "name": "Mha sends a ceased citizenship file with nationality of [SG]",
        "description": "  This is a special case that will never happen because this file is for renunciation of\n  singapore citizenship, not award singapore citizenship. Therefore, datasource will\n  ignore/skip if come across it.",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-nationality-of-[sg]",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 119000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 113,
            "name": "the database populated with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theDatabasePopulatedWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "SingaporeCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 116,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "AwardedSingaporeCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12772000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 119,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 120,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:53.719Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 525000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 263,
        "name": "Mha sends a ceased citizenship file with hybrid (both completely & partially) duplicate records",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-hybrid-(both-completely-&-partially)-duplicate-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 264,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen",
                  "NumberOfDuplication",
                  "NumberOfPartialDuplication"
                ]
              },
              {
                "cells": [
                  "1",
                  "2",
                  "2"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12748000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 267,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 268,
            "name": "the Mha Ceased Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 269,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 270,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Partially Duplicate Record found.",
                  "3"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:57:07.062Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 463000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 382,
        "name": "Mha sends a ceased citizenship file containing valid, invalid, completely, partially and hybrid duplicate records for processing",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-containing-valid--invalid--completely--partially-and-hybrid-duplicate-records-for-processing",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 31000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 383,
            "name": "the database populated with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theDatabasePopulatedWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "SingaporeCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 386,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "existing",
                  "valid",
                  "valid",
                  "valid"
                ]
              },
              {
                "cells": [
                  "valid",
                  "valid",
                  "valid",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S1501521G",
                  "Name of S1501521G",
                  "MY",
                  "20200101"
                ]
              },
              {
                "cells": [
                  "S1501521G",
                  "Name of S1501521G",
                  "MY",
                  "20200101"
                ]
              },
              {
                "cells": [
                  "T1601547J",
                  "Name of T1601547J",
                  "CN",
                  "20200101"
                ]
              },
              {
                "cells": [
                  "T1601547J",
                  "Name of T1601547J",
                  "MY",
                  "20200101"
                ]
              },
              {
                "cells": [
                  "S1501508Z",
                  "Name of S1501508Z",
                  "CN",
                  "20200101"
                ]
              },
              {
                "cells": [
                  "S1501508Z",
                  "Name of S1501508Z",
                  "CN",
                  "20200101"
                ]
              },
              {
                "cells": [
                  "S1501508Z",
                  "Name of S1501508Z",
                  "US",
                  "20200101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24145000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 397,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 398,
            "name": "the Mha Ceased Citizen batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 399,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 2",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 400,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "NRIC not found in System.",
                  "2"
                ]
              },
              {
                "cells": [
                  "Completely Duplicate Record found.",
                  "2"
                ]
              },
              {
                "cells": [
                  "Partially Duplicate Record found.",
                  "5"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:47:03.611Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 656000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 52,
        "name": "Mha sends a ceased citizenship file with a record existing in the system and also duplicated in the file",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-a-record-existing-in-the-system-and-also-duplicated-in-the-file",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 36000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 309000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 53,
            "name": "the database populated with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theDatabasePopulatedWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "SingaporeCitizen",
                  "CeasedCitizen"
                ]
              },
              {
                "cells": [
                  "2",
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 56,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "RepeatedCeasedCitizen",
                  "NumberOfDuplication"
                ]
              },
              {
                "cells": [
                  "1",
                  "2"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24479000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 59,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 60,
            "name": "the Mha Ceased Citizen batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 61,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 1",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 62,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Not SC or Dual Citizen currently.",
                  "1"
                ]
              },
              {
                "cells": [
                  "Completely Duplicate Record found.",
                  "2"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:47:29.193Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 646000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 190,
        "name": "Mha sends a ceased citizenship file with various types of Header Date of Run",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-header-date-of-run;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 180,
            "name": "the file has the following details with Header date of run blank",
            "match": {
              "arguments": [
                {
                  "val": "blank",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1136000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 183,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 184,
            "name": "the Mha Ceased Citizen batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 185,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Wrong header length",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:47:31.035Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 447000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 191,
        "name": "Mha sends a ceased citizenship file with various types of Header Date of Run",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-header-date-of-run;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 180,
            "name": "the file has the following details with Header date of run spaces",
            "match": {
              "arguments": [
                {
                  "val": "spaces",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12063000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 183,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 184,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 185,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Must be in yyyyMMdd date format.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:47:43.598Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 436000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 192,
        "name": "Mha sends a ceased citizenship file with various types of Header Date of Run",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-header-date-of-run;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 180,
            "name": "the file has the following details with Header date of run invalid",
            "match": {
              "arguments": [
                {
                  "val": "invalid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12082000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 183,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 184,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 185,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Must be in yyyyMMdd date format.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:47:56.172Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 410000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 193,
        "name": "Mha sends a ceased citizenship file with various types of Header Date of Run",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-header-date-of-run;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 180,
            "name": "the file has the following details with Header date of run futureDate",
            "match": {
              "arguments": [
                {
                  "val": "futureDate",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12446000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 183,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 184,
            "name": "the Mha Ceased Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 185,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Extraction date cannot be after File Received date",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:09.079Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 488000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 194,
        "name": "Mha sends a ceased citizenship file with various types of Header Date of Run",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-header-date-of-run;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 180,
            "name": "the file has the following details with Header date of run 20010229",
            "match": {
              "arguments": [
                {
                  "val": "20010229",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12069000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 183,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 184,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 185,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Must be in yyyyMMdd date format.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:21.702Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 407000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 195,
        "name": "Mha sends a ceased citizenship file with various types of Header Date of Run",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-header-date-of-run;;7",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 180,
            "name": "the file has the following details with Header date of run 199901 1",
            "match": {
              "arguments": [
                {
                  "val": "199901 1",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12109000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 183,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 184,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 185,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Must be in yyyyMMdd date format.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:34.271Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 411000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 196,
        "name": "Mha sends a ceased citizenship file with various types of Header Date of Run",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-header-date-of-run;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 180,
            "name": "the file has the following details with Header date of run 20011332",
            "match": {
              "arguments": [
                {
                  "val": "20011332",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12078000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 183,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 184,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 185,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Must be in yyyyMMdd date format.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:46.812Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 404000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 197,
        "name": "Mha sends a ceased citizenship file with various types of Header Date of Run",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-header-date-of-run;;9",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 180,
            "name": "the file has the following details with Header date of run 2001aBcD",
            "match": {
              "arguments": [
                {
                  "val": "2001aBcD",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12077000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 183,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 184,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 185,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Must be in yyyyMMdd date format.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:59.338Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 405000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 198,
        "name": "Mha sends a ceased citizenship file with various types of Header Date of Run",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-header-date-of-run;;10",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 180,
            "name": "the file has the following details with Header date of run 202010",
            "match": {
              "arguments": [
                {
                  "val": "202010",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 6000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1093000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 183,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 184,
            "name": "the Mha Ceased Citizen batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 185,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Wrong header length",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:00.890Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 431000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 334,
        "name": "John ceased citizenship before he started becoming a dual citizen",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;john-ceased-citizenship-before-he-started-becoming-a-dual-citizen",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 57000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 335,
            "name": "john who is 13 years old converted to a dual citizen 10 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "13",
                  "offset": 12
                },
                {
                  "val": "10",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.personConvertedToADualCitizenDaysAgo(java.lang.String,int,int)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 336,
            "name": "MHA sends a ceased citizenship file stating that john renounced his citizenship 10 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 49
                },
                {
                  "val": "10",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.mhaSendsACeasedCitizenshipFileStatingThatPersonRenouncedHisCitizenshipDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19800000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 337,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 338,
            "name": "the Mha Ceased Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 339,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 340,
            "name": "john is a non singaporean since 10 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "10",
                  "offset": 32
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.personIsANonSingaporeanSinceDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:58:23.995Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 726000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 68,
        "name": "Mha sends a ceased citizenship file with a name length of zero",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-a-name-length-of-zero",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 69,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "EmptyName"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12533000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 72,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 73,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 74,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 75,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Invalid Name.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:58:37.355Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 460000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 212,
        "name": "Mha sends a ceased citizenship file with various types of nrics",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-nrics;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 202,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "spaces",
                  "valid",
                  "valid",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12408000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 205,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 206,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 207,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "NRIC cannot be null/blank",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:58:50.303Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 498000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 213,
        "name": "Mha sends a ceased citizenship file with various types of nrics",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-nrics;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 202,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "invalid",
                  "valid",
                  "valid",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12335000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 205,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 206,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 207,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Must be valid NRIC in format [S/T]1234567[A-Z]",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:03.207Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 471000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 214,
        "name": "Mha sends a ceased citizenship file with various types of nrics",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-nrics;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 202,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "S150163Z",
                  "valid",
                  "valid",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12254000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 205,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 206,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 207,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "size must be between 9 and 9",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:16.009Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 451000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 215,
        "name": "Mha sends a ceased citizenship file with various types of nrics",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-nrics;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 202,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "S5550000B",
                  "valid",
                  "valid",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12274000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 205,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 206,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 207,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Must be valid NRIC in format [S/T]1234567[A-Z]",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:28.787Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 446000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 216,
        "name": "Mha sends a ceased citizenship file with various types of nrics",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-nrics;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 202,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "S8880001Z",
                  "valid",
                  "valid",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12262000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 205,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 206,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 207,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Must be valid NRIC in format [S/T]1234567[A-Z]",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:41.542Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 438000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 217,
        "name": "Mha sends a ceased citizenship file with various types of nrics",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-nrics;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 202,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "S1501508z",
                  "valid",
                  "valid",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12197000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 205,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 206,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 207,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Must be valid NRIC in format [S/T]1234567[A-Z]",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:54.223Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 414000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 218,
        "name": "Mha sends a ceased citizenship file with various types of nrics",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-nrics;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 202,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "s1501508Z",
                  "valid",
                  "valid",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12248000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 205,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 206,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 207,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Must be valid NRIC in format [S/T]1234567[A-Z]",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:00:06.947Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 453000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 219,
        "name": "Mha sends a ceased citizenship file with various types of nrics",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-nrics;;9",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 202,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "s1501508z",
                  "valid",
                  "valid",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12233000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 205,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 206,
            "name": "the Mha Ceased Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 207,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Must be valid NRIC in format [S/T]1234567[A-Z]",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:00:19.697Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 414000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 343,
        "name": "Mha sends a ceased citizenship file with a combination of partially duplicate and valid records but all nrics not found in system",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-a-combination-of-partially-duplicate-and-valid-records-but-all-nrics-not-found-in-system",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 344,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "S1501508Z",
                  "valid",
                  "CN",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S1501508Z",
                  "valid",
                  "MY",
                  "valid"
                ]
              },
              {
                "cells": [
                  "valid",
                  "valid",
                  "valid",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23682000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 349,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 350,
            "name": "the Mha Ceased Citizen batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 351,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 352,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Partially Duplicate Record found.",
                  "2"
                ]
              },
              {
                "cells": [
                  "NRIC not found in System.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:48.712Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 689000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 123,
        "name": "Mha sends a empty ceased citizenship file",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-empty-ceased-citizenship-file",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 124,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen"
                ]
              },
              {
                "cells": [
                  "0"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1302000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 127,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 128,
            "name": "the Mha Ceased Citizen batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "the error message contains Must have at least 1 valid body record",
            "match": {
              "arguments": [
                {
                  "val": "Must have at least 1 valid body record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:50.784Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 567000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 288,
        "name": "Mha sends a ceased citizenship file with various types of name",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-name;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 147000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 276,
            "name": "the database populated with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theDatabasePopulatedWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "SingaporeCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 279,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "existing",
                  "valid",
                  "valid",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20426000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 282,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 283,
            "name": "the Mha Ceased Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 284,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 1",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 285,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:11.990Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 584000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 289,
        "name": "Mha sends a ceased citizenship file with various types of name",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-various-types-of-name;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 38000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 276,
            "name": "the database populated with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theDatabasePopulatedWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "SingaporeCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 279,
            "name": "the mha ceased citizen file contains the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 83
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theMhaCeasedCitizenFileContainsFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Nric",
                  "Name",
                  "Nationality",
                  "Cessation Date"
                ]
              },
              {
                "cells": [
                  "existing",
                  "T3st m@cH!nE",
                  "valid",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20016000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 282,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 283,
            "name": "the Mha Ceased Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 284,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 1",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 285,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:10.518Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 879000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 21,
        "name": "Mha sends a ceased citizenship file with a record that was sent previously",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-a-record-that-was-sent-previously",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 217000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 22,
            "name": "the database populated with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theDatabasePopulatedWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "SingaporeCitizen",
                  "DualCitizen",
                  "CeasedCitizen"
                ]
              },
              {
                "cells": [
                  "1",
                  "0",
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 25,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "RepeatedCeasedCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18769000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 28,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 29,
            "name": "the Mha Ceased Citizen batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 30,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 31,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Not SC or Dual Citizen currently.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:30.466Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 538000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 152,
        "name": "Mha sends a ceased citizenship file containing a person who is already non Singaporean",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-containing-a-person-who-is-already-non-singaporean",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 47000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizenWhoIsNonSG"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18593000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 156,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 157,
            "name": "the Mha Ceased Citizen batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 158,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 159,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Not SC or Dual Citizen currently.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:49.695Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 536000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 311,
        "name": "John ceased citizenship before he becomes Singapore Citizen",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;john-ceased-citizenship-before-he-becomes-singapore-citizen",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 33000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 312,
            "name": "john who is 50 years old attained his Singapore Citizenship 100 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "50",
                  "offset": 12
                },
                {
                  "val": "100",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.personAttainedHisSingaporeCitizenshipDaysAgo(java.lang.String,int,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 313,
            "name": "MHA sends a ceased citizenship file stating that john renounced his citizenship 101 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 49
                },
                {
                  "val": "101",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.mhaSendsACeasedCitizenshipFileStatingThatPersonRenouncedHisCitizenshipDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18555000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 314,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 315,
            "name": "the Mha Ceased Citizen batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 316,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Renunciation Date is not after Citizenship Attainment Date.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:56.326Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 685000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 36,
        "name": "Mha sends a ceased citizenship file with completely duplicate records",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-completely-duplicate-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 192000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 37,
            "name": "the database populated with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theDatabasePopulatedWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "SingaporeCitizen",
                  "DualCitizen"
                ]
              },
              {
                "cells": [
                  "1",
                  "0"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 40,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen",
                  "NumberOfDuplication"
                ]
              },
              {
                "cells": [
                  "1",
                  "3"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25315000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 43,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 44,
            "name": "the Mha Ceased Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 45,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 3",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 46,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Completely Duplicate Record found.",
                  "3"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 49,
            "name": "I verify that the correct persons have ceased being singaporean",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyThatTheCorrectPersonsHaveCeasedBeingSingaporean()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:22.695Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 598000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 164,
        "name": "Mha sends a ceased citizenship file with partially duplicate records",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-partially-duplicate-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 47000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 165,
            "name": "the database populated with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theDatabasePopulatedWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "SingaporeCitizen",
                  "DualCitizen"
                ]
              },
              {
                "cells": [
                  "1",
                  "0"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 168,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen",
                  "NumberOfPartialDuplication"
                ]
              },
              {
                "cells": [
                  "1",
                  "3"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12582000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 171,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 172,
            "name": "the Mha Ceased Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 173,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 174,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Partially Duplicate Record found.",
                  "3"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:35.988Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 519000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 321,
        "name": "Mha sends a ceased citizenship file with completely duplicate records but nric not found in system",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-completely-duplicate-records-but-nric-not-found-in-system",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 322,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen",
                  "NumberOfDuplication"
                ]
              },
              {
                "cells": [
                  "1",
                  "2"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23759000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 325,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 326,
            "name": "the Mha Ceased Citizen batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 327,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 1",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 328,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Completely Duplicate Record found.",
                  "2"
                ]
              },
              {
                "cells": [
                  "NRIC not found in System.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      }
    ],
    "name": "Data processing for Mha ceased citizenship",
    "description": "",
    "id": "data-processing-for-mha-ceased-citizenship",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_ceased_sc.feature",
    "tags": [
      {
        "name": "@datasource",
        "location": {
          "line": 1,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@development",
        "location": {
          "line": 2,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@ceased_citizen",
        "location": {
          "line": 3,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@mha",
        "location": {
          "line": 4,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@truncate",
        "location": {
          "line": 5,
          "column": 1
        },
        "type": "Tag"
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:48:46.094Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 616000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "MHA sends an empty change address file",
        "description": "",
        "id": "mha-change-address;mha-sends-an-empty-change-address-file",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 10,
            "name": "the mha change address file is empty",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileIsEmpty()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1272000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 11,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 12,
            "name": "the Mha Change Address batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 13,
            "name": "the error message contains Must have at least 1 valid body record",
            "match": {
              "arguments": [
                {
                  "val": "Must have at least 1 valid body record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:48.047Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 447000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 192,
        "name": "John moves to an existing address that Jane is living in",
        "description": "",
        "id": "mha-change-address;john-moves-to-an-existing-address-that-jane-is-living-in",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 68000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 193,
            "name": "A 30 year old singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {
                  "val": "30",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "owns",
                  "offset": 38
                },
                {
                  "val": "landed",
                  "offset": 45
                },
                {
                  "val": "abc",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 194,
            "name": "john resides in a hdb property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "hdb",
                  "offset": 18
                },
                {
                  "val": "abd",
                  "offset": 31
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 195,
            "name": "A 28 year old singaporean person jane resides a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "28",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "jane",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "condo",
                  "offset": 48
                },
                {
                  "val": "abe",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 196,
            "name": "the mha change address file contains information that john changed from (mha_z)abd to (mha_z)abe 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abd",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 87
                },
                {
                  "val": "abe",
                  "offset": 93
                },
                {
                  "val": "5",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20277000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 197,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 198,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 199,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 200,
            "name": "john does not reside in abd since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abd",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 201,
            "name": "john resides in abe from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abe",
                  "offset": 16
                },
                {
                  "val": "5",
                  "offset": 25
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAddressFromDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:08.978Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 603000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 321,
        "name": "Given address indicator is MHA but Address format is NCA, and vice versa",
        "description": "",
        "id": "mha-change-address;given-address-indicator-is-mha-but-address-format-is-nca--and-vice-versa",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 63000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 322,
            "name": "A singaporean person john resides in a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 39
                },
                {
                  "val": "abc",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 37000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 323,
            "name": "A singaporean person jane resides in a landed property def",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 39
                },
                {
                  "val": "def",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 324,
            "name": "the mha change address file contains the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:C",
                  "IndType:Z,AddrType:S,Block:13C,Street:22 Hilton Street,Unit:22,Floor:32,Building:The Sail,Postal:232903",
                  "20190909"
                ]
              },
              {
                "cells": [
                  "jane",
                  "Existing:def,AddrType:C",
                  "IndType: ,AddrType:C,Block:13C,Street:22 Hilton Street,Unit:22,Floor:32,Building:The Sail,Postal:232903",
                  "20190909"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12254000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 328,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 329,
            "name": "the Mha Change Address batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:21.969Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 548000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 456,
        "name": "Given a change address file which contains a special property island street code",
        "description": "",
        "id": "mha-change-address;given-a-change-address-file-which-contains-a-special-property-island-street-code",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 57000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 457,
            "name": "A singaporean person john resides in a hdb property angmokio",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "hdb",
                  "offset": 39
                },
                {
                  "val": "angmokio",
                  "offset": 52
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 458,
            "name": "the mha change address file contains the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:angmokio,AddrType:C",
                  "IndType: ,AddrType:S,Block:12B,Street:PUU00N,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "20190909"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20297000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 461,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 462,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 463,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 464,
            "name": "I verify that john has previous residence angmokio and now has special property persisted in Special Property with type SPECIAL_ISLAND_STREET_CODE",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 14
                },
                {
                  "val": "angmokio",
                  "offset": 42
                },
                {
                  "val": "SPECIAL_ISLAND_STREET_CODE",
                  "offset": 120
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.iVerifyThatJohnHasSpecialPropertyPersistedInSpecialProperty(java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:11:56.621Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 578000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 179,
        "name": "A person changes address every day",
        "description": "",
        "id": "mha-change-address;a-person-changes-address-every-day",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 107000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 180,
            "name": "A 60 year old singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "owns",
                  "offset": 38
                },
                {
                  "val": "landed",
                  "offset": 45
                },
                {
                  "val": "abc",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 36000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 181,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 32000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 182,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 183,
            "name": "mha change address file states that john moved from abe to abd 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 36
                },
                {
                  "val": "abe",
                  "offset": 52
                },
                {
                  "val": "abd",
                  "offset": 59
                },
                {
                  "val": "6",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.mhaChangeAddressFileStatesThatPersonMovedFromPropertyToPropertyDaysAgo(java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 184,
            "name": "the mha change address file contains information that john changed from (mha_z)abd to (mha_z)abc 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abd",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 87
                },
                {
                  "val": "abc",
                  "offset": 93
                },
                {
                  "val": "5",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20415000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 185,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 186,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 187,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 188,
            "name": "john does not reside in abd since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abd",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 189,
            "name": "john resides in abc from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abc",
                  "offset": 16
                },
                {
                  "val": "5",
                  "offset": 25
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAddressFromDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:12:17.929Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 621000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 308,
        "name": "MHA sends two files which claims John moved from aaa to bbb and subsequently bbb to ccc at an earlier date",
        "description": "",
        "id": "mha-change-address;mha-sends-two-files-which-claims-john-moved-from-aaa-to-bbb-and-subsequently-bbb-to-ccc-at-an-earlier-date",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 75000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 309,
            "name": "A 30 year old singaporean person john resides a hdb property aaa",
            "match": {
              "arguments": [
                {
                  "val": "30",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "hdb",
                  "offset": 48
                },
                {
                  "val": "aaa",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 310,
            "name": "A 30 year old singaporean person brandon resides a hdb property bbb",
            "match": {
              "arguments": [
                {
                  "val": "30",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "brandon",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 41
                },
                {
                  "val": "hdb",
                  "offset": 51
                },
                {
                  "val": "bbb",
                  "offset": 64
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 38000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 311,
            "name": "A 30 year old singaporean person charlie resides a hdb property ccc",
            "match": {
              "arguments": [
                {
                  "val": "30",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "charlie",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 41
                },
                {
                  "val": "hdb",
                  "offset": 51
                },
                {
                  "val": "ccc",
                  "offset": 64
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 312,
            "name": "the mha change address file with date of run 20200101 contains information that john changed from (mha_z)aaa to (mha_z)bbb 365 days ago",
            "match": {
              "arguments": [
                {
                  "val": "20200101",
                  "offset": 45
                },
                {
                  "val": "john",
                  "offset": 80
                },
                {
                  "val": "mha_z",
                  "offset": 99
                },
                {
                  "val": "aaa",
                  "offset": 105
                },
                {
                  "val": "mha_z",
                  "offset": 113
                },
                {
                  "val": "bbb",
                  "offset": 119
                },
                {
                  "val": "365",
                  "offset": 123
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19958000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 313,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 314,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 315,
            "name": "I will receive another file",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iWillReceiveAnotherFile()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 316,
            "name": "the mha change address file with date of run 20200102 contains information that john changed from (mha_z)bbb to (mha_z)ccc 367 days ago",
            "match": {
              "arguments": [
                {
                  "val": "20200102",
                  "offset": 45
                },
                {
                  "val": "john",
                  "offset": 80
                },
                {
                  "val": "mha_z",
                  "offset": 99
                },
                {
                  "val": "bbb",
                  "offset": 105
                },
                {
                  "val": "mha_z",
                  "offset": 113
                },
                {
                  "val": "ccc",
                  "offset": 119
                },
                {
                  "val": "367",
                  "offset": 123
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19228000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 317,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 318,
            "name": "the Mha Change Address batch job completes running with status MAPPED_DATA",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "MAPPED_DATA",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:12:57.943Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 649000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 445,
        "name": "Given a change address file which contains a special property lorong buang kok",
        "description": "",
        "id": "mha-change-address;given-a-change-address-file-which-contains-a-special-property-lorong-buang-kok",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 68000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 446,
            "name": "A singaporean person john resides in a hdb property angmokio",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "hdb",
                  "offset": 39
                },
                {
                  "val": "angmokio",
                  "offset": 52
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 447,
            "name": "the mha change address file contains the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:angmokio,AddrType:C",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 LORONG BUANGKOK 123,Unit:13,Floor:12,Building:The Clive,Postal:547573",
                  "20190909"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20184000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 450,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 451,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 452,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 453,
            "name": "I verify that john has previous residence angmokio and now has special property persisted in Special Property with type LORONG_BUANGKOK",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 14
                },
                {
                  "val": "angmokio",
                  "offset": 42
                },
                {
                  "val": "LORONG_BUANGKOK",
                  "offset": 120
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.iVerifyThatJohnHasSpecialPropertyPersistedInSpecialProperty(java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:01:27.250Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 484000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 94,
        "name": "CDS successfully updates address information to an existing address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-an-existing-address;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 120000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "A singaporean person john owns and resides a landed property angmokio",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns and resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 45
                },
                {
                  "val": "angmokio",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 42000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "A singaporean person jane resides in a condo property bishan",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "condo",
                  "offset": 39
                },
                {
                  "val": "bishan",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the mha change address file contains information that john changed from (mha_z)angmokio to (mha_z)bishan 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "angmokio",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 92
                },
                {
                  "val": "bishan",
                  "offset": 98
                },
                {
                  "val": "5",
                  "offset": 105
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20118000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 84,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 85,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 86,
            "name": "john resides in bishan from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 16
                },
                {
                  "val": "5",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAddressFromDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 87,
            "name": "I will receive another file",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iWillReceiveAnotherFile()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 88,
            "name": "the mha change address file contains information that john changed from (mha_z)bishan to (mha_z)angmokio 3 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "bishan",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 90
                },
                {
                  "val": "angmokio",
                  "offset": 96
                },
                {
                  "val": "3",
                  "offset": 105
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19911000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 89,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 90,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 91,
            "name": "john does not reside in bishan since 4 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 24
                },
                {
                  "val": "4",
                  "offset": 37
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:02:08.020Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 606000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 95,
        "name": "CDS successfully updates address information to an existing address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-an-existing-address;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 70000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "A singaporean person john owns and resides a landed property angmokio",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns and resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 45
                },
                {
                  "val": "angmokio",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 36000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "A singaporean person jane resides in a condo property bishan",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "condo",
                  "offset": 39
                },
                {
                  "val": "bishan",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the mha change address file contains information that john changed from (mha_z)angmokio to (mha_c)bishan 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "angmokio",
                  "offset": 79
                },
                {
                  "val": "mha_c",
                  "offset": 92
                },
                {
                  "val": "bishan",
                  "offset": 98
                },
                {
                  "val": "5",
                  "offset": 105
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20145000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 84,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 85,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 86,
            "name": "john resides in bishan from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 16
                },
                {
                  "val": "5",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAddressFromDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 87,
            "name": "I will receive another file",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iWillReceiveAnotherFile()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 88,
            "name": "the mha change address file contains information that john changed from (mha_z)bishan to (mha_c)angmokio 3 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "bishan",
                  "offset": 79
                },
                {
                  "val": "mha_c",
                  "offset": 90
                },
                {
                  "val": "angmokio",
                  "offset": 96
                },
                {
                  "val": "3",
                  "offset": 105
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20011000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 89,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 90,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 91,
            "name": "john does not reside in bishan since 4 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 24
                },
                {
                  "val": "4",
                  "offset": 37
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:02:48.954Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 615000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 96,
        "name": "CDS successfully updates address information to an existing address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-an-existing-address;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 80000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "A singaporean person john owns and resides a landed property angmokio",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns and resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 45
                },
                {
                  "val": "angmokio",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "A singaporean person jane resides in a condo property bishan",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "condo",
                  "offset": 39
                },
                {
                  "val": "bishan",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the mha change address file contains information that john changed from (mha_z)angmokio to (nca)bishan 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "angmokio",
                  "offset": 79
                },
                {
                  "val": "nca",
                  "offset": 92
                },
                {
                  "val": "bishan",
                  "offset": 96
                },
                {
                  "val": "5",
                  "offset": 103
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20080000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 84,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 85,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 86,
            "name": "john resides in bishan from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 16
                },
                {
                  "val": "5",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAddressFromDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 87,
            "name": "I will receive another file",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iWillReceiveAnotherFile()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 88,
            "name": "the mha change address file contains information that john changed from (mha_z)bishan to (nca)angmokio 3 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "bishan",
                  "offset": 79
                },
                {
                  "val": "nca",
                  "offset": 90
                },
                {
                  "val": "angmokio",
                  "offset": 94
                },
                {
                  "val": "3",
                  "offset": 103
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19882000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 89,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 90,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 91,
            "name": "john does not reside in bishan since 4 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 24
                },
                {
                  "val": "4",
                  "offset": 37
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:03:29.720Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 560000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 97,
        "name": "CDS successfully updates address information to an existing address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-an-existing-address;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 65000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "A singaporean person john owns and resides a landed property angmokio",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns and resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 45
                },
                {
                  "val": "angmokio",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "A singaporean person jane resides in a condo property bishan",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "condo",
                  "offset": 39
                },
                {
                  "val": "bishan",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the mha change address file contains information that john changed from (mha_c)angmokio to (mha_z)bishan 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 73
                },
                {
                  "val": "angmokio",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 92
                },
                {
                  "val": "bishan",
                  "offset": 98
                },
                {
                  "val": "5",
                  "offset": 105
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20080000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 84,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 85,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 86,
            "name": "john resides in bishan from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 16
                },
                {
                  "val": "5",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAddressFromDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 87,
            "name": "I will receive another file",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iWillReceiveAnotherFile()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 88,
            "name": "the mha change address file contains information that john changed from (mha_c)bishan to (mha_z)angmokio 3 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 73
                },
                {
                  "val": "bishan",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 90
                },
                {
                  "val": "angmokio",
                  "offset": 96
                },
                {
                  "val": "3",
                  "offset": 105
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19898000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 89,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 90,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 91,
            "name": "john does not reside in bishan since 4 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 24
                },
                {
                  "val": "4",
                  "offset": 37
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:04:10.436Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 541000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 98,
        "name": "CDS successfully updates address information to an existing address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-an-existing-address;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 62000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "A singaporean person john owns and resides a landed property angmokio",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns and resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 45
                },
                {
                  "val": "angmokio",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 31000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "A singaporean person jane resides in a condo property bishan",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "condo",
                  "offset": 39
                },
                {
                  "val": "bishan",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the mha change address file contains information that john changed from (mha_c)angmokio to (mha_c)bishan 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 73
                },
                {
                  "val": "angmokio",
                  "offset": 79
                },
                {
                  "val": "mha_c",
                  "offset": 92
                },
                {
                  "val": "bishan",
                  "offset": 98
                },
                {
                  "val": "5",
                  "offset": 105
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20099000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 84,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 85,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 86,
            "name": "john resides in bishan from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 16
                },
                {
                  "val": "5",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAddressFromDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 87,
            "name": "I will receive another file",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iWillReceiveAnotherFile()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 88,
            "name": "the mha change address file contains information that john changed from (mha_c)bishan to (mha_c)angmokio 3 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 73
                },
                {
                  "val": "bishan",
                  "offset": 79
                },
                {
                  "val": "mha_c",
                  "offset": 90
                },
                {
                  "val": "angmokio",
                  "offset": 96
                },
                {
                  "val": "3",
                  "offset": 105
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19921000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 89,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 90,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 91,
            "name": "john does not reside in bishan since 4 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 24
                },
                {
                  "val": "4",
                  "offset": 37
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:04:51.167Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 644000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 99,
        "name": "CDS successfully updates address information to an existing address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-an-existing-address;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 74000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "A singaporean person john owns and resides a landed property angmokio",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns and resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 45
                },
                {
                  "val": "angmokio",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 36000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "A singaporean person jane resides in a condo property bishan",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "condo",
                  "offset": 39
                },
                {
                  "val": "bishan",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the mha change address file contains information that john changed from (mha_c)angmokio to (nca)bishan 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 73
                },
                {
                  "val": "angmokio",
                  "offset": 79
                },
                {
                  "val": "nca",
                  "offset": 92
                },
                {
                  "val": "bishan",
                  "offset": 96
                },
                {
                  "val": "5",
                  "offset": 103
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19997000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 84,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 85,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 86,
            "name": "john resides in bishan from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 16
                },
                {
                  "val": "5",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAddressFromDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 87,
            "name": "I will receive another file",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iWillReceiveAnotherFile()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 88,
            "name": "the mha change address file contains information that john changed from (mha_c)bishan to (nca)angmokio 3 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 73
                },
                {
                  "val": "bishan",
                  "offset": 79
                },
                {
                  "val": "nca",
                  "offset": 90
                },
                {
                  "val": "angmokio",
                  "offset": 94
                },
                {
                  "val": "3",
                  "offset": 103
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19786000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 89,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 90,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 91,
            "name": "john does not reside in bishan since 4 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 24
                },
                {
                  "val": "4",
                  "offset": 37
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:05:31.774Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 661000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 100,
        "name": "CDS successfully updates address information to an existing address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-an-existing-address;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 63000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "A singaporean person john owns and resides a landed property angmokio",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns and resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 45
                },
                {
                  "val": "angmokio",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 29000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "A singaporean person jane resides in a condo property bishan",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "condo",
                  "offset": 39
                },
                {
                  "val": "bishan",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the mha change address file contains information that john changed from (nca)angmokio to (mha_z)bishan 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 73
                },
                {
                  "val": "angmokio",
                  "offset": 77
                },
                {
                  "val": "mha_z",
                  "offset": 90
                },
                {
                  "val": "bishan",
                  "offset": 96
                },
                {
                  "val": "5",
                  "offset": 103
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20039000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 84,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 85,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 86,
            "name": "john resides in bishan from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 16
                },
                {
                  "val": "5",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAddressFromDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 87,
            "name": "I will receive another file",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iWillReceiveAnotherFile()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 88,
            "name": "the mha change address file contains information that john changed from (nca)bishan to (mha_z)angmokio 3 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 73
                },
                {
                  "val": "bishan",
                  "offset": 77
                },
                {
                  "val": "mha_z",
                  "offset": 88
                },
                {
                  "val": "angmokio",
                  "offset": 94
                },
                {
                  "val": "3",
                  "offset": 103
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20083000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 89,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 90,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 91,
            "name": "john does not reside in bishan since 4 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 24
                },
                {
                  "val": "4",
                  "offset": 37
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:06:12.754Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 865000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 101,
        "name": "CDS successfully updates address information to an existing address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-an-existing-address;;9",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 66000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "A singaporean person john owns and resides a landed property angmokio",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns and resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 45
                },
                {
                  "val": "angmokio",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "A singaporean person jane resides in a condo property bishan",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "condo",
                  "offset": 39
                },
                {
                  "val": "bishan",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the mha change address file contains information that john changed from (nca)angmokio to (mha_c)bishan 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 73
                },
                {
                  "val": "angmokio",
                  "offset": 77
                },
                {
                  "val": "mha_c",
                  "offset": 90
                },
                {
                  "val": "bishan",
                  "offset": 96
                },
                {
                  "val": "5",
                  "offset": 103
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19981000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 84,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 85,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 86,
            "name": "john resides in bishan from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 16
                },
                {
                  "val": "5",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAddressFromDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 87,
            "name": "I will receive another file",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iWillReceiveAnotherFile()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 88,
            "name": "the mha change address file contains information that john changed from (nca)bishan to (mha_c)angmokio 3 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 73
                },
                {
                  "val": "bishan",
                  "offset": 77
                },
                {
                  "val": "mha_c",
                  "offset": 88
                },
                {
                  "val": "angmokio",
                  "offset": 94
                },
                {
                  "val": "3",
                  "offset": 103
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19734000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 89,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 90,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 91,
            "name": "john does not reside in bishan since 4 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 24
                },
                {
                  "val": "4",
                  "offset": 37
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:06:53.504Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 597000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 102,
        "name": "CDS successfully updates address information to an existing address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-an-existing-address;;10",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 61000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "A singaporean person john owns and resides a landed property angmokio",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns and resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 45
                },
                {
                  "val": "angmokio",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "A singaporean person jane resides in a condo property bishan",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "condo",
                  "offset": 39
                },
                {
                  "val": "bishan",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "the mha change address file contains information that john changed from (nca)angmokio to (nca)bishan 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 73
                },
                {
                  "val": "angmokio",
                  "offset": 77
                },
                {
                  "val": "nca",
                  "offset": 90
                },
                {
                  "val": "bishan",
                  "offset": 94
                },
                {
                  "val": "5",
                  "offset": 101
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19758000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 84,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 85,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 86,
            "name": "john resides in bishan from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 16
                },
                {
                  "val": "5",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAddressFromDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 87,
            "name": "I will receive another file",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iWillReceiveAnotherFile()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 88,
            "name": "the mha change address file contains information that john changed from (nca)bishan to (nca)angmokio 3 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 73
                },
                {
                  "val": "bishan",
                  "offset": 77
                },
                {
                  "val": "nca",
                  "offset": 88
                },
                {
                  "val": "angmokio",
                  "offset": 92
                },
                {
                  "val": "3",
                  "offset": 101
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19614000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 89,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 90,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 91,
            "name": "john does not reside in bishan since 4 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "bishan",
                  "offset": 24
                },
                {
                  "val": "4",
                  "offset": 37
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:07:33.630Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 610000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 116,
        "name": "MHA claims john changes address from an existing property which he does not live in",
        "description": "",
        "id": "mha-change-address;mha-claims-john-changes-address-from-an-existing-property-which-he-does-not-live-in;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 74000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 106,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 39000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 107,
            "name": "A singaporean person jane owns a landed property abf",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abf",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 108,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 109,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 110,
            "name": "the mha change address file contains information that john changed from (mha_z)abf to (mha_z)abd 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abf",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 87
                },
                {
                  "val": "abd",
                  "offset": 93
                },
                {
                  "val": "5",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18380000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 111,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 112,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 113,
            "name": "the error message contains Invalid Person Property association",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Person Property association",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:07:52.818Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 702000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 117,
        "name": "MHA claims john changes address from an existing property which he does not live in",
        "description": "",
        "id": "mha-change-address;mha-claims-john-changes-address-from-an-existing-property-which-he-does-not-live-in;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 58000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 106,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 27000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 107,
            "name": "A singaporean person jane owns a landed property abf",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abf",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 108,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 109,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 110,
            "name": "the mha change address file contains information that john changed from (mha_z)abf to (mha_c)abd 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abf",
                  "offset": 79
                },
                {
                  "val": "mha_c",
                  "offset": 87
                },
                {
                  "val": "abd",
                  "offset": 93
                },
                {
                  "val": "5",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18474000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 111,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 112,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 113,
            "name": "the error message contains Invalid Person Property association",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Person Property association",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:08:12.151Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 608000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 118,
        "name": "MHA claims john changes address from an existing property which he does not live in",
        "description": "",
        "id": "mha-change-address;mha-claims-john-changes-address-from-an-existing-property-which-he-does-not-live-in;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 62000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 106,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 31000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 107,
            "name": "A singaporean person jane owns a landed property abf",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abf",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 108,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 109,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 110,
            "name": "the mha change address file contains information that john changed from (mha_z)abf to (nca)abd 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abf",
                  "offset": 79
                },
                {
                  "val": "nca",
                  "offset": 87
                },
                {
                  "val": "abd",
                  "offset": 91
                },
                {
                  "val": "5",
                  "offset": 95
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18350000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 111,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 112,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 113,
            "name": "the error message contains Invalid Person Property association",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Person Property association",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:08:31.272Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 633000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 119,
        "name": "MHA claims john changes address from an existing property which he does not live in",
        "description": "",
        "id": "mha-change-address;mha-claims-john-changes-address-from-an-existing-property-which-he-does-not-live-in;;5",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 63000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 106,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 29000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 107,
            "name": "A singaporean person jane owns a landed property abf",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abf",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 108,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 109,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 110,
            "name": "the mha change address file contains information that john changed from (mha_c)abf to (mha_z)abd 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 73
                },
                {
                  "val": "abf",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 87
                },
                {
                  "val": "abd",
                  "offset": 93
                },
                {
                  "val": "5",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18302000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 111,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 112,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 113,
            "name": "the error message contains Invalid Person Property association",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Person Property association",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:08:50.366Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 569000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 120,
        "name": "MHA claims john changes address from an existing property which he does not live in",
        "description": "",
        "id": "mha-change-address;mha-claims-john-changes-address-from-an-existing-property-which-he-does-not-live-in;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 60000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 106,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 36000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 107,
            "name": "A singaporean person jane owns a landed property abf",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abf",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 108,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 109,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 110,
            "name": "the mha change address file contains information that john changed from (mha_c)abf to (mha_c)abd 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 73
                },
                {
                  "val": "abf",
                  "offset": 79
                },
                {
                  "val": "mha_c",
                  "offset": 87
                },
                {
                  "val": "abd",
                  "offset": 93
                },
                {
                  "val": "5",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18431000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 111,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 112,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 113,
            "name": "the error message contains Invalid Person Property association",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Person Property association",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:09:09.536Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 565000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 121,
        "name": "MHA claims john changes address from an existing property which he does not live in",
        "description": "",
        "id": "mha-change-address;mha-claims-john-changes-address-from-an-existing-property-which-he-does-not-live-in;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 51000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 106,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 28000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 107,
            "name": "A singaporean person jane owns a landed property abf",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abf",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 108,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 109,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 110,
            "name": "the mha change address file contains information that john changed from (mha_c)abf to (nca)abd 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 73
                },
                {
                  "val": "abf",
                  "offset": 79
                },
                {
                  "val": "nca",
                  "offset": 87
                },
                {
                  "val": "abd",
                  "offset": 91
                },
                {
                  "val": "5",
                  "offset": 95
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18479000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 111,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 112,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 113,
            "name": "the error message contains Invalid Person Property association",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Person Property association",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:09:28.725Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 552000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 122,
        "name": "MHA claims john changes address from an existing property which he does not live in",
        "description": "",
        "id": "mha-change-address;mha-claims-john-changes-address-from-an-existing-property-which-he-does-not-live-in;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 49000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 106,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 107,
            "name": "A singaporean person jane owns a landed property abf",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abf",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 108,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 109,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 110,
            "name": "the mha change address file contains information that john changed from (nca)abf to (mha_z)abd 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 73
                },
                {
                  "val": "abf",
                  "offset": 77
                },
                {
                  "val": "mha_z",
                  "offset": 85
                },
                {
                  "val": "abd",
                  "offset": 91
                },
                {
                  "val": "5",
                  "offset": 95
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18310000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 111,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 112,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 113,
            "name": "the error message contains Invalid Person Property association",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Person Property association",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:09:47.733Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 538000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 123,
        "name": "MHA claims john changes address from an existing property which he does not live in",
        "description": "",
        "id": "mha-change-address;mha-claims-john-changes-address-from-an-existing-property-which-he-does-not-live-in;;9",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 48000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 106,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 32000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 107,
            "name": "A singaporean person jane owns a landed property abf",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abf",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 108,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 109,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 110,
            "name": "the mha change address file contains information that john changed from (nca)abf to (mha_c)abd 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 73
                },
                {
                  "val": "abf",
                  "offset": 77
                },
                {
                  "val": "mha_c",
                  "offset": 85
                },
                {
                  "val": "abd",
                  "offset": 91
                },
                {
                  "val": "5",
                  "offset": 95
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18289000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 111,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 112,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 113,
            "name": "the error message contains Invalid Person Property association",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Person Property association",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:10:06.707Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 551000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 124,
        "name": "MHA claims john changes address from an existing property which he does not live in",
        "description": "",
        "id": "mha-change-address;mha-claims-john-changes-address-from-an-existing-property-which-he-does-not-live-in;;10",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 54000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 106,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 107,
            "name": "A singaporean person jane owns a landed property abf",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abf",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 108,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 109,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 110,
            "name": "the mha change address file contains information that john changed from (nca)abf to (nca)abd 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 73
                },
                {
                  "val": "abf",
                  "offset": 77
                },
                {
                  "val": "nca",
                  "offset": 85
                },
                {
                  "val": "abd",
                  "offset": 89
                },
                {
                  "val": "5",
                  "offset": 93
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18370000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 111,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 112,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 113,
            "name": "the error message contains Invalid Person Property association",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Person Property association",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:10:25.774Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 531000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 259,
        "name": "john has same old and new address",
        "description": "",
        "id": "mha-change-address;john-has-same-old-and-new-address",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 53000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 260,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 261,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 262,
            "name": "the mha change address file contains information that john changed from (mha_z)abe to (mha_z)abe 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abe",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 87
                },
                {
                  "val": "abe",
                  "offset": 93
                },
                {
                  "val": "5",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19720000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 263,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 264,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 265,
            "name": "the error message contains Old and new address are identical",
            "match": {
              "arguments": [
                {
                  "val": "Old and new address are identical",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:10:46.139Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 540000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 374,
        "name": "Given the invalid Date of Address Change : Future date of Address Change(which is after Date of Run)",
        "description": "",
        "id": "mha-change-address;given-the-invalid-date-of-address-change-:-future-date-of-address-change(which-is-after-date-of-run)",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 50000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 375,
            "name": "A singaporean person john resides in a landed property abc in NCA format",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 39
                },
                {
                  "val": "abc",
                  "offset": 55
                },
                {
                  "val": "NCA",
                  "offset": 62
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAPropertyInFormat(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 376,
            "name": "the mha change address file contains the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:S",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "20301010"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18354000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 379,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 380,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 381,
            "name": "the error message contains Address change date cannot be more recent than File Cut-off Date",
            "match": {
              "arguments": [
                {
                  "val": "Address change date cannot be more recent than File Cut-off Date",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:14.215Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 384000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 137,
        "name": "CDS is unable to map a person's previous address if it does not exist in the system",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-person-s-previous-address-if-it-does-not-exist-in-the-system;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 109000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 128,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 29000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 130,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 131,
            "name": "the mha change address file contains information that john changed from a new (mha_z)hdb property to (mha_z)abc 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 79
                },
                {
                  "val": "hdb",
                  "offset": 85
                },
                {
                  "val": "mha_z",
                  "offset": 102
                },
                {
                  "val": "abc",
                  "offset": 108
                },
                {
                  "val": "5",
                  "offset": 112
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat3(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18575000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 133,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:33.406Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 675000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 138,
        "name": "CDS is unable to map a person's previous address if it does not exist in the system",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-person-s-previous-address-if-it-does-not-exist-in-the-system;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 64000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 128,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 130,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 131,
            "name": "the mha change address file contains information that john changed from a new (mha_z)hdb property to (mha_c)abc 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 79
                },
                {
                  "val": "hdb",
                  "offset": 85
                },
                {
                  "val": "mha_c",
                  "offset": 102
                },
                {
                  "val": "abc",
                  "offset": 108
                },
                {
                  "val": "5",
                  "offset": 112
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat3(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18404000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 133,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:52.637Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 666000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 139,
        "name": "CDS is unable to map a person's previous address if it does not exist in the system",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-person-s-previous-address-if-it-does-not-exist-in-the-system;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 59000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 128,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 130,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 131,
            "name": "the mha change address file contains information that john changed from a new (mha_z)hdb property to (nca)abc 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 79
                },
                {
                  "val": "hdb",
                  "offset": 85
                },
                {
                  "val": "nca",
                  "offset": 102
                },
                {
                  "val": "abc",
                  "offset": 106
                },
                {
                  "val": "5",
                  "offset": 110
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat3(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18462000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 2000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 133,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:11.905Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 578000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 140,
        "name": "CDS is unable to map a person's previous address if it does not exist in the system",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-person-s-previous-address-if-it-does-not-exist-in-the-system;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 69000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 128,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 130,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 131,
            "name": "the mha change address file contains information that john changed from a new (mha_c)hdb property to (mha_z)abc 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 79
                },
                {
                  "val": "hdb",
                  "offset": 85
                },
                {
                  "val": "mha_z",
                  "offset": 102
                },
                {
                  "val": "abc",
                  "offset": 108
                },
                {
                  "val": "5",
                  "offset": 112
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat3(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18408000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 133,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:31.043Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 562000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 141,
        "name": "CDS is unable to map a person's previous address if it does not exist in the system",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-person-s-previous-address-if-it-does-not-exist-in-the-system;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 56000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 128,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 130,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 131,
            "name": "the mha change address file contains information that john changed from a new (mha_c)hdb property to (mha_c)abc 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 79
                },
                {
                  "val": "hdb",
                  "offset": 85
                },
                {
                  "val": "mha_c",
                  "offset": 102
                },
                {
                  "val": "abc",
                  "offset": 108
                },
                {
                  "val": "5",
                  "offset": 112
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat3(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18399000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 133,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:50.143Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 582000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 142,
        "name": "CDS is unable to map a person's previous address if it does not exist in the system",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-person-s-previous-address-if-it-does-not-exist-in-the-system;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 61000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 128,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 130,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 131,
            "name": "the mha change address file contains information that john changed from a new (mha_c)hdb property to (nca)abc 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 79
                },
                {
                  "val": "hdb",
                  "offset": 85
                },
                {
                  "val": "nca",
                  "offset": 102
                },
                {
                  "val": "abc",
                  "offset": 106
                },
                {
                  "val": "5",
                  "offset": 110
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat3(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18429000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 133,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:09.300Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 566000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 143,
        "name": "CDS is unable to map a person's previous address if it does not exist in the system",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-person-s-previous-address-if-it-does-not-exist-in-the-system;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 56000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 128,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 130,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 131,
            "name": "the mha change address file contains information that john changed from a new (nca)hdb property to (mha_z)abc 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 79
                },
                {
                  "val": "hdb",
                  "offset": 83
                },
                {
                  "val": "mha_z",
                  "offset": 100
                },
                {
                  "val": "abc",
                  "offset": 106
                },
                {
                  "val": "5",
                  "offset": 110
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat3(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18395000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 133,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:28.399Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 606000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 144,
        "name": "CDS is unable to map a person's previous address if it does not exist in the system",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-person-s-previous-address-if-it-does-not-exist-in-the-system;;9",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 55000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 128,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 130,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 131,
            "name": "the mha change address file contains information that john changed from a new (nca)hdb property to (mha_c)abc 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 79
                },
                {
                  "val": "hdb",
                  "offset": 83
                },
                {
                  "val": "mha_c",
                  "offset": 100
                },
                {
                  "val": "abc",
                  "offset": 106
                },
                {
                  "val": "5",
                  "offset": 110
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat3(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18395000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 133,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:47.530Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 573000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 145,
        "name": "CDS is unable to map a person's previous address if it does not exist in the system",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-person-s-previous-address-if-it-does-not-exist-in-the-system;;10",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 65000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 128,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 130,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 131,
            "name": "the mha change address file contains information that john changed from a new (nca)hdb property to (nca)abc 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 79
                },
                {
                  "val": "hdb",
                  "offset": 83
                },
                {
                  "val": "nca",
                  "offset": 100
                },
                {
                  "val": "abc",
                  "offset": 104
                },
                {
                  "val": "5",
                  "offset": 108
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat3(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18541000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 133,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:06.795Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 609000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 268,
        "name": "john move back to his first residence address",
        "description": "",
        "id": "mha-change-address;john-move-back-to-his-first-residence-address",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 69000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 269,
            "name": "A singaporean person john resides a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 36
                },
                {
                  "val": "abc",
                  "offset": 52
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 162000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 270,
            "name": "john had lived in a hdb property abd from 12 Jan 2000 to 12 Jan 2015",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "hdb",
                  "offset": 20
                },
                {
                  "val": "abd",
                  "offset": 33
                },
                {
                  "val": "12 Jan 2000",
                  "offset": 42
                },
                {
                  "val": "12 Jan 2015",
                  "offset": 57
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personHadLivedInAPropertyFromYearsAgoToYearsAgo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 271,
            "name": "the mha change address file contains information that john changed from (mha_z)abc to (mha_z)abd 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abc",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 87
                },
                {
                  "val": "abd",
                  "offset": 93
                },
                {
                  "val": "5",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20139000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 272,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 273,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 274,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:27.821Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 583000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 384,
        "name": "Given Invalid Date of Run : Future date of Run (which is after system date)",
        "description": "",
        "id": "mha-change-address;given-invalid-date-of-run-:-future-date-of-run-(which-is-after-system-date)",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 73000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 385,
            "name": "A singaporean person john resides in a landed property abc in NCA format",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 39
                },
                {
                  "val": "abc",
                  "offset": 55
                },
                {
                  "val": "NCA",
                  "offset": 62
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAPropertyInFormat(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 386,
            "name": "the mha change address file has date of run 20301010 and contains the following details:",
            "match": {
              "arguments": [
                {
                  "val": "20301010",
                  "offset": 44
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasDateOfRunAndContainsTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:S",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "20180808"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12679000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 389,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 390,
            "name": "the Mha Change Address batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 391,
            "name": "the error message contains Date of run cannot be after File Received date",
            "match": {
              "arguments": [
                {
                  "val": "Date of run cannot be after File Received date",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:57:31.780Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 557000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 158,
        "name": "CDS is unable to map a persons' addresses when both are non-existent",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-persons--addresses-when-both-are-non-existent;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 161000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 149,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 28000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 150,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 151,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 152,
            "name": "the mha change address file contains information that john changed from a new (mha_z)condo property to a new (mha_z)landed property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 79
                },
                {
                  "val": "condo",
                  "offset": 85
                },
                {
                  "val": "mha_z",
                  "offset": 110
                },
                {
                  "val": "landed",
                  "offset": 116
                },
                {
                  "val": "5",
                  "offset": 132
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat4(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18568000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 154,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 155,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:57:51.178Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 595000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 159,
        "name": "CDS is unable to map a persons' addresses when both are non-existent",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-persons--addresses-when-both-are-non-existent;;3",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 64000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 149,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 150,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 151,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 152,
            "name": "the mha change address file contains information that john changed from a new (mha_z)condo property to a new (mha_c)landed property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 79
                },
                {
                  "val": "condo",
                  "offset": 85
                },
                {
                  "val": "mha_c",
                  "offset": 110
                },
                {
                  "val": "landed",
                  "offset": 116
                },
                {
                  "val": "5",
                  "offset": 132
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat4(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18482000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 154,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 155,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:58:10.404Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 591000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 160,
        "name": "CDS is unable to map a persons' addresses when both are non-existent",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-persons--addresses-when-both-are-non-existent;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 61000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 149,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 150,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 151,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 152,
            "name": "the mha change address file contains information that john changed from a new (mha_z)condo property to a new (nca)landed property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 79
                },
                {
                  "val": "condo",
                  "offset": 85
                },
                {
                  "val": "nca",
                  "offset": 110
                },
                {
                  "val": "landed",
                  "offset": 114
                },
                {
                  "val": "5",
                  "offset": 130
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat4(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18528000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 154,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 155,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:58:29.672Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 599000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 161,
        "name": "CDS is unable to map a persons' addresses when both are non-existent",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-persons--addresses-when-both-are-non-existent;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 60000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 149,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 150,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 151,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 152,
            "name": "the mha change address file contains information that john changed from a new (mha_c)condo property to a new (mha_z)landed property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 79
                },
                {
                  "val": "condo",
                  "offset": 85
                },
                {
                  "val": "mha_z",
                  "offset": 110
                },
                {
                  "val": "landed",
                  "offset": 116
                },
                {
                  "val": "5",
                  "offset": 132
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat4(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18590000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 154,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 155,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:58:49.013Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 594000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 162,
        "name": "CDS is unable to map a persons' addresses when both are non-existent",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-persons--addresses-when-both-are-non-existent;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 61000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 149,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 150,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 151,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 152,
            "name": "the mha change address file contains information that john changed from a new (mha_c)condo property to a new (mha_c)landed property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 79
                },
                {
                  "val": "condo",
                  "offset": 85
                },
                {
                  "val": "mha_c",
                  "offset": 110
                },
                {
                  "val": "landed",
                  "offset": 116
                },
                {
                  "val": "5",
                  "offset": 132
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat4(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18465000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 154,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 155,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:08.212Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 592000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 163,
        "name": "CDS is unable to map a persons' addresses when both are non-existent",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-persons--addresses-when-both-are-non-existent;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 56000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 149,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 150,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 151,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 152,
            "name": "the mha change address file contains information that john changed from a new (mha_c)condo property to a new (nca)landed property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 79
                },
                {
                  "val": "condo",
                  "offset": 85
                },
                {
                  "val": "nca",
                  "offset": 110
                },
                {
                  "val": "landed",
                  "offset": 114
                },
                {
                  "val": "5",
                  "offset": 130
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat4(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18483000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 154,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 155,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:27.428Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 570000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 164,
        "name": "CDS is unable to map a persons' addresses when both are non-existent",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-persons--addresses-when-both-are-non-existent;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 58000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 149,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 150,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 151,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 152,
            "name": "the mha change address file contains information that john changed from a new (nca)condo property to a new (mha_z)landed property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 79
                },
                {
                  "val": "condo",
                  "offset": 83
                },
                {
                  "val": "mha_z",
                  "offset": 108
                },
                {
                  "val": "landed",
                  "offset": 114
                },
                {
                  "val": "5",
                  "offset": 130
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat4(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18433000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 154,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 155,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:46.582Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 634000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 165,
        "name": "CDS is unable to map a persons' addresses when both are non-existent",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-persons--addresses-when-both-are-non-existent;;9",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 55000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 149,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 150,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 151,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 152,
            "name": "the mha change address file contains information that john changed from a new (nca)condo property to a new (mha_c)landed property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 79
                },
                {
                  "val": "condo",
                  "offset": 83
                },
                {
                  "val": "mha_c",
                  "offset": 108
                },
                {
                  "val": "landed",
                  "offset": 114
                },
                {
                  "val": "5",
                  "offset": 130
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat4(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18409000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 154,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 155,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:00:05.756Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 649000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 166,
        "name": "CDS is unable to map a persons' addresses when both are non-existent",
        "description": "",
        "id": "mha-change-address;cds-is-unable-to-map-a-persons--addresses-when-both-are-non-existent;;10",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 60000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 149,
            "name": "A singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "abc",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 150,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 151,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 152,
            "name": "the mha change address file contains information that john changed from a new (nca)condo property to a new (nca)landed property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 79
                },
                {
                  "val": "condo",
                  "offset": 83
                },
                {
                  "val": "nca",
                  "offset": 108
                },
                {
                  "val": "landed",
                  "offset": 112
                },
                {
                  "val": "5",
                  "offset": 128
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat4(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18423000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 154,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 155,
            "name": "the error message contains Invalid validity of old address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid validity of old address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:00:24.981Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 618000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 278,
        "name": "MHA sends two files which claims John moved from bbb to ccc and subsequently aaa to bbb",
        "description": "",
        "id": "mha-change-address;mha-sends-two-files-which-claims-john-moved-from-bbb-to-ccc-and-subsequently-aaa-to-bbb",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 56000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 279,
            "name": "A 30 year old singaporean person john resides a hdb property aaa",
            "match": {
              "arguments": [
                {
                  "val": "30",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "hdb",
                  "offset": 48
                },
                {
                  "val": "aaa",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 280,
            "name": "A 30 year old singaporean person brandon resides a hdb property bbb",
            "match": {
              "arguments": [
                {
                  "val": "30",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "brandon",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 41
                },
                {
                  "val": "hdb",
                  "offset": 51
                },
                {
                  "val": "bbb",
                  "offset": 64
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 281,
            "name": "A 30 year old singaporean person charlie resides a hdb property ccc",
            "match": {
              "arguments": [
                {
                  "val": "30",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "charlie",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 41
                },
                {
                  "val": "hdb",
                  "offset": 51
                },
                {
                  "val": "ccc",
                  "offset": 64
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 282,
            "name": "the mha change address file with date of run 20200101 contains information that john changed from (mha_z)bbb to (mha_z)ccc 365 days ago",
            "match": {
              "arguments": [
                {
                  "val": "20200101",
                  "offset": 45
                },
                {
                  "val": "john",
                  "offset": 80
                },
                {
                  "val": "mha_z",
                  "offset": 99
                },
                {
                  "val": "bbb",
                  "offset": 105
                },
                {
                  "val": "mha_z",
                  "offset": 113
                },
                {
                  "val": "ccc",
                  "offset": 119
                },
                {
                  "val": "365",
                  "offset": 123
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18475000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 283,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 284,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 285,
            "name": "the error message contains Invalid Person Property association.",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Person Property association.",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 286,
            "name": "I will receive another file",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iWillReceiveAnotherFile()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 287,
            "name": "the mha change address file with date of run 20200102 contains information that john changed from (mha_z)aaa to (mha_z)bbb 367 days ago",
            "match": {
              "arguments": [
                {
                  "val": "20200102",
                  "offset": 45
                },
                {
                  "val": "john",
                  "offset": 80
                },
                {
                  "val": "mha_z",
                  "offset": 99
                },
                {
                  "val": "aaa",
                  "offset": 105
                },
                {
                  "val": "mha_z",
                  "offset": 113
                },
                {
                  "val": "bbb",
                  "offset": 119
                },
                {
                  "val": "367",
                  "offset": 123
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19996000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 288,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 289,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 290,
            "name": "john does not reside in aaa since 368 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "aaa",
                  "offset": 24
                },
                {
                  "val": "368",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:01:04.276Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 605000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 394,
        "name": "Given a change address file which contains duplicates in the address",
        "description": "",
        "id": "mha-change-address;given-a-change-address-file-which-contains-duplicates-in-the-address",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 55000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 395,
            "name": "A singaporean person john resides in a landed property abc in NCA format",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 39
                },
                {
                  "val": "abc",
                  "offset": 55
                },
                {
                  "val": "NCA",
                  "offset": 62
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAPropertyInFormat(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 32000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 396,
            "name": "A singaporean person johnson resides in a hdb property def in NCA format",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "johnson",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 29
                },
                {
                  "val": "hdb",
                  "offset": 42
                },
                {
                  "val": "def",
                  "offset": 55
                },
                {
                  "val": "NCA",
                  "offset": 62
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAPropertyInFormat(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 397,
            "name": "the mha change address file contains the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:S",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "20190909"
                ]
              },
              {
                "cells": [
                  "johnson",
                  "Existing:def,AddrType:S",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "20190909"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25323000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 401,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 402,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 403,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 404,
            "name": "I verify number of records in Property Detail table is 3",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.verifyNumberOfRecordsInPropertyDetailTable(long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:21.232Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 475000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 42,
        "name": "CDS fails to processes a MHA change address file with both full and partial duplicated records for same NRIC",
        "description": "",
        "id": "mha-change-address;cds-fails-to-processes-a-mha-change-address-file-with-both-full-and-partial-duplicated-records-for-same-nric",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 87000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 43,
            "name": "A singaporean person john resides in a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 39
                },
                {
                  "val": "abc",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 29000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 44,
            "name": "A singaporean person ahmeng resides in a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "ahmeng",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 28
                },
                {
                  "val": "landed",
                  "offset": 41
                },
                {
                  "val": "abc",
                  "offset": 57
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 45,
            "name": "the mha change address file contains the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:C",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "20190909"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:C",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "20190909"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:C",
                  "IndType:Z,AddrType:C,Block:14B,Street:22 Jalan Besar,Unit:14,Floor:40,Building:City View,Postal:232902",
                  "20190909"
                ]
              },
              {
                "cells": [
                  "ahmeng",
                  "Existing:abc,AddrType:C",
                  "IndType:Z,AddrType:C,Block:14B,Street:22 Jalan Besar,Unit:14,Floor:40,Building:City View,Postal:232902",
                  "20190909"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24017000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 51,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 52,
            "name": "the Mha Change Address batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 53,
            "name": "the error message contains Partially Duplicate Record found.",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found.",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:45.896Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 543000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 227,
        "name": "John moves to an existing special property address",
        "description": "",
        "id": "mha-change-address;john-moves-to-an-existing-special-property-address",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 60000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 228,
            "name": "A 60 year old singaporean person john resides a hdb property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "hdb",
                  "offset": 48
                },
                {
                  "val": "abc",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 47000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 229,
            "name": "A 40 year old singaporean person jane resides in a lorong_buangkok property abe",
            "match": {
              "arguments": [
                {
                  "val": "40",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "jane",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "lorong_buangkok",
                  "offset": 51
                },
                {
                  "val": "abe",
                  "offset": 76
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 230,
            "name": "the mha change address file contains information that john changed from (mha_z)abc to (mha_z)abe 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abc",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 87
                },
                {
                  "val": "abe",
                  "offset": 93
                },
                {
                  "val": "5",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19718000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 231,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 232,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 233,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 234,
            "name": "john does not reside in abc since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abc",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 235,
            "name": "john resides in the lorong buangkok special property",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personResidesInTheSpecialProperty(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:06.334Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 536000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 350,
        "name": "Given the NCA address format for file ingress",
        "description": "",
        "id": "mha-change-address;given-the-nca-address-format-for-file-ingress",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 57000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 351,
            "name": "A singaporean person john resides in a landed property abc in NCA format",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 39
                },
                {
                  "val": "abc",
                  "offset": 55
                },
                {
                  "val": "NCA",
                  "offset": 62
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAPropertyInFormat(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 352,
            "name": "the mha change address file contains the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:S",
                  "IndType: ,AddrType:S,Block:13C,Street:22 Hilton Street,Unit:22,Floor:32,Building:The Sail,Postal:232903",
                  "20190909"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19678000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 355,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 356,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 357,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:00:43.864Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 445000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 68,
        "name": "CDS successfully updates address information to a non existent address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-a-non-existent-address;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 232000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 57,
            "name": "A 60 year old singaporean person john owns a condo property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "owns",
                  "offset": 38
                },
                {
                  "val": "condo",
                  "offset": 45
                },
                {
                  "val": "abc",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 30000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 58,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 59,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 60,
            "name": "the mha change address file contains information that john changed from (mha_z)abe to a new (mha_z)condo property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abe",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 93
                },
                {
                  "val": "condo",
                  "offset": 99
                },
                {
                  "val": "5",
                  "offset": 114
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20167000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 61,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 62,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 63,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 64,
            "name": "john does not reside in abe since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abe",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 95000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 65,
            "name": "john resides in the new mha condo from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "mha",
                  "offset": 24
                },
                {
                  "val": "condo",
                  "offset": 28
                },
                {
                  "val": "5",
                  "offset": 39
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInNewAddressFromDaysAgo(java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:01:04.957Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 594000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 69,
        "name": "CDS successfully updates address information to a non existent address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-a-non-existent-address;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 66000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 57,
            "name": "A 60 year old singaporean person john owns a condo property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "owns",
                  "offset": 38
                },
                {
                  "val": "condo",
                  "offset": 45
                },
                {
                  "val": "abc",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 58,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 59,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 60,
            "name": "the mha change address file contains information that john changed from (mha_z)abe to a new (mha_c)condo property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abe",
                  "offset": 79
                },
                {
                  "val": "mha_c",
                  "offset": 93
                },
                {
                  "val": "condo",
                  "offset": 99
                },
                {
                  "val": "5",
                  "offset": 114
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20059000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 61,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 62,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 63,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 64,
            "name": "john does not reside in abe since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abe",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 65,
            "name": "john resides in the new mha condo from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "mha",
                  "offset": 24
                },
                {
                  "val": "condo",
                  "offset": 28
                },
                {
                  "val": "5",
                  "offset": 39
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInNewAddressFromDaysAgo(java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:01:25.792Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 619000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 70,
        "name": "CDS successfully updates address information to a non existent address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-a-non-existent-address;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 60000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 57,
            "name": "A 60 year old singaporean person john owns a condo property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "owns",
                  "offset": 38
                },
                {
                  "val": "condo",
                  "offset": 45
                },
                {
                  "val": "abc",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 58,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 59,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 60,
            "name": "the mha change address file contains information that john changed from (mha_z)abe to a new (nca)condo property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abe",
                  "offset": 79
                },
                {
                  "val": "nca",
                  "offset": 93
                },
                {
                  "val": "condo",
                  "offset": 97
                },
                {
                  "val": "5",
                  "offset": 112
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20104000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 61,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 62,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 63,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 64,
            "name": "john does not reside in abe since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abe",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 65,
            "name": "john resides in the new nca condo from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "nca",
                  "offset": 24
                },
                {
                  "val": "condo",
                  "offset": 28
                },
                {
                  "val": "5",
                  "offset": 39
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInNewAddressFromDaysAgo(java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:01:46.682Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 547000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 71,
        "name": "CDS successfully updates address information to a non existent address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-a-non-existent-address;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 64000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 57,
            "name": "A 60 year old singaporean person john owns a condo property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "owns",
                  "offset": 38
                },
                {
                  "val": "condo",
                  "offset": 45
                },
                {
                  "val": "abc",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 58,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 59,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 60,
            "name": "the mha change address file contains information that john changed from (mha_c)abe to a new (mha_z)condo property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 73
                },
                {
                  "val": "abe",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 93
                },
                {
                  "val": "condo",
                  "offset": 99
                },
                {
                  "val": "5",
                  "offset": 114
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20151000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 61,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 62,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 63,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 64,
            "name": "john does not reside in abe since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abe",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 65,
            "name": "john resides in the new mha condo from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "mha",
                  "offset": 24
                },
                {
                  "val": "condo",
                  "offset": 28
                },
                {
                  "val": "5",
                  "offset": 39
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInNewAddressFromDaysAgo(java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:02:07.566Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 605000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 72,
        "name": "CDS successfully updates address information to a non existent address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-a-non-existent-address;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 61000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 57,
            "name": "A 60 year old singaporean person john owns a condo property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "owns",
                  "offset": 38
                },
                {
                  "val": "condo",
                  "offset": 45
                },
                {
                  "val": "abc",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 58,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 59,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 60,
            "name": "the mha change address file contains information that john changed from (mha_c)abe to a new (mha_c)condo property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 73
                },
                {
                  "val": "abe",
                  "offset": 79
                },
                {
                  "val": "mha_c",
                  "offset": 93
                },
                {
                  "val": "condo",
                  "offset": 99
                },
                {
                  "val": "5",
                  "offset": 114
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20021000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 61,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 62,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 63,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 64,
            "name": "john does not reside in abe since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abe",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 65,
            "name": "john resides in the new mha condo from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "mha",
                  "offset": 24
                },
                {
                  "val": "condo",
                  "offset": 28
                },
                {
                  "val": "5",
                  "offset": 39
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInNewAddressFromDaysAgo(java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:02:28.376Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 543000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 73,
        "name": "CDS successfully updates address information to a non existent address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-a-non-existent-address;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 58000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 57,
            "name": "A 60 year old singaporean person john owns a condo property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "owns",
                  "offset": 38
                },
                {
                  "val": "condo",
                  "offset": 45
                },
                {
                  "val": "abc",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 58,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 59,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 60,
            "name": "the mha change address file contains information that john changed from (mha_c)abe to a new (nca)condo property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 73
                },
                {
                  "val": "abe",
                  "offset": 79
                },
                {
                  "val": "nca",
                  "offset": 93
                },
                {
                  "val": "condo",
                  "offset": 97
                },
                {
                  "val": "5",
                  "offset": 112
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20006000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 61,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 62,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 63,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 64,
            "name": "john does not reside in abe since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abe",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 65,
            "name": "john resides in the new nca condo from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "nca",
                  "offset": 24
                },
                {
                  "val": "condo",
                  "offset": 28
                },
                {
                  "val": "5",
                  "offset": 39
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInNewAddressFromDaysAgo(java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:02:49.089Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 596000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 74,
        "name": "CDS successfully updates address information to a non existent address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-a-non-existent-address;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 58000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 57,
            "name": "A 60 year old singaporean person john owns a condo property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "owns",
                  "offset": 38
                },
                {
                  "val": "condo",
                  "offset": 45
                },
                {
                  "val": "abc",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 58,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 59,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 60,
            "name": "the mha change address file contains information that john changed from (nca)abe to a new (mha_z)condo property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 73
                },
                {
                  "val": "abe",
                  "offset": 77
                },
                {
                  "val": "mha_z",
                  "offset": 91
                },
                {
                  "val": "condo",
                  "offset": 97
                },
                {
                  "val": "5",
                  "offset": 112
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20074000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 61,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 62,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 63,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 64,
            "name": "john does not reside in abe since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abe",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 65,
            "name": "john resides in the new mha condo from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "mha",
                  "offset": 24
                },
                {
                  "val": "condo",
                  "offset": 28
                },
                {
                  "val": "5",
                  "offset": 39
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInNewAddressFromDaysAgo(java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:03:09.932Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 762000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 75,
        "name": "CDS successfully updates address information to a non existent address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-a-non-existent-address;;9",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 60000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 57,
            "name": "A 60 year old singaporean person john owns a condo property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "owns",
                  "offset": 38
                },
                {
                  "val": "condo",
                  "offset": 45
                },
                {
                  "val": "abc",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 58,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 59,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 60,
            "name": "the mha change address file contains information that john changed from (nca)abe to a new (mha_c)condo property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 73
                },
                {
                  "val": "abe",
                  "offset": 77
                },
                {
                  "val": "mha_c",
                  "offset": 91
                },
                {
                  "val": "condo",
                  "offset": 97
                },
                {
                  "val": "5",
                  "offset": 112
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20018000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 61,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 62,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 63,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 64,
            "name": "john does not reside in abe since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abe",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 65,
            "name": "john resides in the new mha condo from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "mha",
                  "offset": 24
                },
                {
                  "val": "condo",
                  "offset": 28
                },
                {
                  "val": "5",
                  "offset": 39
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInNewAddressFromDaysAgo(java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:03:30.887Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 628000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 76,
        "name": "CDS successfully updates address information to a non existent address",
        "description": "",
        "id": "mha-change-address;cds-successfully-updates-address-information-to-a-non-existent-address;;10",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 68000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 57,
            "name": "A 60 year old singaporean person john owns a condo property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "owns",
                  "offset": 38
                },
                {
                  "val": "condo",
                  "offset": 45
                },
                {
                  "val": "abc",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 58,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 59,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 60,
            "name": "the mha change address file contains information that john changed from (nca)abe to a new (nca)condo property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 73
                },
                {
                  "val": "abe",
                  "offset": 77
                },
                {
                  "val": "nca",
                  "offset": 91
                },
                {
                  "val": "condo",
                  "offset": 95
                },
                {
                  "val": "5",
                  "offset": 110
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19981000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 61,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 62,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 63,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 64,
            "name": "john does not reside in abe since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abe",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 65,
            "name": "john resides in the new nca condo from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "nca",
                  "offset": 24
                },
                {
                  "val": "condo",
                  "offset": 28
                },
                {
                  "val": "5",
                  "offset": 39
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInNewAddressFromDaysAgo(java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:03:51.667Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 544000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 248,
        "name": "John moves to a new special property address",
        "description": "",
        "id": "mha-change-address;john-moves-to-a-new-special-property-address;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 59000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 239,
            "name": "A 60 year old singaporean person john resides a hdb property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "hdb",
                  "offset": 48
                },
                {
                  "val": "abc",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 240,
            "name": "the mha change address file contains information that john changed from (mha_z)abc to a new (mha_z)lorong_buangkok property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abc",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 93
                },
                {
                  "val": "lorong_buangkok",
                  "offset": 99
                },
                {
                  "val": "5",
                  "offset": 124
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20000000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 241,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 242,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 243,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "john does not reside in abc since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abc",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 245,
            "name": "john resides in the new mha lorong buangkok special property",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "mha",
                  "offset": 24
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personResidesInTheNewSpecialProperty(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:04:12.345Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 600000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 249,
        "name": "John moves to a new special property address",
        "description": "",
        "id": "mha-change-address;john-moves-to-a-new-special-property-address;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 53000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 239,
            "name": "A 60 year old singaporean person john resides a hdb property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "hdb",
                  "offset": 48
                },
                {
                  "val": "abc",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 240,
            "name": "the mha change address file contains information that john changed from (mha_z)abc to a new (mha_c)lorong_buangkok property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abc",
                  "offset": 79
                },
                {
                  "val": "mha_c",
                  "offset": 93
                },
                {
                  "val": "lorong_buangkok",
                  "offset": 99
                },
                {
                  "val": "5",
                  "offset": 124
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20045000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 241,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 242,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 243,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "john does not reside in abc since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abc",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 245,
            "name": "john resides in the new mha lorong buangkok special property",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "mha",
                  "offset": 24
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personResidesInTheNewSpecialProperty(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:04:33.113Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 557000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 250,
        "name": "John moves to a new special property address",
        "description": "",
        "id": "mha-change-address;john-moves-to-a-new-special-property-address;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 53000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 239,
            "name": "A 60 year old singaporean person john resides a hdb property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "hdb",
                  "offset": 48
                },
                {
                  "val": "abc",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 240,
            "name": "the mha change address file contains information that john changed from (mha_z)abc to a new (nca)lorong_buangkok property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abc",
                  "offset": 79
                },
                {
                  "val": "nca",
                  "offset": 93
                },
                {
                  "val": "lorong_buangkok",
                  "offset": 97
                },
                {
                  "val": "5",
                  "offset": 122
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19906000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 241,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 242,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 243,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "john does not reside in abc since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abc",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 245,
            "name": "john resides in the new nca lorong buangkok special property",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "nca",
                  "offset": 24
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personResidesInTheNewSpecialProperty(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:04:53.696Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 559000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 251,
        "name": "John moves to a new special property address",
        "description": "",
        "id": "mha-change-address;john-moves-to-a-new-special-property-address;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 54000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 239,
            "name": "A 60 year old singaporean person john resides a hdb property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "hdb",
                  "offset": 48
                },
                {
                  "val": "abc",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 240,
            "name": "the mha change address file contains information that john changed from (mha_c)abc to a new (mha_z)lorong_buangkok property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 73
                },
                {
                  "val": "abc",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 93
                },
                {
                  "val": "lorong_buangkok",
                  "offset": 99
                },
                {
                  "val": "5",
                  "offset": 124
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19949000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 241,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 242,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 243,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "john does not reside in abc since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abc",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 245,
            "name": "john resides in the new mha lorong buangkok special property",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "mha",
                  "offset": 24
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personResidesInTheNewSpecialProperty(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:05:14.331Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 590000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 252,
        "name": "John moves to a new special property address",
        "description": "",
        "id": "mha-change-address;john-moves-to-a-new-special-property-address;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 64000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 239,
            "name": "A 60 year old singaporean person john resides a hdb property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "hdb",
                  "offset": 48
                },
                {
                  "val": "abc",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 240,
            "name": "the mha change address file contains information that john changed from (mha_c)abc to a new (mha_c)lorong_buangkok property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 73
                },
                {
                  "val": "abc",
                  "offset": 79
                },
                {
                  "val": "mha_c",
                  "offset": 93
                },
                {
                  "val": "lorong_buangkok",
                  "offset": 99
                },
                {
                  "val": "5",
                  "offset": 124
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19924000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 241,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 242,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 243,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "john does not reside in abc since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abc",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 245,
            "name": "john resides in the new mha lorong buangkok special property",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "mha",
                  "offset": 24
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personResidesInTheNewSpecialProperty(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:05:34.987Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 650000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 253,
        "name": "John moves to a new special property address",
        "description": "",
        "id": "mha-change-address;john-moves-to-a-new-special-property-address;;7",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 79000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 239,
            "name": "A 60 year old singaporean person john resides a hdb property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "hdb",
                  "offset": 48
                },
                {
                  "val": "abc",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 240,
            "name": "the mha change address file contains information that john changed from (mha_c)abc to a new (nca)lorong_buangkok property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_c",
                  "offset": 73
                },
                {
                  "val": "abc",
                  "offset": 79
                },
                {
                  "val": "nca",
                  "offset": 93
                },
                {
                  "val": "lorong_buangkok",
                  "offset": 97
                },
                {
                  "val": "5",
                  "offset": 122
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19937000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 241,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 242,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 243,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "john does not reside in abc since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abc",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 245,
            "name": "john resides in the new nca lorong buangkok special property",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "nca",
                  "offset": 24
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personResidesInTheNewSpecialProperty(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:05:55.723Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 579000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 254,
        "name": "John moves to a new special property address",
        "description": "",
        "id": "mha-change-address;john-moves-to-a-new-special-property-address;;8",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 64000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 239,
            "name": "A 60 year old singaporean person john resides a hdb property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "hdb",
                  "offset": 48
                },
                {
                  "val": "abc",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 240,
            "name": "the mha change address file contains information that john changed from (nca)abc to a new (mha_z)lorong_buangkok property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 73
                },
                {
                  "val": "abc",
                  "offset": 77
                },
                {
                  "val": "mha_z",
                  "offset": 91
                },
                {
                  "val": "lorong_buangkok",
                  "offset": 97
                },
                {
                  "val": "5",
                  "offset": 122
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20057000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 241,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 242,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 243,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "john does not reside in abc since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abc",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 245,
            "name": "john resides in the new mha lorong buangkok special property",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "mha",
                  "offset": 24
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personResidesInTheNewSpecialProperty(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:06:16.494Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 559000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 255,
        "name": "John moves to a new special property address",
        "description": "",
        "id": "mha-change-address;john-moves-to-a-new-special-property-address;;9",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 60000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 239,
            "name": "A 60 year old singaporean person john resides a hdb property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "hdb",
                  "offset": 48
                },
                {
                  "val": "abc",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 240,
            "name": "the mha change address file contains information that john changed from (nca)abc to a new (mha_c)lorong_buangkok property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 73
                },
                {
                  "val": "abc",
                  "offset": 77
                },
                {
                  "val": "mha_c",
                  "offset": 91
                },
                {
                  "val": "lorong_buangkok",
                  "offset": 97
                },
                {
                  "val": "5",
                  "offset": 122
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20181000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 241,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 242,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 243,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "john does not reside in abc since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abc",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 245,
            "name": "john resides in the new mha lorong buangkok special property",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "mha",
                  "offset": 24
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personResidesInTheNewSpecialProperty(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:06:37.361Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 594000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 256,
        "name": "John moves to a new special property address",
        "description": "",
        "id": "mha-change-address;john-moves-to-a-new-special-property-address;;10",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 61000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 239,
            "name": "A 60 year old singaporean person john resides a hdb property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "hdb",
                  "offset": 48
                },
                {
                  "val": "abc",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 240,
            "name": "the mha change address file contains information that john changed from (nca)abc to a new (nca)lorong_buangkok property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "nca",
                  "offset": 73
                },
                {
                  "val": "abc",
                  "offset": 77
                },
                {
                  "val": "nca",
                  "offset": 91
                },
                {
                  "val": "lorong_buangkok",
                  "offset": 95
                },
                {
                  "val": "5",
                  "offset": 120
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20020000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 241,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 242,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 243,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "john does not reside in abc since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abc",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 245,
            "name": "john resides in the new nca lorong buangkok special property",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "nca",
                  "offset": 24
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personResidesInTheNewSpecialProperty(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:06:58.103Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 575000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 360,
        "name": "Given the nca or mha format, property details should show format type",
        "description": "",
        "id": "mha-change-address;given-the-nca-or-mha-format--property-details-should-show-format-type",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 53000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 361,
            "name": "A singaporean person john resides in a landed property abc in NCA format",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 39
                },
                {
                  "val": "abc",
                  "offset": 55
                },
                {
                  "val": "NCA",
                  "offset": 62
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAPropertyInFormat(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 27000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 362,
            "name": "A singaporean person johnson resides in a hdb property def in MHA format",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "johnson",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 29
                },
                {
                  "val": "hdb",
                  "offset": 42
                },
                {
                  "val": "def",
                  "offset": 55
                },
                {
                  "val": "MHA",
                  "offset": 62
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAPropertyInFormat(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 363,
            "name": "the mha change address file contains the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:S",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "20190909"
                ]
              },
              {
                "cells": [
                  "johnson",
                  "Existing:def,AddrType:C",
                  "IndType: ,AddrType:S,Block:123,Street:22 Jalan Jalan,Unit:12,Floor:20,Building:City View,Postal:452932",
                  "20190909"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25263000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 367,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 368,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 369,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 370,
            "name": "i verify that john has current residence with property type format MHA persisted in Property Detail",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 14
                },
                {
                  "val": "MHA",
                  "offset": 67
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.iVerifyThatJohnHasCurrentResidencePropertyTypeFormatNCAPersistedInPropertyDetail(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 371,
            "name": "i verify that johnson has current residence with property type format NCA persisted in Property Detail",
            "match": {
              "arguments": [
                {
                  "val": "johnson",
                  "offset": 14
                },
                {
                  "val": "NCA",
                  "offset": 70
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.iVerifyThatJohnHasCurrentResidencePropertyTypeFormatNCAPersistedInPropertyDetail(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:32.687Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 585000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 169,
        "name": "Change address file states a previous address that a person once lived in",
        "description": "",
        "id": "mha-change-address;change-address-file-states-a-previous-address-that-a-person-once-lived-in",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 99000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 170,
            "name": "A 60 year old singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "owns",
                  "offset": 38
                },
                {
                  "val": "landed",
                  "offset": 45
                },
                {
                  "val": "abc",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 36000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 171,
            "name": "john owns a landed property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "owns",
                  "offset": 5
                },
                {
                  "val": "landed",
                  "offset": 12
                },
                {
                  "val": "abd",
                  "offset": 28
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 172,
            "name": "john resides in a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abe",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 173,
            "name": "john resided in a hdb property xyz 100 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "hdb",
                  "offset": 18
                },
                {
                  "val": "xyz",
                  "offset": 31
                },
                {
                  "val": "100",
                  "offset": 35
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personResidedNAHdbPropertyXyzDaysAgo(java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 174,
            "name": "the mha change address file contains information that john changed from (mha_z)xyz to (mha_z)abd 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "xyz",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 87
                },
                {
                  "val": "abd",
                  "offset": 93
                },
                {
                  "val": "5",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20127000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 175,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 176,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:53.665Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 640000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 293,
        "name": "MHA sends two files which claims John moved from bbb to ccc and subsequently aaa to bbb",
        "description": "",
        "id": "mha-change-address;mha-sends-two-files-which-claims-john-moved-from-bbb-to-ccc-and-subsequently-aaa-to-bbb",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 73000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 294,
            "name": "A 30 year old singaporean person john resides a hdb property aaa",
            "match": {
              "arguments": [
                {
                  "val": "30",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "hdb",
                  "offset": 48
                },
                {
                  "val": "aaa",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 48000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 295,
            "name": "A 30 year old singaporean person brandon resides a hdb property bbb",
            "match": {
              "arguments": [
                {
                  "val": "30",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "brandon",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 41
                },
                {
                  "val": "hdb",
                  "offset": 51
                },
                {
                  "val": "bbb",
                  "offset": 64
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 296,
            "name": "A 30 year old singaporean person johnson resides a hdb property ccc",
            "match": {
              "arguments": [
                {
                  "val": "30",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "johnson",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 41
                },
                {
                  "val": "hdb",
                  "offset": 51
                },
                {
                  "val": "ccc",
                  "offset": 64
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 297,
            "name": "the mha change address file with date of run 20200101 contains information that john changed from (mha_z)bbb to (mha_z)ccc 365 days ago",
            "match": {
              "arguments": [
                {
                  "val": "20200101",
                  "offset": 45
                },
                {
                  "val": "john",
                  "offset": 80
                },
                {
                  "val": "mha_z",
                  "offset": 99
                },
                {
                  "val": "bbb",
                  "offset": 105
                },
                {
                  "val": "mha_z",
                  "offset": 113
                },
                {
                  "val": "ccc",
                  "offset": 119
                },
                {
                  "val": "365",
                  "offset": 123
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18514000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 298,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 299,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 300,
            "name": "the error message contains Invalid Person Property association.",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Person Property association.",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 301,
            "name": "I will receive another file",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iWillReceiveAnotherFile()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 302,
            "name": "the mha change address file with date of run 20200102 contains information that john changed from (mha_z)aaa to (mha_z)bbb 367 days ago",
            "match": {
              "arguments": [
                {
                  "val": "20200102",
                  "offset": 45
                },
                {
                  "val": "john",
                  "offset": 80
                },
                {
                  "val": "mha_z",
                  "offset": 99
                },
                {
                  "val": "aaa",
                  "offset": 105
                },
                {
                  "val": "mha_z",
                  "offset": 113
                },
                {
                  "val": "bbb",
                  "offset": 119
                },
                {
                  "val": "367",
                  "offset": 123
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19906000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 303,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 304,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 305,
            "name": "john does not reside in aaa since 368 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "aaa",
                  "offset": 24
                },
                {
                  "val": "368",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:32.966Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 619000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 407,
        "name": "Given a change address file which contains valid, invalid, completely, partially and hybrid duplicate records",
        "description": "",
        "id": "mha-change-address;given-a-change-address-file-which-contains-valid--invalid--completely--partially-and-hybrid-duplicate-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 70000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 408,
            "name": "A singaporean person john resides in a hdb property abc in NCA format",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "hdb",
                  "offset": 39
                },
                {
                  "val": "abc",
                  "offset": 52
                },
                {
                  "val": "NCA",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAPropertyInFormat(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 409,
            "name": "A singaporean person johnson resides in a hdb property def in NCA format",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "johnson",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 29
                },
                {
                  "val": "hdb",
                  "offset": 42
                },
                {
                  "val": "def",
                  "offset": 55
                },
                {
                  "val": "NCA",
                  "offset": 62
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAPropertyInFormat(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 41000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 410,
            "name": "A singaporean person jane resides in a hdb property ghi in NCA format",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "hdb",
                  "offset": 39
                },
                {
                  "val": "ghi",
                  "offset": 52
                },
                {
                  "val": "NCA",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAPropertyInFormat(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 39000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 411,
            "name": "A singaporean person june resides in a hdb property jkl in NCA format",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "june",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "hdb",
                  "offset": 39
                },
                {
                  "val": "jkl",
                  "offset": 52
                },
                {
                  "val": "NCA",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAPropertyInFormat(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 35000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 412,
            "name": "A singaporean person jean resides in a hdb property mno in NCA format",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jean",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "hdb",
                  "offset": 39
                },
                {
                  "val": "mno",
                  "offset": 52
                },
                {
                  "val": "NCA",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAPropertyInFormat(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 413,
            "name": "the mha change address file contains the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:S",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "20190909"
                ]
              },
              {
                "cells": [
                  "johnson",
                  "Existing:def,AddrType:S",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "99991231"
                ]
              },
              {
                "cells": [
                  "johnson",
                  "Existing:def,AddrType:S",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "99991231"
                ]
              },
              {
                "cells": [
                  "jane",
                  "Existing:ghi,AddrType:S",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "99991231"
                ]
              },
              {
                "cells": [
                  "jane",
                  "Existing:ghi,AddrType:S",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "99990101"
                ]
              },
              {
                "cells": [
                  "june",
                  "Existing:jkl,AddrType:S",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "99991231"
                ]
              },
              {
                "cells": [
                  "june",
                  "Existing:jkl,AddrType:S",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "99991231"
                ]
              },
              {
                "cells": [
                  "june",
                  "Existing:jkl,AddrType:S",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "99990101"
                ]
              },
              {
                "cells": [
                  "jean",
                  "Existing:mno,AddrType:S",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "99991231"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24212000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 424,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 425,
            "name": "the Mha Change Address batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 426,
            "name": "I verify number of is mappable records in the Change Address Validated table is 2",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.iVerifyNumberOfIsMappableRecordsInChangeAddressValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 427,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Address change date cannot be more recent than File Cut-off Date",
                  "2"
                ]
              },
              {
                "cells": [
                  "Completely Duplicate Record found.",
                  "2"
                ]
              },
              {
                "cells": [
                  "Partially Duplicate Record found.",
                  "5"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:58.100Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 664000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 434,
        "name": "Given a change address file which contains a special property island street name",
        "description": "",
        "id": "mha-change-address;given-a-change-address-file-which-contains-a-special-property-island-street-name",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 65000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 435,
            "name": "A singaporean person john resides in a hdb property angmokio",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "hdb",
                  "offset": 39
                },
                {
                  "val": "angmokio",
                  "offset": 52
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 436,
            "name": "the mha change address file contains the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:angmokio,AddrType:C",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 SERAYA Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "20190909"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20054000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 439,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 440,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 441,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 442,
            "name": "I verify that john has previous residence angmokio and now has special property persisted in Special Property with type SPECIAL_ISLAND_STREET_NAME",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 14
                },
                {
                  "val": "angmokio",
                  "offset": 42
                },
                {
                  "val": "SPECIAL_ISLAND_STREET_NAME",
                  "offset": 120
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.iVerifyThatJohnHasSpecialPropertyPersistedInSpecialProperty(java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:08.869Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 525000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 16,
        "name": "CDS fails to processes a MHA change address file with partial duplicated records of same NRIC but different current address",
        "description": "",
        "id": "mha-change-address;cds-fails-to-processes-a-mha-change-address-file-with-partial-duplicated-records-of-same-nric-but-different-current-address",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 91000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 17,
            "name": "A singaporean person john resides in a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 39
                },
                {
                  "val": "abc",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 46000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 18,
            "name": "A singaporean person johnson resides in a hdb property def",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "johnson",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 29
                },
                {
                  "val": "hdb",
                  "offset": 42
                },
                {
                  "val": "def",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 19,
            "name": "the mha change address file contains the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:C",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "20190909"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:C",
                  "IndType:Z,AddrType:C,Block:14B,Street:22 Jalan Besar,Unit:14,Floor:40,Building:City View,Postal:232902",
                  "20190909"
                ]
              },
              {
                "cells": [
                  "johnson",
                  "Existing:def,AddrType:C",
                  "IndType:Z,AddrType:C,Block:123,Street:22 Jalan Jalan,Unit:12,Floor:20,Building:City View,Postal:452932",
                  "20190909"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24588000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 24,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 25,
            "name": "the Mha Change Address batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 26,
            "name": "the error message contains Partially Duplicate Record found.",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found.",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:34.182Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 615000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 204,
        "name": "John moves back to the same address",
        "description": "",
        "id": "mha-change-address;john-moves-back-to-the-same-address",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 67000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 205,
            "name": "A 60 year old singaporean person john owns a hdb property abc",
            "match": {
              "arguments": [
                {
                  "val": "60",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "owns",
                  "offset": 38
                },
                {
                  "val": "hdb",
                  "offset": 45
                },
                {
                  "val": "abc",
                  "offset": 58
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 206,
            "name": "john resides in a condo property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "condo",
                  "offset": 18
                },
                {
                  "val": "abd",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 207,
            "name": "mha change address file states that john moved from abd to abc 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 36
                },
                {
                  "val": "abd",
                  "offset": 52
                },
                {
                  "val": "abc",
                  "offset": 59
                },
                {
                  "val": "6",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.mhaChangeAddressFileStatesThatPersonMovedFromPropertyToPropertyDaysAgo(java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 208,
            "name": "the mha change address file contains information that john changed from (mha_z)abc to (mha_z)abd 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abc",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 87
                },
                {
                  "val": "abd",
                  "offset": 93
                },
                {
                  "val": "5",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20264000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 209,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 210,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 211,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 212,
            "name": "john does not reside in abc since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abc",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 213,
            "name": "john resides in abd from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abd",
                  "offset": 16
                },
                {
                  "val": "5",
                  "offset": 25
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAddressFromDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:55.248Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 558000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 332,
        "name": "Given address changed date is after the run date",
        "description": "",
        "id": "mha-change-address;given-address-changed-date-is-after-the-run-date",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 61000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 333,
            "name": "A singaporean person john resides in a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 39
                },
                {
                  "val": "abc",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 334,
            "name": "the mha change address file contains the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:C",
                  "IndType:Z,AddrType:C,Block:13C,Street:22 Hilton Street,Unit:22,Floor:32,Building:The Sail,Postal:232903",
                  "20210909"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18565000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 337,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 338,
            "name": "the Mha Change Address batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:00.355Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 423000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 29,
        "name": "CDS processes a MHA change address file with full duplicated records of same NRIC and current address",
        "description": "",
        "id": "mha-change-address;cds-processes-a-mha-change-address-file-with-full-duplicated-records-of-same-nric-and-current-address",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 89000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 30,
            "name": "A singaporean person john resides in a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 39
                },
                {
                  "val": "abc",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 44000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 31,
            "name": "A singaporean person jane resides in a condo property efg",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "condo",
                  "offset": 39
                },
                {
                  "val": "efg",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 32,
            "name": "the mha change address file contains the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "jane",
                  "Existing:efg,AddrType:C",
                  "IndType:Z,AddrType:C,Block:13C,Street:22 Hilton Street,Unit:22,Floor:32,Building:The Sail,Postal:232903",
                  "20190909"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:C",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "20190909"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:C",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "20190909"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25080000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 37,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 38,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 39,
            "name": "the error message contains Completely Duplicate Record found.",
            "match": {
              "arguments": [
                {
                  "val": "Completely Duplicate Record found.",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:26.049Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 639000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 216,
        "name": "Person has changed his address many times in the past and mha tells us that he change address again",
        "description": "",
        "id": "mha-change-address;person-has-changed-his-address-many-times-in-the-past-and-mha-tells-us-that-he-change-address-again",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 73000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 217,
            "name": "A 30 year old singaporean person john resides a hdb property abc",
            "match": {
              "arguments": [
                {
                  "val": "30",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "hdb",
                  "offset": 48
                },
                {
                  "val": "abc",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 140000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 218,
            "name": "john had lived in a hdb property abd from 12 Jan 2000 to 12 Jan 2015",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "hdb",
                  "offset": 20
                },
                {
                  "val": "abd",
                  "offset": 33
                },
                {
                  "val": "12 Jan 2000",
                  "offset": 42
                },
                {
                  "val": "12 Jan 2015",
                  "offset": 57
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personHadLivedInAPropertyFromYearsAgoToYearsAgo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 52000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 219,
            "name": "john had lived in a hdb property abf from 13 Feb 2015 to 12 Jan 2019",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "hdb",
                  "offset": 20
                },
                {
                  "val": "abf",
                  "offset": 33
                },
                {
                  "val": "13 Feb 2015",
                  "offset": 42
                },
                {
                  "val": "12 Jan 2019",
                  "offset": 57
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personHadLivedInAPropertyFromYearsAgoToYearsAgo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 220,
            "name": "the mha change address file contains information that john changed from (mha_z)abc to a new (mha_z)landed property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abc",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 93
                },
                {
                  "val": "landed",
                  "offset": 99
                },
                {
                  "val": "5",
                  "offset": 115
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19713000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 221,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 222,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 224,
            "name": "john does not reside in abc since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abc",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:46.725Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 568000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 341,
        "name": "Given the new address is private property type",
        "description": "",
        "id": "mha-change-address;given-the-new-address-is-private-property-type",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 75000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 342,
            "name": "A singaporean person john owns a landed property a",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "a",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 343,
            "name": "john resides in a hdb property b",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "hdb",
                  "offset": 18
                },
                {
                  "val": "b",
                  "offset": 31
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 344,
            "name": "the mha change address file contains information that john changed from (mha_z)b to (mha_z)a 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "b",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 85
                },
                {
                  "val": "a",
                  "offset": 91
                },
                {
                  "val": "5",
                  "offset": 93
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19660000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 345,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 346,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 347,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      }
    ],
    "name": "MHA Change address",
    "description": "",
    "id": "mha-change-address",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_change_address.feature",
    "tags": [
      {
        "name": "@datasource",
        "location": {
          "line": 1,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@development",
        "location": {
          "line": 2,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@change_address",
        "location": {
          "line": 3,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@mha",
        "location": {
          "line": 4,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@truncate",
        "location": {
          "line": 5,
          "column": 1
        },
        "type": "Tag"
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:49:42.943Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 628000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "Mha sends an empty file for Change in Person details",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-an-empty-file-for-change-in-person-details",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 10,
            "name": "the mha change in person details file is empty",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaChangeInPersonDetailsFileIsEmpty()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1235000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 11,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 12,
            "name": "the Mha Change of Personal Details batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 13,
            "name": "the error message contains Must have at least 1 valid body record",
            "match": {
              "arguments": [
                {
                  "val": "Must have at least 1 valid body record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:44.857Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 404000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 140,
        "name": "Mha sends a file with a detail change for a person but new value is already in the database",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-but-new-value-is-already-in-the-database;;2",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 46000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "B",
                  "20000101",
                  "20000101",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18460000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 135,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 136,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 137,
            "name": "the error message contains New DOB already exists",
            "match": {
              "arguments": [
                {
                  "val": "New DOB already exists",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:03.805Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 533000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 141,
        "name": "Mha sends a file with a detail change for a person but new value is already in the database",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-but-new-value-is-already-in-the-database;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 49000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Samantha Nami",
                  "Samantha Nami",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18445000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 135,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 136,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 137,
            "name": "the error message contains New name already exists",
            "match": {
              "arguments": [
                {
                  "val": "New name already exists",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:22.872Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 522000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 142,
        "name": "Mha sends a file with a detail change for a person but new value is already in the database",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-but-new-value-is-already-in-the-database;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 50000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "S",
                  "F",
                  "F",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18511000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 135,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 136,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 137,
            "name": "the error message contains New gender already exists",
            "match": {
              "arguments": [
                {
                  "val": "New gender already exists",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:41.997Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 578000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 292,
        "name": "Mha sends a person detail change file containing valid, invalid, completely, partially and hybrid duplicate records",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-person-detail-change-file-containing-valid--invalid--completely--partially-and-hybrid-duplicate-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 237000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 293,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "New Name",
                  "New Name",
                  "20200211"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "New Name",
                  "New Name",
                  "20200211"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "N",
                  "Michael Jackson",
                  "Robert Chan",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S2915858D",
                  "B",
                  "19910101",
                  "19910101",
                  "20200211"
                ]
              },
              {
                "cells": [
                  "S2915858D",
                  "B",
                  "19910101",
                  "19910101",
                  "20190211"
                ]
              },
              {
                "cells": [
                  "S1765629E",
                  "B",
                  "19910101",
                  "19910101",
                  "20200211"
                ]
              },
              {
                "cells": [
                  "S1765629E",
                  "B",
                  "19910101",
                  "19910101",
                  "20200211"
                ]
              },
              {
                "cells": [
                  "S1765629E",
                  "B",
                  "19910101",
                  "19910101",
                  "20190211"
                ]
              },
              {
                "cells": [
                  "T1601547J",
                  "N",
                  "Name of T1601547J",
                  "Name of T1601547J",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24119000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 304,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 305,
            "name": "the Mha Change of Personal Details batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 306,
            "name": "I verify number of is mappable records in the Change Person Detail Validated table is 2",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 86
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.iVerifyNumberOfIsMappableRecordsInNewCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 307,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "New name already exists in CD database",
                  "2"
                ]
              },
              {
                "cells": [
                  "Completely Duplicate Record found.",
                  "2"
                ]
              },
              {
                "cells": [
                  "Partially Duplicate Record found.",
                  "5"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:13:18.915Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 614000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 125,
        "name": "Mha sends a file with a detail change for a person with no such existing detail record",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-with-no-such-existing-detail-record;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 70000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 116,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "B",
                  "00010101",
                  "20000924",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 119,
            "name": "the person with nric S3899408E does not have an existing Person_Detail record",
            "match": {
              "arguments": [
                {
                  "val": "S3899408E",
                  "offset": 21
                },
                {
                  "val": "Person_Detail",
                  "offset": 57
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.thePersonWithDoesNotHaveAnExistingPersonDetailRecord(java.lang.String,cds_automation.enums.datasource.MhaChangePersonDetailsEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18512000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 120,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 121,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 122,
            "name": "the error message contains Person Detail not found",
            "match": {
              "arguments": [
                {
                  "val": "Person Detail not found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:13:38.193Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 554000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 126,
        "name": "Mha sends a file with a detail change for a person with no such existing detail record",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-with-no-such-existing-detail-record;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 51000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 116,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Non existing name",
                  "xxx",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 119,
            "name": "the person with nric S3899408E does not have an existing Person_Name record",
            "match": {
              "arguments": [
                {
                  "val": "S3899408E",
                  "offset": 21
                },
                {
                  "val": "Person_Name",
                  "offset": 57
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.thePersonWithDoesNotHaveAnExistingPersonDetailRecord(java.lang.String,cds_automation.enums.datasource.MhaChangePersonDetailsEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18436000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 120,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 121,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 122,
            "name": "the error message contains Person Name not found",
            "match": {
              "arguments": [
                {
                  "val": "Person Name not found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:13:57.296Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 550000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 127,
        "name": "Mha sends a file with a detail change for a person with no such existing detail record",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-with-no-such-existing-detail-record;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 49000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 116,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "S",
                  "U",
                  "F",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 119,
            "name": "the person with nric S3899408E does not have an existing Person_Gender record",
            "match": {
              "arguments": [
                {
                  "val": "S3899408E",
                  "offset": 21
                },
                {
                  "val": "Person_Gender",
                  "offset": 57
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.thePersonWithDoesNotHaveAnExistingPersonDetailRecord(java.lang.String,cds_automation.enums.datasource.MhaChangePersonDetailsEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18406000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 120,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 121,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 122,
            "name": "the error message contains Person Gender not found",
            "match": {
              "arguments": [
                {
                  "val": "Person Gender not found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:14:16.360Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 509000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 281,
        "name": "Mha sends a file with a detail change for a person with changes in all 3 fields (i.e. DOB, Name & Gender)",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-with-changes-in-all-3-fields-(i.e.-dob--name-&-gender)",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 98000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 282,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "B",
                  "19900101",
                  "19890101",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Michael Jackson",
                  "Robert Chan",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "S",
                  "M",
                  "U",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25164000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 287,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 288,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 289,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:11:05.124Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 539000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 68,
        "name": "Mha sends a file with repeated partial duplicated birth date",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-repeated-partial-duplicated-birth-date",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 99000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 69,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S5881915H",
                  "B",
                  "20200101",
                  "20191231",
                  "valid"
                ]
              },
              {
                "cells": [
                  "valid",
                  "N",
                  "Chao Ah Beng",
                  "Tan Ah Beng",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S5881915H",
                  "B",
                  "20200101",
                  "20191231",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23900000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 74,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 75,
            "name": "the Mha Change of Personal Details batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 76,
            "name": "the error message contains Partially Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:11:29.706Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 480000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 229,
        "name": "Mha sends 2 valid Change in Person details file with change date out of order",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-2-valid-change-in-person-details-file-with-change-date-out-of-order;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 77000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 212,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Name One",
                  "Name Three",
                  "20180201"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "M",
                  "U",
                  "20180201"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "B",
                  "20000101",
                  "19900101",
                  "20180201"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25012000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 217,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 218,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 219,
            "name": "the mha person details file is of the following contents and with header date of 2 days ago:",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 81
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileContainsTheFollowingContents(int,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Name Two",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "F",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "B",
                  "19950101",
                  "20180101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23392000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 224,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 225,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 226,
            "name": "the error message contains Manual update required as new DOB is after existing DOB and may result in conflicts",
            "match": {
              "arguments": [
                {
                  "val": "Manual update required as new DOB is after existing DOB and may result in conflicts",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:12:18.707Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 586000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 230,
        "name": "Mha sends 2 valid Change in Person details file with change date out of order",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-2-valid-change-in-person-details-file-with-change-date-out-of-order;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 77000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 212,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Name One",
                  "Name Three",
                  "20180201"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "M",
                  "U",
                  "20180201"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "B",
                  "20000101",
                  "19900101",
                  "20180201"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25041000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 217,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 218,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 219,
            "name": "the mha person details file is of the following contents and with header date of 2 days ago:",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 81
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileContainsTheFollowingContents(int,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Name Two",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "F",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "B",
                  "19950101",
                  "20180101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23323000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 224,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 225,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 226,
            "name": "the error message contains New record is attempting to change a past (not current) record",
            "match": {
              "arguments": [
                {
                  "val": "New record is attempting to change a past (not current) record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:13:07.769Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 476000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 231,
        "name": "Mha sends 2 valid Change in Person details file with change date out of order",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-2-valid-change-in-person-details-file-with-change-date-out-of-order;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 75000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 212,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Name One",
                  "Name Three",
                  "20180201"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "M",
                  "U",
                  "20180201"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "B",
                  "20000101",
                  "19900101",
                  "20180201"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24972000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 217,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 218,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 219,
            "name": "the mha person details file is of the following contents and with header date of 2 days ago:",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 81
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileContainsTheFollowingContents(int,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Name Two",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "F",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "B",
                  "19950101",
                  "20180101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23336000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 224,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 225,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 226,
            "name": "the error message contains New record is attempting to change a past (not current) record",
            "match": {
              "arguments": [
                {
                  "val": "New record is attempting to change a past (not current) record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:41.197Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 568000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 80,
        "name": "Mha sends a file with full duplicated records",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-full-duplicated-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 163000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 81,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S5881915H",
                  "N",
                  "Jay Chou",
                  "Tan Ah Beng",
                  "20180723"
                ]
              },
              {
                "cells": [
                  "valid",
                  "B",
                  "20010924",
                  "20000924",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S5881915H",
                  "N",
                  "Jay Chou",
                  "Tan Ah Beng",
                  "20180723"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25469000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 86,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 87,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 88,
            "name": "the error message contains Completely Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Completely Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:07.439Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 492000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 248,
        "name": "Mha sends a file with a detail change for a person with erroneous Gender, DOB and Name values",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-with-erroneous-gender--dob-and-name-values;;2",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 126000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 236,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "S",
                  "U",
                  "A",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Robert Chan",
                  "",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "B",
                  "19900101",
                  "31121989",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "S",
                  "F",
                  "2",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "M",
                  "B",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12290000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 243,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "the Mha Change of Personal Details batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 245,
            "name": "the error message contains Invalid Gender",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Gender",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:20.392Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 511000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 249,
        "name": "Mha sends a file with a detail change for a person with erroneous Gender, DOB and Name values",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-with-erroneous-gender--dob-and-name-values;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 123000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 236,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "S",
                  "U",
                  "A",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Robert Chan",
                  "",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "B",
                  "19900101",
                  "31121989",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "S",
                  "F",
                  "2",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "M",
                  "B",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12191000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 243,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "the Mha Change of Personal Details batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 245,
            "name": "the error message contains Incorrect Date of Birth format",
            "match": {
              "arguments": [
                {
                  "val": "Incorrect Date of Birth format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:33.258Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 493000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 250,
        "name": "Mha sends a file with a detail change for a person with erroneous Gender, DOB and Name values",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-with-erroneous-gender--dob-and-name-values;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 124000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 236,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "S",
                  "U",
                  "A",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Robert Chan",
                  "",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "B",
                  "19900101",
                  "31121989",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "S",
                  "F",
                  "2",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "M",
                  "B",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12151000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 243,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "the Mha Change of Personal Details batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 245,
            "name": "the error message contains DATA ITEM NEW VALUE cannot be null/blank",
            "match": {
              "arguments": [
                {
                  "val": "DATA ITEM NEW VALUE cannot be null/blank",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:46.066Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 488000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 251,
        "name": "Mha sends a file with a detail change for a person with erroneous Gender, DOB and Name values",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-with-erroneous-gender--dob-and-name-values;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 120000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 236,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "S",
                  "U",
                  "A",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Robert Chan",
                  "",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "B",
                  "19900101",
                  "31121989",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "S",
                  "F",
                  "2",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "M",
                  "B",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12122000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 243,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "the Mha Change of Personal Details batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 245,
            "name": "the error message contains Invalid Gender",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Gender",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:58.839Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 520000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 252,
        "name": "Mha sends a file with a detail change for a person with erroneous Gender, DOB and Name values",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-with-erroneous-gender--dob-and-name-values;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 117000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 236,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "S",
                  "U",
                  "A",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Robert Chan",
                  "",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "B",
                  "19900101",
                  "31121989",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "S",
                  "F",
                  "2",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "M",
                  "B",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12113000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 243,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "the Mha Change of Personal Details batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 245,
            "name": "the error message contains Invalid Gender",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Gender",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:01:30.335Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 572000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 92,
        "name": "Mha sends a file with both full duplicated and partial duplicated records",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-both-full-duplicated-and-partial-duplicated-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 116000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 93,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S5881915H",
                  "N",
                  "Jay Chou",
                  "Tan Ah Beng",
                  "20180723"
                ]
              },
              {
                "cells": [
                  "S5881915H",
                  "N",
                  "Jay Chou",
                  "Tan Ah Lian",
                  "20180723"
                ]
              },
              {
                "cells": [
                  "S5881915H",
                  "N",
                  "Jay Chou",
                  "Tan Ah Beng",
                  "20180723"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12695000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 98,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 99,
            "name": "the Mha Change of Personal Details batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 100,
            "name": "the error message contains Partially Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:01:43.764Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 545000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 256,
        "name": "Mha sends a file with a detail change for a person with erroneous Name values",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-with-erroneous-name-values",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 64000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 257,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Robert Chan",
                  "19900612",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "N",
                  "Margaret Chan",
                  "M",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25394000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 261,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 262,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          },
          {
            "name": "@gryffindor-1281"
          },
          {
            "name": "@not-a-bug"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:26.646Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 545000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 44,
        "name": "Mha sends a file with repeated partial duplicated name",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-repeated-partial-duplicated-name",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 111000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 45,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S5881915H",
                  "N",
                  "Jay Chou",
                  "Tan Ah Beng",
                  "valid"
                ]
              },
              {
                "cells": [
                  "valid",
                  "B",
                  "20010924",
                  "20000924",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S5881915H",
                  "N",
                  "Jay Chou",
                  "Tan Tan Ah Beng",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24077000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 50,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 51,
            "name": "the Mha Change of Personal Details batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 52,
            "name": "the error message contains Partially Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:51.424Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 487000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 181,
        "name": "Mha sends a valid Change in Person details file for processing with Gender and Name change for a local born SC",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-valid-change-in-person-details-file-for-processing-with-gender-and-name-change-for-a-local-born-sc;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 41000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 172,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "local_born_sc",
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "true",
                  "S3098804C",
                  "N",
                  "Chao Ah Beng",
                  "Tan Ah Beng",
                  "20100101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19534000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 175,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 176,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 177,
            "name": "the corresponding Person_Name record for person with nric S3098804C now reflects the new value Tan Ah Beng",
            "match": {
              "arguments": [
                {
                  "val": "Person_Name",
                  "offset": 18
                },
                {
                  "val": "S3098804C",
                  "offset": 58
                },
                {
                  "val": "Tan Ah Beng",
                  "offset": 95
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNricNowReflectsTheNewValue(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 178,
            "name": "the corresponding Person_Name record for person with nric S3098804C now reflects new valid_from value 20100101",
            "match": {
              "arguments": [
                {
                  "val": "Person_Name",
                  "offset": 18
                },
                {
                  "val": "S3098804C",
                  "offset": 58
                },
                {
                  "val": "20100101",
                  "offset": 102
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNowReflectsTheNew_ValidFrom_Value(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:11.532Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 476000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 182,
        "name": "Mha sends a valid Change in Person details file for processing with Gender and Name change for a local born SC",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-valid-change-in-person-details-file-for-processing-with-gender-and-name-change-for-a-local-born-sc;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 42000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 172,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "local_born_sc",
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "true",
                  "S5821001C",
                  "S",
                  "M",
                  "F",
                  "20100101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19728000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 175,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 176,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 177,
            "name": "the corresponding Person_Gender record for person with nric S5821001C now reflects the new value F",
            "match": {
              "arguments": [
                {
                  "val": "Person_Gender",
                  "offset": 18
                },
                {
                  "val": "S5821001C",
                  "offset": 60
                },
                {
                  "val": "F",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNricNowReflectsTheNewValue(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 178,
            "name": "the corresponding Person_Gender record for person with nric S5821001C now reflects new valid_from value 20100101",
            "match": {
              "arguments": [
                {
                  "val": "Person_Gender",
                  "offset": 18
                },
                {
                  "val": "S5821001C",
                  "offset": 60
                },
                {
                  "val": "20100101",
                  "offset": 104
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNowReflectsTheNew_ValidFrom_Value(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:31.827Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 461000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 350,
        "name": "Mha sends a person detail change file  with a Gender and Name change for a foreigner turned SC person",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-person-detail-change-file--with-a-gender-and-name-change-for-a-foreigner-turned-sc-person;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 39000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 341,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "local_born_sc",
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "false",
                  "S3899408E",
                  "N",
                  "Lawrence Siow",
                  "Laura Siow",
                  "20200101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19495000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 344,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 345,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 346,
            "name": "the corresponding Person_Name record for person with nric S3899408E now reflects the new value Laura Siow",
            "match": {
              "arguments": [
                {
                  "val": "Person_Name",
                  "offset": 18
                },
                {
                  "val": "S3899408E",
                  "offset": 58
                },
                {
                  "val": "Laura Siow",
                  "offset": 95
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNricNowReflectsTheNewValue(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 347,
            "name": "the corresponding Person_Name record for person with nric S3899408E now reflects new valid_from value 20200101",
            "match": {
              "arguments": [
                {
                  "val": "Person_Name",
                  "offset": 18
                },
                {
                  "val": "S3899408E",
                  "offset": 58
                },
                {
                  "val": "20200101",
                  "offset": 102
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNowReflectsTheNew_ValidFrom_Value(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:51.870Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 476000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 351,
        "name": "Mha sends a person detail change file  with a Gender and Name change for a foreigner turned SC person",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-person-detail-change-file--with-a-gender-and-name-change-for-a-foreigner-turned-sc-person;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 38000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 341,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "local_born_sc",
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "false",
                  "S3899408E",
                  "S",
                  "M",
                  "F",
                  "20200101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19575000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 344,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 345,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 346,
            "name": "the corresponding Person_Gender record for person with nric S3899408E now reflects the new value F",
            "match": {
              "arguments": [
                {
                  "val": "Person_Gender",
                  "offset": 18
                },
                {
                  "val": "S3899408E",
                  "offset": 60
                },
                {
                  "val": "F",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNricNowReflectsTheNewValue(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 347,
            "name": "the corresponding Person_Gender record for person with nric S3899408E now reflects new valid_from value 20200101",
            "match": {
              "arguments": [
                {
                  "val": "Person_Gender",
                  "offset": 18
                },
                {
                  "val": "S3899408E",
                  "offset": 60
                },
                {
                  "val": "20200101",
                  "offset": 104
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNowReflectsTheNew_ValidFrom_Value(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:07:24.086Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 653000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 56,
        "name": "Mha sends a file with repeated partial duplicated gender",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-repeated-partial-duplicated-gender",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 147000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 57,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S5881915H",
                  "S",
                  "M",
                  "F",
                  "valid"
                ]
              },
              {
                "cells": [
                  "valid",
                  "N",
                  "Chao Ah Beng",
                  "Tan Ah Beng",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S5881915H",
                  "S",
                  "U",
                  "F",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24198000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 62,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 63,
            "name": "the Mha Change of Personal Details batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 64,
            "name": "the error message contains Partially Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:07:49.129Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 525000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 205,
        "name": "Mha sends a valid Change in Person details file containing changes that are already in database (since 5 days ago)",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-valid-change-in-person-details-file-containing-changes-that-are-already-in-database-(since-5-days-ago);;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 86000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 188,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Name One",
                  "Name Two",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "M",
                  "F",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "B",
                  "20000101",
                  "19900101",
                  "20180101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25224000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 193,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 194,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 195,
            "name": "the mha person details file is of the following contents and with header date of 2 days ago:",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 81
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileContainsTheFollowingContents(int,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Name Two",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "F",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "B",
                  "19900101",
                  "20180101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23725000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 200,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 201,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 202,
            "name": "the error message contains New DOB already exists",
            "match": {
              "arguments": [
                {
                  "val": "New DOB already exists",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:08:38.735Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 515000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 206,
        "name": "Mha sends a valid Change in Person details file containing changes that are already in database (since 5 days ago)",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-valid-change-in-person-details-file-containing-changes-that-are-already-in-database-(since-5-days-ago);;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 74000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 188,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Name One",
                  "Name Two",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "M",
                  "F",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "B",
                  "20000101",
                  "19900101",
                  "20180101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25348000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 193,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 194,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 195,
            "name": "the mha person details file is of the following contents and with header date of 2 days ago:",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 81
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileContainsTheFollowingContents(int,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Name Two",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "F",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "B",
                  "19900101",
                  "20180101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23588000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 200,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 201,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 202,
            "name": "the error message contains New name already exists",
            "match": {
              "arguments": [
                {
                  "val": "New name already exists",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:09:28.301Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 505000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 207,
        "name": "Mha sends a valid Change in Person details file containing changes that are already in database (since 5 days ago)",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-valid-change-in-person-details-file-containing-changes-that-are-already-in-database-(since-5-days-ago);;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 73000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 188,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Name One",
                  "Name Two",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "M",
                  "F",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "B",
                  "20000101",
                  "19900101",
                  "20180101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25213000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 193,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 194,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 195,
            "name": "the mha person details file is of the following contents and with header date of 2 days ago:",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 81
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileContainsTheFollowingContents(int,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Name Two",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "S",
                  "F",
                  "20180101"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "B",
                  "19900101",
                  "20180101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23487000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 200,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 201,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 202,
            "name": "the error message contains New gender already exists",
            "match": {
              "arguments": [
                {
                  "val": "New gender already exists",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:18.962Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 592000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 104,
        "name": "Mha sends a file with an item change date after run date (test run date is today minus 5 days)",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-an-item-change-date-after-run-date-(test-run-date-is-today-minus-5-days)",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 99000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 105,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S5881915H",
                  "N",
                  "Jay Chou",
                  "Tan Ah Beng",
                  "99991231"
                ]
              },
              {
                "cells": [
                  "valid",
                  "B",
                  "20010924",
                  "20000924",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24290000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 109,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 110,
            "name": "the Mha Change of Personal Details batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 111,
            "name": "the error message contains Data item changed date cannot be after run date",
            "match": {
              "arguments": [
                {
                  "val": "Data item changed date cannot be after run date",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:43.993Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 515000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 276,
        "name": "Mha sends a file with a detail change for a person with erroneous DOB values",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-with-erroneous-dob-values;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 70000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 267,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "B",
                  "19900101",
                  "99991231",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "B",
                  "19910101",
                  "M",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18464000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 271,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 272,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 273,
            "name": "the error message contains New DOB is a future date and is invalid",
            "match": {
              "arguments": [
                {
                  "val": "New DOB is a future date and is invalid",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:03.092Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 550000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 277,
        "name": "Mha sends a file with a detail change for a person with erroneous DOB values",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-with-erroneous-dob-values;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 72000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 267,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "B",
                  "19900101",
                  "99991231",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "B",
                  "19910101",
                  "M",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18482000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 271,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 272,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 273,
            "name": "the error message contains Incorrect Date of Birth format",
            "match": {
              "arguments": [
                {
                  "val": "Incorrect Date of Birth format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:14.464Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 608000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 26,
        "name": "Mha sends a valid Change in Person details file for processing",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-valid-change-in-person-details-file-for-processing;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 52000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 18,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S9047674B",
                  "B",
                  "20010924",
                  "19940924",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20278000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 21,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 22,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 23,
            "name": "the corresponding Person_Detail record for person with nric S9047674B now reflects the new value 19940924",
            "match": {
              "arguments": [
                {
                  "val": "Person_Detail",
                  "offset": 18
                },
                {
                  "val": "S9047674B",
                  "offset": 60
                },
                {
                  "val": "19940924",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNricNowReflectsTheNewValue(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:35.459Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 514000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 27,
        "name": "Mha sends a valid Change in Person details file for processing",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-valid-change-in-person-details-file-for-processing;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 49000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 18,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "N",
                  "Chao Ah Beng",
                  "Tan Ah Beng",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20074000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 21,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 22,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 23,
            "name": "the corresponding Person_Name record for person with nric S3098804C now reflects the new value Tan Ah Beng",
            "match": {
              "arguments": [
                {
                  "val": "Person_Name",
                  "offset": 18
                },
                {
                  "val": "S3098804C",
                  "offset": 58
                },
                {
                  "val": "Tan Ah Beng",
                  "offset": 95
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNricNowReflectsTheNewValue(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:56.140Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 476000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 28,
        "name": "Mha sends a valid Change in Person details file for processing",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-valid-change-in-person-details-file-for-processing;;4",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 44000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 18,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S5821001C",
                  "S",
                  "M",
                  "F",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20168000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 21,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 22,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 23,
            "name": "the corresponding Person_Gender record for person with nric S5821001C now reflects the new value F",
            "match": {
              "arguments": [
                {
                  "val": "Person_Gender",
                  "offset": 18
                },
                {
                  "val": "S5821001C",
                  "offset": 60
                },
                {
                  "val": "F",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNricNowReflectsTheNewValue(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:16.862Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 494000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 155,
        "name": "Mha sends a file with a detail change for a person but the changed date is outdated (before the latest record's valid from)",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-but-the-changed-date-is-outdated-(before-the-latest-record-s-valid-from);;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 41000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 147,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "B",
                  "20000101",
                  "19000101",
                  "19100101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18487000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 150,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 151,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 152,
            "name": "the error message contains New record is attempting to change a past",
            "match": {
              "arguments": [
                {
                  "val": "New record is attempting to change a past",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:35.931Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 505000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 156,
        "name": "Mha sends a file with a detail change for a person but the changed date is outdated (before the latest record's valid from)",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-but-the-changed-date-is-outdated-(before-the-latest-record-s-valid-from);;3",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 43000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 147,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Samantha Nami",
                  "Differani Nami",
                  "19100101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18531000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 150,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 151,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 152,
            "name": "the error message contains New record is attempting to change a past",
            "match": {
              "arguments": [
                {
                  "val": "New record is attempting to change a past",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:55.046Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 529000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 157,
        "name": "Mha sends a file with a detail change for a person but the changed date is outdated (before the latest record's valid from)",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-but-the-changed-date-is-outdated-(before-the-latest-record-s-valid-from);;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 147,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "S",
                  "F",
                  "U",
                  "19100101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18590000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 150,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 151,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 152,
            "name": "the error message contains New record is attempting to change a past",
            "match": {
              "arguments": [
                {
                  "val": "New record is attempting to change a past",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:57:14.246Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 564000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 324,
        "name": "Mha sends a person detail change file with a DOB change for a foreigner turned SC person who attained citizenship on 19900102",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-person-detail-change-file-with-a-dob-change-for-a-foreigner-turned-sc-person-who-attained-citizenship-on-19900102;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 43000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 315,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "local_born_sc",
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "false",
                  "S3899408E",
                  "B",
                  "19900101",
                  "19890101",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20090000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 318,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 319,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 320,
            "name": "the corresponding Person_Detail record for person with nric S3899408E now reflects the new value 19890101",
            "match": {
              "arguments": [
                {
                  "val": "Person_Detail",
                  "offset": 18
                },
                {
                  "val": "S3899408E",
                  "offset": 60
                },
                {
                  "val": "19890101",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNricNowReflectsTheNewValue(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 321,
            "name": "the corresponding Person_Detail record for person with nric S3899408E now reflects new valid_from value 19900102",
            "match": {
              "arguments": [
                {
                  "val": "Person_Detail",
                  "offset": 18
                },
                {
                  "val": "S3899408E",
                  "offset": 60
                },
                {
                  "val": "19900102",
                  "offset": 104
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNowReflectsTheNew_ValidFrom_Value(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          },
          {
            "name": "@gryffindor-1304"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:07.103Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 590000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 32,
        "name": "Mha sends a Change in Person details file with an invalid data item change category",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-change-in-person-details-file-with-an-invalid-data-item-change-category",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 89000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 33,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "S",
                  "M",
                  "F",
                  "valid"
                ]
              },
              {
                "cells": [
                  "valid",
                  "N",
                  "Chao Ah Beng",
                  "Tan Ah Beng",
                  "valid"
                ]
              },
              {
                "cells": [
                  "valid",
                  "D",
                  "20010924",
                  "20000924",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25070000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 38,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 39,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 40,
            "name": "the error message contains Invalid Person Detail Data Item Changed type",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Person Detail Data Item Changed type",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:32.898Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 525000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 161,
        "name": "Mha sends a valid Change in Person details file for processing which will affect other tables",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-valid-change-in-person-details-file-for-processing-which-will-affect-other-tables",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 44000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 162,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "B",
                  "20000101",
                  "19900101",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19682000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 165,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 166,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 167,
            "name": "the corresponding records for person with nric S3899408E are now valid from the value 19900101",
            "match": {
              "arguments": [
                {
                  "val": "S3899408E",
                  "offset": 47
                },
                {
                  "val": "19900101",
                  "offset": 86
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingRecordsForPersonAreNowValidFromTheNewValue(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:53.216Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 517000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 337,
        "name": "Mha sends a person detail change file with a DOB change for a local born SC person",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-person-detail-change-file-with-a-dob-change-for-a-local-born-sc-person;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 39000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 328,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "local_born_sc",
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "true",
                  "S3899408E",
                  "B",
                  "19900101",
                  "19890101",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19708000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 331,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 332,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 333,
            "name": "the corresponding Person_Detail record for person with nric S3899408E now reflects the new value 19890101",
            "match": {
              "arguments": [
                {
                  "val": "Person_Detail",
                  "offset": 18
                },
                {
                  "val": "S3899408E",
                  "offset": 60
                },
                {
                  "val": "19890101",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNricNowReflectsTheNewValue(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 334,
            "name": "the corresponding Person_Detail record for person with nric S3899408E now reflects new valid_from value 19890101",
            "match": {
              "arguments": [
                {
                  "val": "Person_Detail",
                  "offset": 18
                },
                {
                  "val": "S3899408E",
                  "offset": 60
                },
                {
                  "val": "19890101",
                  "offset": 104
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNowReflectsTheNew_ValidFrom_Value(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          },
          {
            "name": "@gryffindor-1304"
          }
        ]
      }
    ],
    "name": "Data processing for Mha Change in Person Details",
    "description": "",
    "id": "data-processing-for-mha-change-in-person-details",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_change_person_details.feature",
    "tags": [
      {
        "name": "@datasource",
        "location": {
          "line": 1,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@development",
        "location": {
          "line": 2,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@change_person_details",
        "location": {
          "line": 3,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@mha",
        "location": {
          "line": 4,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@truncate",
        "location": {
          "line": 5,
          "column": 1
        },
        "type": "Tag"
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:51:06.987Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 523000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "MHA sends an empty Death file",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-an-empty-death-file",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 10,
            "name": "the mha death file is empty",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileIsEmpty()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1221000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 11,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 12,
            "name": "the Mha Death batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 13,
            "name": "the error message contains Must have at least 1 valid body record",
            "match": {
              "arguments": [
                {
                  "val": "Must have at least 1 valid body record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:08.778Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 471000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 97,
        "name": "MHA sends a Singapore citizen with death date that is the same as run date",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-a-singapore-citizen-with-death-date-that-is-the-same-as-run-date",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 72000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 98,
            "name": "the mha death file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "ValidSCDeathCasesOnCutoffDay",
                  "ValidSCDeathCases"
                ]
              },
              {
                "cells": [
                  "2",
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25311000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 101,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 102,
            "name": "the Mha Death batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 103,
            "name": "I verify that the people listed in the death file have the correct death dates",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.iVerifyThatThePeopleListedInTheDeathFileHaveTheCorrectDeathDates()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:14:42.170Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 514000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 88,
        "name": "MHA sends hybrid (1 member having both completely & partially) duplicated entries",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-hybrid-(1-member-having-both-completely-&-partially)-duplicated-entries",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 45000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 89,
            "name": "the mha death file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "HybridDuplicates",
                  "ValidSCDeathCases"
                ]
              },
              {
                "cells": [
                  "1",
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24102000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 92,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 93,
            "name": "the Mha Death batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 94,
            "name": "the error message contains Partially Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:13:56.669Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 472000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 52,
        "name": "MHA sends a future death date",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-a-future-death-date",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 28000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 53,
            "name": "the mha death file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "PplWithFutureDeathDates"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18255000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 56,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 57,
            "name": "the Mha Death batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 58,
            "name": "the error message contains Date of death must be equal/before Cut-off date",
            "match": {
              "arguments": [
                {
                  "val": "Date of death must be equal/before Cut-off date",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:11.631Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 483000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 61,
        "name": "MHA sends completely duplicated entries",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-completely-duplicated-entries",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 42000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 62,
            "name": "the mha death file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "DuplicatedEntries"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25237000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 65,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 66,
            "name": "the Mha Death batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 67,
            "name": "the error message contains Completely Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Completely Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:37.434Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 498000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 154,
        "name": "MHA sends the death info using expired fin information",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-the-death-info-using-expired-fin-information",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 29000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 155,
            "name": "MHA sends a death broadcast file using john's expired fin information",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 39
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.mhaSendsADeathBroardcastFileUsingExpiredFinInformation(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19805000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 156,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 157,
            "name": "the Mha Death batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 158,
            "name": "I verify that john has the correct death date",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.iVerifyThatPersonHasACorrectDeathDate(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:02:09.795Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 501000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 70,
        "name": "MHA sends partially duplicated entries",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-partially-duplicated-entries",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 71,
            "name": "the mha death file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "PartialDuplicates"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12749000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 74,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 75,
            "name": "the Mha Death batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 76,
            "name": "the error message contains Partially Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:12.000Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 464000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 34,
        "name": "MHA sends a Death file with a FIN for processing",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-a-death-file-with-a-fin-for-processing",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 39000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 35,
            "name": "the mha death file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "ValidFRDeathCases"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19712000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 38,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 39,
            "name": "the Mha Death batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 40,
            "name": "I verify that the people listed in the death file have the correct death dates",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.iVerifyThatThePeopleListedInTheDeathFileHaveTheCorrectDeathDates()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:32.266Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 474000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 124,
        "name": "MHA sends a person who has the same existing death date",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-a-person-who-has-the-same-existing-death-date",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 30000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 125,
            "name": "the mha death file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "SameExistingDeathDate"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19583000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 128,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "the Mha Death batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 130,
            "name": "the error message contains Citizen has an existing Death Date",
            "match": {
              "arguments": [
                {
                  "val": "Citizen has an existing Death Date",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:10:17.619Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 510000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 43,
        "name": "MHA sends a death date for a person who already is dead",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-a-death-date-for-a-person-who-already-is-dead",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 42000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 44,
            "name": "the mha death file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "PplWhoAreAlreadyDead"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19953000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 47,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 48,
            "name": "the Mha Death batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 49,
            "name": "the error message contains Citizen has an existing Death Date",
            "match": {
              "arguments": [
                {
                  "val": "Citizen has an existing Death Date",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:10:38.165Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 522000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 133,
        "name": "John died on the day he was born",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;john-died-on-the-day-he-was-born",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 30000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "MHA sends a death broadcast file stating that john died on the day of his birth",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 46
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.mhaSendsADeathBroadcastFileStatingThatPersonDiedOnTheDayOfHisOrHerBirth(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19876000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 135,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 136,
            "name": "the Mha Death batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 137,
            "name": "I verify that john has the correct death date",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.iVerifyThatPersonHasACorrectDeathDate(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:22.248Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 511000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 79,
        "name": "MHA sends partially duplicated entries and one valid entry",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-partially-duplicated-entries-and-one-valid-entry",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "the mha death file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "PartialDuplicates",
                  "ValidSCDeathCases"
                ]
              },
              {
                "cells": [
                  "1",
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24092000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 84,
            "name": "the Mha Death batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 85,
            "name": "the error message contains Partially Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:57:34.997Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 482000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 16,
        "name": "MHA sends a Death file for processing",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-a-death-file-for-processing",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 64000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 17,
            "name": "the mha death file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "ValidSCDeathCases",
                  "ValidPPDeathCases"
                ]
              },
              {
                "cells": [
                  "1",
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25403000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 20,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 21,
            "name": "the Mha Death batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 22,
            "name": "I verify that the people listed in the death file have the correct death dates",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.iVerifyThatThePeopleListedInTheDeathFileHaveTheCorrectDeathDates()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:58:00.998Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 485000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 106,
        "name": "MHA sends a person with FIN with death date that is the same as run date",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-a-person-with-fin-with-death-date-that-is-the-same-as-run-date",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 85000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 107,
            "name": "the mha death file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "ValidFRDeathCasesOnCutoffDay",
                  "ValidSCDeathCases",
                  "ValidPPDeathCases"
                ]
              },
              {
                "cells": [
                  "2",
                  "1",
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25570000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 110,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 111,
            "name": "the Mha Death batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 112,
            "name": "I verify that the people listed in the death file have the correct death dates",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.iVerifyThatThePeopleListedInTheDeathFileHaveTheCorrectDeathDates()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:13.533Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 483000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 25,
        "name": "MHA sends a Death file with some dude whose birth date is more recent than his corresponding death date",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-a-death-file-with-some-dude-whose-birth-date-is-more-recent-than-his-corresponding-death-date",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 61000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 26,
            "name": "the mha death file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "ValidSCDeathCases",
                  "DeathDateEarlierThanBirthDate"
                ]
              },
              {
                "cells": [
                  "1",
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23780000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 29,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 30,
            "name": "the Mha Death batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 31,
            "name": "the error message contains Date of death is earlier than Date of birth",
            "match": {
              "arguments": [
                {
                  "val": "Date of death is earlier than Date of birth",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:37.897Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 521000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 115,
        "name": "MHA sends a person who does not exist in CDS",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-a-person-who-does-not-exist-in-cds",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 116,
            "name": "the mha death file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NonExistentPpl"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18243000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 119,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 120,
            "name": "the Mha Death batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 121,
            "name": "the error message contains NRIC not found in prepared database",
            "match": {
              "arguments": [
                {
                  "val": "NRIC not found in prepared database",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      }
    ],
    "name": "Data processing for MHA death broadcast",
    "description": "",
    "id": "data-processing-for-mha-death-broadcast",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_death.feature",
    "tags": [
      {
        "name": "@datasource",
        "location": {
          "line": 1,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@development",
        "location": {
          "line": 2,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@death",
        "location": {
          "line": 3,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@mha",
        "location": {
          "line": 4,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@truncate",
        "location": {
          "line": 5,
          "column": 1
        },
        "type": "Tag"
      }
    ]
  },
  {
    "line": 5,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:51:34.687Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 490000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 8,
        "name": "Dual Citizen batch job processing runs successfully",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;dual-citizen-batch-job-processing-runs-successfully",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 74000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 9,
            "name": "the mha dual citizen file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.thatTheMhaDualCitizenFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NewDualCitizensInFile",
                  "ExistingDualCitizensInFile",
                  "ExpiredDualCitizens"
                ]
              },
              {
                "cells": [
                  "1",
                  "1",
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25246000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 12,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 13,
            "name": "the Mha Dual Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 14,
            "name": "I verify that there are new dual citizen in datasource db",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatThereAreNewDualCitizensInDatasourceDb()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 15,
            "name": "I verify that no changes were made to existing dual citizens",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatNoChangesWereMadeToExistingDualCitizens()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 16,
            "name": "I verify that the dual citizens who are not in the file will be Singaporeans",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatTheDualCitizensWhoAreNotInTheFileWillBeSingaporeans()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:00.599Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 515000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 82,
        "name": "MHA sends file with S888 nric",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;mha-sends-file-with-s888-nric",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "the mha dual citizen file has S888 nric",
            "match": {
              "arguments": [
                {
                  "val": "S888",
                  "offset": 30
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileHasAnNric(cds_automation.enums.datasource.InvalidNricEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12197000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 84,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 85,
            "name": "the Mha Dual Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 86,
            "name": "I verify that there is an error message for invalid nric",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatThereIsAnErrorMessageForInvalidNric()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:13.359Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 417000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 166,
        "name": "Person who previously ceased citizenship becomes a dual citizen",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;person-who-previously-ceased-citizenship-becomes-a-dual-citizen",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 32000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 44000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 167,
            "name": "jane who is 12 years old had her citizenship renounced 365 days ago",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 0
                },
                {
                  "val": "12",
                  "offset": 12
                },
                {
                  "val": "365",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.personHadHisHerCitizenshipRenouncedDaysAgo(java.lang.String,int,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 168,
            "name": "jane became a singapore citizen 10 days ago",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 0
                },
                {
                  "val": "10",
                  "offset": 32
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.personBecameASingaporeCitizenDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 169,
            "name": "the mha dual citizen file sends information that jane is a dual citizen 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 49
                },
                {
                  "val": "5",
                  "offset": 72
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileSendsInformationThatPersonIsADualCitizenDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19982000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 170,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 171,
            "name": "the Mha Dual Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 172,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 173,
            "name": "jane is a dual citizen with a citizenship attainment date dating 10 days ago",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 0
                },
                {
                  "val": "10",
                  "offset": 65
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.personIsADualCitizen(java.lang.String,java.lang.Integer)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:15:06.881Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 525000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 75,
        "name": "MHA sends file with S555 nric",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;mha-sends-file-with-s555-nric",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 76,
            "name": "the mha dual citizen file has S555 nric",
            "match": {
              "arguments": [
                {
                  "val": "S555",
                  "offset": 30
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileHasAnNric(cds_automation.enums.datasource.InvalidNricEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12221000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 77,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 78,
            "name": "the Mha Dual Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 79,
            "name": "I verify that there is an error message for invalid nric",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatThereIsAnErrorMessageForInvalidNric()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:15:19.696Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 401000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 157,
        "name": "Person has a ceased citizenship date that is after the dual citizen date of run",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;person-has-a-ceased-citizenship-date-that-is-after-the-dual-citizen-date-of-run",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 46000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 158,
            "name": "jane who is 45 years old had her citizenship renounced 4 days ago",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 0
                },
                {
                  "val": "45",
                  "offset": 12
                },
                {
                  "val": "4",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.personHadHisHerCitizenshipRenouncedDaysAgo(java.lang.String,int,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 159,
            "name": "the mha dual citizen file sends information that jane is a dual citizen 3 days ago",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 49
                },
                {
                  "val": "3",
                  "offset": 72
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileSendsInformationThatPersonIsADualCitizenDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18372000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 160,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 161,
            "name": "the Mha Dual Citizen batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 162,
            "name": "jane remains a non singaporean",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.janeRemainsANonSingaporean(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 163,
            "name": "the error message contains Person has already ceased Singapore citizenship",
            "match": {
              "arguments": [
                {
                  "val": "Person has already ceased Singapore citizenship",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:14:15.466Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 484000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 47,
        "name": "MHA sends file with empty nric",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;mha-sends-file-with-empty-nric",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 48,
            "name": "the mha dual citizen file has EMPTY nric",
            "match": {
              "arguments": [
                {
                  "val": "EMPTY",
                  "offset": 30
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileHasAnNric(cds_automation.enums.datasource.InvalidNricEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1154000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 49,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 50,
            "name": "the Mha Dual Citizen batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 51,
            "name": "I verify that the is an error message for wrong body length",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatTheIsAnErrorMessageForWrongBodyLength()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:14:17.147Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 378000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 124,
        "name": "MHA sends an empty Dual Citizen file",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;mha-sends-an-empty-dual-citizen-file",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 125,
            "name": "the mha dual citizen file is empty",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileIsEmpty()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1187000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 126,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 127,
            "name": "the Mha Dual Citizen batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 128,
            "name": "the error message contains Must have at least 1 valid body record",
            "match": {
              "arguments": [
                {
                  "val": "Must have at least 1 valid body record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:57.801Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 494000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 54,
        "name": "MHA sends file with empty whitespace nric",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;mha-sends-file-with-empty-whitespace-nric",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 55,
            "name": "the mha dual citizen file has EMPTY_SPACE nric",
            "match": {
              "arguments": [
                {
                  "val": "EMPTY_SPACE",
                  "offset": 30
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileHasAnNric(cds_automation.enums.datasource.InvalidNricEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12141000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 56,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 57,
            "name": "the Mha Dual Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 58,
            "name": "I verify that the is an error message for null or blank nric",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatTheIsAnErrorMessageForNullOrBlankNric()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:57:10.486Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 387000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 131,
        "name": "An person who was previously a dual citizen is now a dual citizen again",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;an-person-who-was-previously-a-dual-citizen-is-now-a-dual-citizen-again",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 46000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "john was a dual citizen 100 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "100",
                  "offset": 24
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.personWasADualCitizenDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 133,
            "name": "john became a dual citizen 99 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "99",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.personBecameADualCitizenDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20058000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 135,
            "name": "the Mha Dual Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 136,
            "name": "I verify that john is a dual citizen 99 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 14
                },
                {
                  "val": "99",
                  "offset": 37
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatPersonIsADualCitizenDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:02:23.098Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 450000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 61,
        "name": "MHA sends file with invalid nric",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;mha-sends-file-with-invalid-nric",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 62,
            "name": "the mha dual citizen file has INVALID nric",
            "match": {
              "arguments": [
                {
                  "val": "INVALID",
                  "offset": 30
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileHasAnNric(cds_automation.enums.datasource.InvalidNricEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12216000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 63,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 64,
            "name": "the Mha Dual Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 65,
            "name": "I verify that there is an error message for invalid nric",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatThereIsAnErrorMessageForInvalidNric()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:02:35.826Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 420000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 139,
        "name": "Test scenario",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;test-scenario",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 57000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 140,
            "name": "the mha dual citizen file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.thatTheMhaDualCitizenFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NewDualCitizensInFile",
                  "InvalidNrics",
                  "ExistingDualCitizensInFile"
                ]
              },
              {
                "cells": [
                  "1",
                  "1",
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25283000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 143,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 144,
            "name": "the Mha Dual Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 145,
            "name": "I verify that there is an error message for invalid nric",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatThereIsAnErrorMessageForInvalidNric()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:52.393Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 487000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 33,
        "name": "MHA sends file with invalid format for Date of Run",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;mha-sends-file-with-invalid-format-for-date-of-run",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 34,
            "name": "the mha dual citizen file contains invalid date of run and date of run is INVALID_FORMAT",
            "match": {
              "arguments": [
                {
                  "val": "INVALID_FORMAT",
                  "offset": 74
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileContainsInvalidDateOfRunAndDateOfRunIs(cds_automation.enums.datasource.InvalidDateOfRunEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12035000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 35,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 36,
            "name": "the Mha Dual Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 37,
            "name": "I verify that there is an error message for wrong date format",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatThereIsAnErrorMessageForWrongDateFormat()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:04.970Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 373000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 108,
        "name": "Person nric is a dual citizen and remains as a dual citizen",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;person-nric-is-a-dual-citizen-and-remains-as-a-dual-citizen",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 37000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 109,
            "name": "john who is 13 years old converted to a dual citizen 7 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "13",
                  "offset": 12
                },
                {
                  "val": "7",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.personConvertedToADualCitizenDaysAgo(java.lang.String,int,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 110,
            "name": "MHA dual citizen file contains john nric",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 31
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.mhaDualCitizenFileContainsNric(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19546000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 111,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 112,
            "name": "the Mha Dual Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 113,
            "name": "I verify that john nationality was not updated in datasource db",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatNationalityIsNotUpdateInDatasourceDb(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:10:58.637Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 484000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 40,
        "name": "MHA sends file with future date for Date of Run",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;mha-sends-file-with-future-date-for-date-of-run",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 41,
            "name": "the mha dual citizen file contains invalid date of run and date of run is FUTURE_DATE",
            "match": {
              "arguments": [
                {
                  "val": "FUTURE_DATE",
                  "offset": 74
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileContainsInvalidDateOfRunAndDateOfRunIs(cds_automation.enums.datasource.InvalidDateOfRunEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12590000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 42,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 43,
            "name": "the Mha Dual Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 44,
            "name": "I verify that there is an error message for future date",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatThereIsAnErrorMessageForFutureDate()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:11:11.756Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 412000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 116,
        "name": "Person nric is a dual citizen and turns sg citizen",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;person-nric-is-a-dual-citizen-and-turns-sg-citizen",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 117,
            "name": "john who is 30 years old converted to a dual citizen 100 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "30",
                  "offset": 12
                },
                {
                  "val": "100",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.personConvertedToADualCitizenDaysAgo(java.lang.String,int,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 118,
            "name": "MHA dual citizen file does not contains person nric",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.mhaDualCitizenFileDoesNotContainsNric()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20000000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 119,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 120,
            "name": "the Mha Dual Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 121,
            "name": "I verify that john nationality was updated in datasource db",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatJohnNationalityWasUpdatedInDatasourceDb(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:46.936Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 528000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 68,
        "name": "MHA sends file with shorter nric",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;mha-sends-file-with-shorter-nric",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 69,
            "name": "the mha dual citizen file has SHORT nric",
            "match": {
              "arguments": [
                {
                  "val": "SHORT",
                  "offset": 30
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileHasAnNric(cds_automation.enums.datasource.InvalidNricEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1214000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 70,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 71,
            "name": "the Mha Dual Citizen batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 72,
            "name": "I verify that the is an error message for wrong body length",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatTheIsAnErrorMessageForWrongBodyLength()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:48.730Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 387000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 148,
        "name": "MHA sends a file with a cut-off date after that file recevied date",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;mha-sends-a-file-with-a-cut-off-date-after-that-file-recevied-date",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 47000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 149,
            "name": "the mha dual citizen file has a run date in the future",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileHasACutOffDateInTheFuture(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NewDualCitizensInFile"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12659000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 152,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "the Mha Dual Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 154,
            "name": "the error message contains Extraction date cannot be after File Received date",
            "match": {
              "arguments": [
                {
                  "val": "Extraction date cannot be after File Received date",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:58:27.194Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 494000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 19,
        "name": "MHA sends file with empty Date of Run",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;mha-sends-file-with-empty-date-of-run",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 20,
            "name": "the mha dual citizen file contains invalid date of run and date of run is EMPTY",
            "match": {
              "arguments": [
                {
                  "val": "EMPTY",
                  "offset": 74
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileContainsInvalidDateOfRunAndDateOfRunIs(cds_automation.enums.datasource.InvalidDateOfRunEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1202000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 21,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 22,
            "name": "the Mha Dual Citizen batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 23,
            "name": "I verify that there is an error message for wrong header length",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatThereIsAnErrorMessageForWrongHeaderLength()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:58:28.943Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 410000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 89,
        "name": "MHA sends file with duplicate nric",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;mha-sends-file-with-duplicate-nric",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 30000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 90,
            "name": "the mha dual citizen file has duplicate nric record",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileHasDuplicateNricRecord(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "DuplicatedNrics"
                ]
              },
              {
                "cells": [
                  "2"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25480000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 93,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 94,
            "name": "the Mha Dual Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 95,
            "name": "I verify that there is a warning message for duplicate nric",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatThereIsAWarningMessageForDuplicateNric()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:58:54.901Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 504000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 176,
        "name": "Person loses dual citizenship and becomes a singaporean",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;person-loses-dual-citizenship-and-becomes-a-singaporean",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 42000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 177,
            "name": "jane who is 12 years old had her citizenship renounced 365 days ago",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 0
                },
                {
                  "val": "12",
                  "offset": 12
                },
                {
                  "val": "365",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.personHadHisHerCitizenshipRenouncedDaysAgo(java.lang.String,int,int)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 178,
            "name": "jane became a singapore citizen 10 days ago",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 0
                },
                {
                  "val": "10",
                  "offset": 32
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.personBecameASingaporeCitizenDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 179,
            "name": "mha states that jane is a dual citizen since 8 days ago",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 16
                },
                {
                  "val": "8",
                  "offset": 45
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.mhaStatesThatPersonIsADualCitizenSinceDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 180,
            "name": "mha sends a dual citizen file without jane in it 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 38
                },
                {
                  "val": "5",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.mhaSendsADualCitizenFileWithoutPersonInItDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20199000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 181,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 182,
            "name": "the Mha Dual Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 183,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 184,
            "name": "jane is a singaporean from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 0
                },
                {
                  "val": "5",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.personIsASingaporeanFromDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:56.702Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 410000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 26,
        "name": "MHA sends file with empty spaces of Date of Run",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;mha-sends-file-with-empty-spaces-of-date-of-run",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 27,
            "name": "the mha dual citizen file contains invalid date of run and date of run is EMPTY_SPACE",
            "match": {
              "arguments": [
                {
                  "val": "EMPTY_SPACE",
                  "offset": 74
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileContainsInvalidDateOfRunAndDateOfRunIs(cds_automation.enums.datasource.InvalidDateOfRunEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12364000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 28,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 29,
            "name": "the Mha Dual Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 30,
            "name": "I verify that there is an error message for wrong date format",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatThereIsAnErrorMessageForWrongDateFormat()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:09.535Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 392000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 98,
        "name": "Person nric is not found in CDS",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;person-nric-is-not-found-in-cds",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 42000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 99,
            "name": "the mha dual citizen file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.thatTheMhaDualCitizenFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NonExistentNrics",
                  "NewDualCitizensInFile"
                ]
              },
              {
                "cells": [
                  "1",
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24969000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 102,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 103,
            "name": "the Mha Dual Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 104,
            "name": "no update is done for non-existent nrics",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.noUpdateIsDoneForNonExistentNrics()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 105,
            "name": "I verify that there are new dual citizen in datasource db",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatThereAreNewDualCitizensInDatasourceDb()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      }
    ],
    "name": "Data processing for MHA dual citizenship",
    "description": "",
    "id": "data-processing-for-mha-dual-citizenship",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_dual_citizen.feature",
    "tags": [
      {
        "name": "@development",
        "location": {
          "line": 1,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@dual_citizen",
        "location": {
          "line": 2,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@mha",
        "location": {
          "line": 3,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@truncate",
        "location": {
          "line": 4,
          "column": 1
        },
        "type": "Tag"
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:52:33.899Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 523000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "Datasource service processes a MHA new citizen file with complete duplicate records",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-complete-duplicate-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 10,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S3450033I",
                  "F1701510U",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              },
              {
                "cells": [
                  "S3450033I",
                  "F1701510U",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25404000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 14,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 15,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 16,
            "name": "I verify that person with S3450033I is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S3450033I",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 17,
            "name": "the error message contains Completely Duplicate Record found.",
            "match": {
              "arguments": [
                {
                  "val": "Completely Duplicate Record found.",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:59.925Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 666000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 119,
        "name": "Datasource service processes a MHA new citizen file with with NRIC S888",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-with-nric-s888",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 120,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S8881634E",
                  "",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12358000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 123,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 124,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 125,
            "name": "the error message contains Must be valid NRIC",
            "match": {
              "arguments": [
                {
                  "val": "Must be valid NRIC",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:12.995Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 422000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 209,
        "name": "Datasource service processes a MHA new citizen file with 2 or more records with the same Linked FIN but different details",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-2-or-more-records-with-the-same-linked-fin-but-different-details",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 210,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "F",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12723000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 214,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 215,
            "name": "the Mha New Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 216,
            "name": "the error message contains Partially Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:26.184Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 549000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 306,
        "name": "Datasource service processes a MHA new citizen file with a mixture of MHA and NCA format type records",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-a-mixture-of-mha-and-nca-format-type-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 307,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F8100327X",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              },
              {
                "cells": [
                  "S1501501B",
                  "",
                  "Person B",
                  "18881231",
                  "F",
                  "Z",
                  "A",
                  "999       High Rise",
                  "",
                  "S",
                  "001       Low Rise",
                  "",
                  "20200301",
                  ""
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25290000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 311,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 312,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 313,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 314,
            "name": "I verify that person with S1501501B is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501501B",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 315,
            "name": "I verify that person with S1501634E has existing property type format MHA persisted in PropertyDetail",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "MHA",
                  "offset": 70
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.iVerifyThatPersonWithFormatTypePersistedInPropertyDetail(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 316,
            "name": "I verify that person with S1501501B has existing property type format NCA persisted in PropertyDetail",
            "match": {
              "arguments": [
                {
                  "val": "S1501501B",
                  "offset": 26
                },
                {
                  "val": "NCA",
                  "offset": 70
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.iVerifyThatPersonWithFormatTypePersistedInPropertyDetail(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:52.137Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 728000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 466,
        "name": "Datasource service processes a MHA new citizen file having previous address with valid postal codes",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-having-previous-address-with-valid-postal-codes",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 467,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "OLD_ADDR_POSTAL_CODE",
                  "OLD_ADDR_NEW_POSTAL_CODE",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "1234",
                  "123456",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19988000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 470,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 471,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 472,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:12.929Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 581000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 486,
        "name": "Datasource service processes a MHA new citizen file record with previous addr, current address = blank and date of address change = blank",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-record-with-previous-addr--current-address-=-blank-and-date-of-address-change-=-blank",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 487,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "",
                  "",
                  "",
                  "D",
                  "",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19706000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 490,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 491,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 492,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:33.286Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 553000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 670,
        "name": "Datasource service processes a MHA new citizen file with an existing born Singaporean record in the database",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-an-existing-born-singaporean-record-in-the-database",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 671,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 674,
            "name": "the person already exists in the database as a Singaporean",
            "match": {
              "arguments": [
                {
                  "val": "Singaporean",
                  "offset": 47
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonAlreadyExistsInTheDatabaseAsA(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19757000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 675,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 676,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 677,
            "name": "the error message contains NRIC of this record and Nationality is also found for this NRIC record",
            "match": {
              "arguments": [
                {
                  "val": "NRIC of this record and Nationality is also found for this NRIC record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "81"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:15:38.567Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 525000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 110,
        "name": "Datasource service processes a MHA new citizen file with only 8 alpha-numeric nric",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-only-8-alpha-numeric-nric",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 111,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634",
                  "",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12199000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 114,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 115,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 116,
            "name": "the error message contains NRIC Size must be exactly 9",
            "match": {
              "arguments": [
                {
                  "val": "NRIC Size must be exactly 9",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:15:51.349Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 450000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 200,
        "name": "Datasource service processes a MHA new citizen file with invalid fin start with H",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-invalid-fin-start-with-h",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 201,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "H0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12340000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 204,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 205,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 206,
            "name": "the error message contains Must be valid FIN",
            "match": {
              "arguments": [
                {
                  "val": "Must be valid FIN",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:16:04.194Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 435000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 294,
        "name": "Datasource service processes a MHA new citizen file with duplicated property records",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-duplicated-property-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 295,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S3450033I",
                  "",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              },
              {
                "cells": [
                  "S2841458G",
                  "",
                  "Person B",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25272000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 299,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 300,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 301,
            "name": "I verify that person with S3450033I is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S3450033I",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 302,
            "name": "I verify that person with S2841458G is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S2841458G",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 303,
            "name": "there are 2 Property Details",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 10
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thereArePropertyDetails(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:16:30.013Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 592000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 454,
        "name": "Datasource service processes a MHA new citizen file with valid invalid address type",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-valid-invalid-address-type",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 455,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "A",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12179000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 458,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 459,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 460,
            "name": "I verify that person with S1501634E is not persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is not",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 461,
            "name": "the error message contains Invalid invalid-address tag",
            "match": {
              "arguments": [
                {
                  "val": "Invalid invalid-address tag",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:16:42.834Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 445000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 661,
        "name": "Datasource service processes a MHA new citizen file with no existing records in the database (only new address provided)",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-no-existing-records-in-the-database-(only-new-address-provided)",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 662,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "",
                  "",
                  "",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12211000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 665,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 666,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 667,
            "name": "the error message contains Invalid nca address",
            "match": {
              "arguments": [
                {
                  "val": "Invalid nca address",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "80"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:14:18.749Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 353000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 69,
        "name": "Datasource service processes a MHA new citizen file with correct date format and value",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-correct-date-format-and-value",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 70,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A!",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19821000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 73,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 74,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 35000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 75,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:14:39.006Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 537000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 164,
        "name": "Datasource service processes a MHA new citizen file with DOB 20010229",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-dob-20010229",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 165,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "20010229",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12077000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 168,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 169,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 170,
            "name": "the error message contains Date of Birth must be in valid format",
            "match": {
              "arguments": [
                {
                  "val": "Date of Birth must be in valid format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:14:51.659Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 396000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 258,
        "name": "Datasource service processes a MHA new citizen file with old address as NCA but invalid address type A",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-old-address-as-nca-but-invalid-address-type-a",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 259,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001",
                  "Person A",
                  "18000000",
                  "M",
                  "",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12131000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 262,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 263,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 264,
            "name": "the error message contains Invalid nca address type",
            "match": {
              "arguments": [
                {
                  "val": "Invalid nca address type",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:15:04.224Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 386000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 383,
        "name": "Datasource service processes a MHA new citizen file with previous address of valid mha address type",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-previous-address-of-valid-mha-address-type",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 384,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S3185487C",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "B",
                  "117       Vista Rise",
                  "Z",
                  "B",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S8723883J",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "X",
                  "117       Vista Rise",
                  "Z",
                  "X",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S2190962I",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "C",
                  "C",
                  "117       Vista Rise",
                  "C",
                  "C",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S3205362I",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "D",
                  "117       Vista Rise",
                  "Z",
                  "D",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S6843886A",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "E",
                  "117       Vista Rise",
                  "Z",
                  "E",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S2915858D",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "F",
                  "117       Vista Rise",
                  "Z",
                  "F",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S4897112A",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "Q",
                  "117       Vista Rise",
                  "Z",
                  "Q",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S1765629E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "I",
                  "117       Vista Rise",
                  "Z",
                  "I",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S0263529A",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "",
                  "117       Vista Rise",
                  "Z",
                  "",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25133000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 396,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 397,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 31000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 398,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 399,
            "name": "I verify that person with S3185487C is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S3185487C",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 400,
            "name": "I verify that person with S8723883J is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S8723883J",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 401,
            "name": "I verify that person with S2190962I is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S2190962I",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 402,
            "name": "I verify that person with S3205362I is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S3205362I",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 403,
            "name": "I verify that person with S6843886A is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S6843886A",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 404,
            "name": "I verify that person with S2915858D is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S2915858D",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 405,
            "name": "I verify that person with S4897112A is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S4897112A",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 406,
            "name": "I verify that person with S1765629E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1765629E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 407,
            "name": "I verify that person with S0263529A is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S0263529A",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:15:29.974Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 551000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 540,
        "name": "Datasource service processes a MHA new citizen file record with valid Citizenship Attainment Date",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-record-with-valid-citizenship-attainment-date",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 541,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S3450033I",
                  "F1701510U",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  ""
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24941000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 545,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 546,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 39000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 547,
            "name": "I verify that person with S3450033I is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S3450033I",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 548,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:15:55.552Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 565000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 617,
        "name": "Datasource service processes a MHA new citizen file with old address existing in the database",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-old-address-existing-in-the-database;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 607,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "AFTER 31ST PRECEDING YEAR",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 610,
            "name": "the person's old address already exist(s) in the database",
            "match": {
              "arguments": [
                {
                  "val": "old address",
                  "offset": 13
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonSOldAddressAlreadyExistsInTheDatabase(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19755000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 611,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 612,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 613,
            "name": "the relevant records for the person with no existing records are persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "no existing records",
                  "offset": 41
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.theRelevantRecordsForThePersonWithArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 614,
            "name": "only the new property record(s) is/are added to Datasource",
            "match": {
              "arguments": [
                {
                  "val": "only the new",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.propertiesArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "76a"
          },
          {
            "name": "and"
          },
          {
            "name": "76b"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:16:16.012Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 572000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 618,
        "name": "Datasource service processes a MHA new citizen file with old address existing in the database",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-old-address-existing-in-the-database;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 607,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "19000303",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 610,
            "name": "the person's old address already exist(s) in the database",
            "match": {
              "arguments": [
                {
                  "val": "old address",
                  "offset": 13
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonSOldAddressAlreadyExistsInTheDatabase(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19693000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 611,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 612,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 28000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 613,
            "name": "the relevant records for the person with no existing records are persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "no existing records",
                  "offset": 41
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.theRelevantRecordsForThePersonWithArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 614,
            "name": "only the new property record(s) is/are added to Datasource",
            "match": {
              "arguments": [
                {
                  "val": "only the new",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.propertiesArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "76a"
          },
          {
            "name": "and"
          },
          {
            "name": "76b"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:57:31.020Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 527000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 87,
        "name": "New Citizen file contains invalid date of run",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;new-citizen-file-contains-invalid-date-of-run;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 79,
            "name": "a MHA_NEW_CITIZEN file contains a  invalid date of run",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileContainsAnInvalidDateOfRun(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F8100327X",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1246000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "the Mha New Citizen batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 84,
            "name": "the error message contains Wrong header length",
            "match": {
              "arguments": [
                {
                  "val": "Wrong header length",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:57:32.857Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 375000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 88,
        "name": "New Citizen file contains invalid date of run",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;new-citizen-file-contains-invalid-date-of-run;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 79,
            "name": "a MHA_NEW_CITIZEN file contains a 99999 invalid date of run",
            "match": {
              "arguments": [
                {
                  "val": "99999",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileContainsAnInvalidDateOfRun(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F8100327X",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1143000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "the Mha New Citizen batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 84,
            "name": "the error message contains Wrong header length",
            "match": {
              "arguments": [
                {
                  "val": "Wrong header length",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:57:34.431Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 369000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 89,
        "name": "New Citizen file contains invalid date of run",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;new-citizen-file-contains-invalid-date-of-run;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 79,
            "name": "a MHA_NEW_CITIZEN file contains a FutureDate invalid date of run",
            "match": {
              "arguments": [
                {
                  "val": "FutureDate",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileContainsAnInvalidDateOfRun(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F8100327X",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12613000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 82,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "the Mha New Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 84,
            "name": "the error message contains Extraction date cannot be after File Received date",
            "match": {
              "arguments": [
                {
                  "val": "Extraction date cannot be after File Received date",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:57:47.449Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 445000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 173,
        "name": "Datasource service processes a MHA new citizen file with DOB YYYY = 1799",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-dob-yyyy-=-1799",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 174,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "17991231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12151000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 177,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 178,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 179,
            "name": "the error message contains Year value cannot be less than 1800",
            "match": {
              "arguments": [
                {
                  "val": "Year value cannot be less than 1800",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:58:00.084Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 426000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 267,
        "name": "Datasource service processes a MHA new citizen file with old address as NCA address but invalid address type A",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-old-address-as-nca-address-but-invalid-address-type-a",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 268,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001",
                  "Person A",
                  "18000000",
                  "M",
                  "C",
                  "H",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12270000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 271,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 272,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 273,
            "name": "the error message contains Invalid mha address type",
            "match": {
              "arguments": [
                {
                  "val": "Invalid mha address type",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:58:12.819Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 408000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 410,
        "name": "Datasource service processes a MHA new citizen file with previous address of valid mha address type",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-previous-address-of-valid-mha-address-type",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 411,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "H",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12215000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 414,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 415,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 416,
            "name": "I verify that person with S1501634E is not persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is not",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 417,
            "name": "the error message contains Invalid mha address type",
            "match": {
              "arguments": [
                {
                  "val": "Invalid mha address type",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:58:25.485Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 400000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 552,
        "name": "Datasource service processes a MHA new citizen file record with invalid Citizenship Attainment Date",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-record-with-invalid-citizenship-attainment-date",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 553,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S3450033I",
                  "F1701510U",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "20203232"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12155000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 556,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 557,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 558,
            "name": "I verify that person with S3450033I is not persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S3450033I",
                  "offset": 26
                },
                {
                  "val": "is not",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 559,
            "name": "the error message contains Must be in yyyyMMdd date format",
            "match": {
              "arguments": [
                {
                  "val": "Must be in yyyyMMdd date format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:58:38.084Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 397000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 632,
        "name": "Datasource service processes a MHA new citizen file with new address existing in the database",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-new-address-existing-in-the-database;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 622,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "AFTER 31ST PRECEDING YEAR",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 625,
            "name": "the person's new address already exist(s) in the database",
            "match": {
              "arguments": [
                {
                  "val": "new address",
                  "offset": 13
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonSOldAddressAlreadyExistsInTheDatabase(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20001000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 626,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 627,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 35000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 628,
            "name": "the relevant records for the person with no existing records are persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "no existing records",
                  "offset": 41
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.theRelevantRecordsForThePersonWithArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 629,
            "name": "only the old property record(s) is/are added to Datasource",
            "match": {
              "arguments": [
                {
                  "val": "only the old",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.propertiesArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "77a"
          },
          {
            "name": "and"
          },
          {
            "name": "77b"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:58:58.583Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 551000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 633,
        "name": "Datasource service processes a MHA new citizen file with new address existing in the database",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-new-address-existing-in-the-database;;3",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 622,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "19000303",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 625,
            "name": "the person's new address already exist(s) in the database",
            "match": {
              "arguments": [
                {
                  "val": "new address",
                  "offset": 13
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonSOldAddressAlreadyExistsInTheDatabase(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19849000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 626,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 627,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 628,
            "name": "the relevant records for the person with no existing records are persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "no existing records",
                  "offset": 41
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.theRelevantRecordsForThePersonWithArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 629,
            "name": "only the old property record(s) is/are added to Datasource",
            "match": {
              "arguments": [
                {
                  "val": "only the old",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.propertiesArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "77a"
          },
          {
            "name": "and"
          },
          {
            "name": "77b"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:03:01.634Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 518000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 92,
        "name": "Datasource service processes a MHA new citizen file with blank nric",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-blank-nric",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 93,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "",
                  "",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12170000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 96,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 97,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 98,
            "name": "the error message contains NRIC cannot be null/blank",
            "match": {
              "arguments": [
                {
                  "val": "NRIC cannot be null/blank",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:03:14.380Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 400000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 182,
        "name": "Datasource service processes a MHA new citizen file with invalid gender = space",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-invalid-gender-=-space",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 183,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12229000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 186,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 187,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 188,
            "name": "the error message contains Gender must be at exactly 1 character size",
            "match": {
              "arguments": [
                {
                  "val": "Gender must be at exactly 1 character size",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:03:27.050Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 400000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 276,
        "name": "Datasource service processes a MHA new citizen file with invalid new address indicator as A",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-invalid-new-address-indicator-as-a",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 277,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "A",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12148000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 280,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 281,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 282,
            "name": "the error message contains Invalid address indicator",
            "match": {
              "arguments": [
                {
                  "val": "Invalid address indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:03:39.637Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 404000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 420,
        "name": "Datasource service processes a MHA new citizen file with current address of overseas address type and private property type",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-current-address-of-overseas-address-type-and-private-property-type",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 421,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_ADDR_POSTAL_CODE",
                  "NEW_ADDR_NEW_POSTAL_CODE",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "C",
                  "C",
                  "888       HIDDENCREST CT CONCORD,CA 94521",
                  "2057",
                  "",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S0263529A",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "D",
                  "11        BEDOK RESERVOIR VIEW",
                  "",
                  "479236",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25557000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 425,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 426,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 42000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 427,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 428,
            "name": "I verify that person with S0263529A is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S0263529A",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:04:05.697Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 569000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 647,
        "name": "Datasource service processes a MHA new citizen file with both old and new address existing in the database",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-both-old-and-new-address-existing-in-the-database;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 33000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 637,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "AFTER 31ST PRECEDING YEAR",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 640,
            "name": "the person's old and new address already exist(s) in the database",
            "match": {
              "arguments": [
                {
                  "val": "old and new address",
                  "offset": 13
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonSOldAddressAlreadyExistsInTheDatabase(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20070000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 641,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 642,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 43000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 643,
            "name": "the relevant records for the person with no existing records are persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "no existing records",
                  "offset": 41
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.theRelevantRecordsForThePersonWithArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 29000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 644,
            "name": "neither of the property record(s) is/are added to Datasource",
            "match": {
              "arguments": [
                {
                  "val": "neither of the",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.propertiesArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "78a"
          },
          {
            "name": "and"
          },
          {
            "name": "78b"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:04:26.484Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 583000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 648,
        "name": "Datasource service processes a MHA new citizen file with both old and new address existing in the database",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-both-old-and-new-address-existing-in-the-database;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 637,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "19000303",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 640,
            "name": "the person's old and new address already exist(s) in the database",
            "match": {
              "arguments": [
                {
                  "val": "old and new address",
                  "offset": 13
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonSOldAddressAlreadyExistsInTheDatabase(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20005000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 641,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 642,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 32000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 643,
            "name": "the relevant records for the person with no existing records are persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "no existing records",
                  "offset": 41
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.theRelevantRecordsForThePersonWithArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 644,
            "name": "neither of the property record(s) is/are added to Datasource",
            "match": {
              "arguments": [
                {
                  "val": "neither of the",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.propertiesArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "78a"
          },
          {
            "name": "and"
          },
          {
            "name": "78b"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:24.967Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 468000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 43,
        "name": "Datasource service processes a MHA new citizen file with a mixture of valid and complete duplicate records",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-a-mixture-of-valid-and-complete-duplicate-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 44,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F8100327X",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              },
              {
                "cells": [
                  "S1501501B",
                  "",
                  "Person B",
                  "18881231",
                  "F",
                  "Z",
                  "A",
                  "999       High Rise",
                  "Z",
                  "A",
                  "001       Low Rise",
                  "D",
                  "20200301",
                  ""
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F8100327X",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24962000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 49,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 50,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 51,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 52,
            "name": "I verify that person with S1501501B is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501501B",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 53,
            "name": "the error message contains Completely Duplicate Record found.",
            "match": {
              "arguments": [
                {
                  "val": "Completely Duplicate Record found.",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:50.522Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 557000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 146,
        "name": "Datasource service processes a MHA new citizen file with DOB field is empty / space",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-dob-field-is-empty-/-space",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 147,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12056000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 150,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 151,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 152,
            "name": "the error message contains Date of Birth must be in valid format",
            "match": {
              "arguments": [
                {
                  "val": "Date of Birth must be in valid format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:03.174Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 368000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 239,
        "name": "Datasource service processes a MHA new citizen file with empty name",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-empty-name",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 240,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001",
                  "",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12012000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 243,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 245,
            "name": "the error message contains Name should not be empty",
            "match": {
              "arguments": [
                {
                  "val": "Name should not be empty",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:15.593Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 384000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 359,
        "name": "Datasource service processes a MHA new citizen file with valid previous address of overseas address and private property address",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-valid-previous-address-of-overseas-address-and-private-property-address",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 360,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "OLD_ADDR_POSTAL_CODE",
                  "OLD_ADDR_NEW_POSTAL_CODE",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person C",
                  "18000000",
                  "M",
                  "C",
                  "C",
                  "117       HIDDENCREST CT CONCORD,CA 94521",
                  "2057",
                  "",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S0263529A",
                  "",
                  "Person C",
                  "18000000",
                  "M",
                  "Z",
                  "D",
                  "11        BEDOK RESERVOIR VIEW",
                  "",
                  "479236",
                  "Z",
                  "D",
                  "888       BEDOK RESERVOIR VIEW",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24916000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 364,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 365,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 366,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 367,
            "name": "I verify that person with S0263529A is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S0263529A",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:40.997Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 540000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 518,
        "name": "Datasource service processes a MHA new citizen file record with previous addr and current address and invalid date of address change",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-record-with-previous-addr-and-current-address-and-invalid-date-of-address-change",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 519,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18169000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 522,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 523,
            "name": "the Mha New Citizen batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 524,
            "name": "I verify that person with S1501634E is not persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is not",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 525,
            "name": "the error message contains DateOfAddressChange is null",
            "match": {
              "arguments": [
                {
                  "val": "DateOfAddressChange is null",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:59.751Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 424000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 580,
        "name": "Datasource service processes a MHA new citizen file with an existing converted Singaporean record in the database",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-an-existing-converted-singaporean-record-in-the-database",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 581,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 46000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 584,
            "name": "the person already exists in the database as a converted Singaporean",
            "match": {
              "arguments": [
                {
                  "val": "converted Singaporean",
                  "offset": 47
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonAlreadyExistsInTheDatabaseAsA(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19551000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 585,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 586,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 587,
            "name": "the error message contains NRIC of this record and Nationality is also found for this NRIC record",
            "match": {
              "arguments": [
                {
                  "val": "NRIC of this record and Nationality is also found for this NRIC record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "73"
          },
          {
            "name": "and"
          },
          {
            "name": "74"
          },
          {
            "name": "(footer"
          },
          {
            "name": "count"
          },
          {
            "name": "is"
          },
          {
            "name": "correct)"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:11:32.265Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 544000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 56,
        "name": "Datasource service processes a MHA new citizen file with a mixture of valid and partial duplicate records",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-a-mixture-of-valid-and-partial-duplicate-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 57,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T1601511Z",
                  "G1801510U",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              },
              {
                "cells": [
                  "T1601518G",
                  "",
                  "Person C",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  ""
                ]
              },
              {
                "cells": [
                  "T1601511Z",
                  "G1801510U",
                  "Person A",
                  "19990101",
                  "M",
                  "Z",
                  "A",
                  "999       High Rise",
                  "Z",
                  "A",
                  "001       Low Rise",
                  "D",
                  "20200301",
                  "19990101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24361000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 62,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 63,
            "name": "the Mha New Citizen batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 64,
            "name": "I verify that person with T1601518G is not persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "T1601518G",
                  "offset": 26
                },
                {
                  "val": "is not",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 65,
            "name": "I verify that person with T1601511Z is not persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "T1601511Z",
                  "offset": 26
                },
                {
                  "val": "is not",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 66,
            "name": "the error message contains Partially Duplicate Record found.",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found.",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:11:57.231Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 619000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 155,
        "name": "Datasource service processes a MHA new citizen file with DOB incorrect date format",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-dob-incorrect-date-format",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 156,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "190012321",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12249000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 159,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 160,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 161,
            "name": "the error message contains Date of Birth must be in valid format",
            "match": {
              "arguments": [
                {
                  "val": "Date of Birth must be in valid format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:12:10.140Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 417000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 248,
        "name": "Datasource service processes a MHA new citizen file with invalid address indicator A",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-invalid-address-indicator-a",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 249,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001",
                  "Person A",
                  "18000000",
                  "M",
                  "A",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12226000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 252,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 253,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 254,
            "name": "the error message contains Invalid address indicator",
            "match": {
              "arguments": [
                {
                  "val": "Invalid address indicator",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:12:22.824Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 384000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 370,
        "name": "Datasource service processes a MHA new citizen file with valid current address indicator C / Z / ' '",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-valid-current-address-indicator-c-/-z-/----",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 371,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person C",
                  "18000000",
                  "M",
                  "C",
                  "C",
                  "117       Vista Rise",
                  "C",
                  "C",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S3185487C",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S8723883J",
                  "",
                  "Person S",
                  "18000000",
                  "M",
                  "",
                  "S",
                  "117       Vista Rise",
                  "",
                  "S",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25423000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 376,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 377,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 44000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 378,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 379,
            "name": "I verify that person with S3185487C is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S3185487C",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 380,
            "name": "I verify that person with S8723883J is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S8723883J",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:12:48.743Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 782000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 529,
        "name": "Datasource service processes a MHA new citizen file record with previous addr and current address and invalid date of address change",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-record-with-previous-addr-and-current-address-and-invalid-date-of-address-change",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 530,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20203232",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12241000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 533,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 534,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 535,
            "name": "I verify that person with S1501634E is not persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is not",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 536,
            "name": "the error message contains Must be in yyyyMMdd date format",
            "match": {
              "arguments": [
                {
                  "val": "Must be in yyyyMMdd date format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:13:01.811Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 398000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 600,
        "name": "Datasource service processes a MHA new citizen file with no existing records in the database",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-no-existing-records-in-the-database;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 591,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "19000303",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20002000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 594,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 595,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 596,
            "name": "the relevant records for the person with no existing records are persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "no existing records",
                  "offset": 41
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.theRelevantRecordsForThePersonWithArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 597,
            "name": "both the old and new property record(s) is/are added to Datasource",
            "match": {
              "arguments": [
                {
                  "val": "both the old and new",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.propertiesArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "75a"
          },
          {
            "name": "to"
          },
          {
            "name": "75d"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:13:22.306Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 761000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 601,
        "name": "Datasource service processes a MHA new citizen file with no existing records in the database",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-no-existing-records-in-the-database;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 591,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "AFTER 31ST PRECEDING YEAR",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20056000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 594,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 595,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 596,
            "name": "the relevant records for the person with no existing records are persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "no existing records",
                  "offset": 41
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.theRelevantRecordsForThePersonWithArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 597,
            "name": "both the old and new property record(s) is/are added to Datasource",
            "match": {
              "arguments": [
                {
                  "val": "both the old and new",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.propertiesArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "75a"
          },
          {
            "name": "to"
          },
          {
            "name": "75d"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:13:43.211Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 722000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 602,
        "name": "Datasource service processes a MHA new citizen file with no existing records in the database",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-no-existing-records-in-the-database;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 591,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "D",
                  "19000303",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20017000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 594,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 595,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 32000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 596,
            "name": "the relevant records for the person with no existing records are persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "no existing records",
                  "offset": 41
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.theRelevantRecordsForThePersonWithArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 597,
            "name": "only one property record(s) is/are added to Datasource",
            "match": {
              "arguments": [
                {
                  "val": "only one",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.propertiesArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "75a"
          },
          {
            "name": "to"
          },
          {
            "name": "75d"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:14:04.024Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 641000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 603,
        "name": "Datasource service processes a MHA new citizen file with no existing records in the database",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-no-existing-records-in-the-database;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 591,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "D",
                  "AFTER 31ST PRECEDING YEAR",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19899000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 594,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 595,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 596,
            "name": "the relevant records for the person with no existing records are persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "no existing records",
                  "offset": 41
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.theRelevantRecordsForThePersonWithArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 597,
            "name": "only one property record(s) is/are added to Datasource",
            "match": {
              "arguments": [
                {
                  "val": "only one",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.propertiesArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "75a"
          },
          {
            "name": "to"
          },
          {
            "name": "75d"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:14:24.641Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 541000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 723,
        "name": "Mha sends a new citizen file containing valid, invalid, completely, partially and hybrid duplicate records",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;mha-sends-a-new-citizen-file-containing-valid--invalid--completely--partially-and-hybrid-duplicate-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 724,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "99991231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  ""
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "99991231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  ""
                ]
              },
              {
                "cells": [
                  "S3429289B",
                  "",
                  "Person B",
                  "99991231",
                  "F",
                  "Z",
                  "A",
                  "999       High Rise",
                  "",
                  "S",
                  "001       Low Rise",
                  "",
                  "20200301",
                  ""
                ]
              },
              {
                "cells": [
                  "S3429289B",
                  "",
                  "PartialB",
                  "99991231",
                  "F",
                  "Z",
                  "A",
                  "999       High Rise",
                  "",
                  "S",
                  "001       Low Rise",
                  "",
                  "20200301",
                  ""
                ]
              },
              {
                "cells": [
                  "S1501501B",
                  "",
                  "Person C",
                  "18881231",
                  "F",
                  "Z",
                  "A",
                  "999       High Rise",
                  "",
                  "S",
                  "001       Low Rise",
                  "",
                  "20200301",
                  ""
                ]
              },
              {
                "cells": [
                  "S6269856Z",
                  "",
                  "Person D",
                  "99991231",
                  "F",
                  "Z",
                  "A",
                  "999       High Rise",
                  "",
                  "S",
                  "001       Low Rise",
                  "",
                  "20200301",
                  ""
                ]
              },
              {
                "cells": [
                  "S6269856Z",
                  "",
                  "Person D",
                  "99991231",
                  "F",
                  "Z",
                  "A",
                  "999       High Rise",
                  "",
                  "S",
                  "001       Low Rise",
                  "",
                  "20200301",
                  ""
                ]
              },
              {
                "cells": [
                  "S6269856Z",
                  "",
                  "Person D",
                  "99991231",
                  "M",
                  "Z",
                  "A",
                  "999       High Rise",
                  "",
                  "S",
                  "001       Low Rise",
                  "",
                  "20200301",
                  ""
                ]
              },
              {
                "cells": [
                  "S1501521G",
                  "",
                  "Person E",
                  "99991231",
                  "M",
                  "Z",
                  "A",
                  "123       Orion Rise",
                  "",
                  "S",
                  "001       Omega Rise",
                  "",
                  "20200301",
                  ""
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24120000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 735,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 736,
            "name": "the Mha New Citizen batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 737,
            "name": "I verify number of is mappable records in the New Citizen Validated table is 2",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 77
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.iVerifyNumberOfIsMappableRecordsInNewCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 738,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "DateOfBirth cannot be equal/after the job dateOfRun",
                  "2"
                ]
              },
              {
                "cells": [
                  "Completely Duplicate Record found.",
                  "2"
                ]
              },
              {
                "cells": [
                  "Partially Duplicate Record found.",
                  "5"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:01.867Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 549000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 101,
        "name": "Datasource service processes a MHA new citizen file with incorrect check digit",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-incorrect-check-digit",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 102,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501645E",
                  "",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12464000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 105,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 106,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 107,
            "name": "the error message contains Must be valid NRIC",
            "match": {
              "arguments": [
                {
                  "val": "Must be valid NRIC",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:14.956Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 401000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 191,
        "name": "Datasource service processes a MHA new citizen file with invalid gender = A",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-invalid-gender-=-a",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 192,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "A",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12234000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 195,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 196,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 197,
            "name": "the error message contains Invalid Gender",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Gender",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:27.637Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 422000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 285,
        "name": "Datasource service processes a MHA new citizen file with new address as NCA but invalid address type A",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-new-address-as-nca-but-invalid-address-type-a",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 286,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12377000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 289,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 290,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 291,
            "name": "the error message contains Invalid nca address type",
            "match": {
              "arguments": [
                {
                  "val": "Invalid nca address type",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:40.483Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 395000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 431,
        "name": "Datasource service processes a MHA new citizen file with valid invalid address type",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-valid-invalid-address-type",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 432,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S3185487C",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "B",
                  "117       Vista Rise",
                  "Z",
                  "B",
                  "888       Diamond Rise",
                  "M",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S8723883J",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "X",
                  "117       Vista Rise",
                  "Z",
                  "X",
                  "888       Diamond Rise",
                  "F",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S2190962I",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "C",
                  "C",
                  "117       Vista Rise",
                  "C",
                  "C",
                  "888       Diamond Rise",
                  "G",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S3205362I",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "D",
                  "117       Vista Rise",
                  "Z",
                  "D",
                  "888       Diamond Rise",
                  "I",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S6843886A",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "E",
                  "117       Vista Rise",
                  "Z",
                  "E",
                  "888       Diamond Rise",
                  "N",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S2915858D",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "F",
                  "117       Vista Rise",
                  "Z",
                  "F",
                  "888       Diamond Rise",
                  "P",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S4897112A",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "Q",
                  "117       Vista Rise",
                  "Z",
                  "Q",
                  "888       Diamond Rise",
                  "S",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25700000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 442,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 2000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 443,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 43000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 444,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 445,
            "name": "I verify that person with S3185487C is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S3185487C",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 446,
            "name": "I verify that person with S8723883J is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S8723883J",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 27000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 447,
            "name": "I verify that person with S2190962I is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S2190962I",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 448,
            "name": "I verify that person with S3205362I is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S3205362I",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 23000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 449,
            "name": "I verify that person with S6843886A is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S6843886A",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 450,
            "name": "I verify that person with S2915858D is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S2915858D",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 451,
            "name": "I verify that person with S4897112A is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S4897112A",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:57:06.845Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 576000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 651,
        "name": "Datasource service processes a MHA new citizen file with no existing records in the database (only old address provided)",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-no-existing-records-in-the-database-(only-old-address-provided)",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 652,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20027000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 655,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 656,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 42000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 657,
            "name": "the relevant records for the person with no existing records are persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "no existing records",
                  "offset": 41
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.theRelevantRecordsForThePersonWithArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 658,
            "name": "only the old property record(s) is/are added to Datasource",
            "match": {
              "arguments": [
                {
                  "val": "only the old",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.propertiesArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "79"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:15.734Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 505000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 20,
        "name": "Datasource service processes a MHA new citizen file with partial duplicate records",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-partial-duplicate-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 21,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501502J",
                  "",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              },
              {
                "cells": [
                  "S1501502J",
                  "",
                  "Person B",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12921000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 25,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 26,
            "name": "the Mha New Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 27,
            "name": "I verify that person with S1501502J is not persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501502J",
                  "offset": 26
                },
                {
                  "val": "is not",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 28,
            "name": "the error message contains Partially Duplicate Record found.",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found.",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:29.216Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 455000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 128,
        "name": "Datasource service processes a MHA new citizen file with with NRIC S555",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-with-nric-s555",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S5551634E",
                  "",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12263000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 133,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "the error message contains Must be valid NRIC",
            "match": {
              "arguments": [
                {
                  "val": "Must be valid NRIC",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:41.976Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 410000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 219,
        "name": "Datasource service processes a MHA new citizen file with 2 or more records with the same Linked FIN but same and different details",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-2-or-more-records-with-the-same-linked-fin-but-same-and-different-details",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 220,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "F",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12977000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 225,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 226,
            "name": "the Mha New Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 227,
            "name": "the error message contains Partially Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:55.407Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 477000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 319,
        "name": "Datasource service processes a MHA new citizen file with valid previous address indicator C / Z / ' '",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-valid-previous-address-indicator-c-/-z-/----",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 320,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person C",
                  "18000000",
                  "M",
                  "C",
                  "C",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S3185487C",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S8723883J",
                  "",
                  "Person S",
                  "18000000",
                  "M",
                  "",
                  "S",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25670000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 325,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 326,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 52000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 327,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 30000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 328,
            "name": "I verify that person with S3185487C is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S3185487C",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 329,
            "name": "I verify that person with S8723883J is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S8723883J",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:00:21.686Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 568000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 477,
        "name": "Datasource service processes a MHA new citizen file having previous address with valid postal codes",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-having-previous-address-with-valid-postal-codes",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 478,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "OLD_ADDR_POSTAL_CODE",
                  "OLD_ADDR_NEW_POSTAL_CODE",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_ADDR_POSTAL_CODE",
                  "NEW_ADDR_NEW_POSTAL_CODE",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "1234",
                  "123666",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "5678",
                  "333123",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 20402000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 481,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 482,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 34000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 483,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:00:42.727Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 546000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 496,
        "name": "Datasource service processes a MHA new citizen file record with no previous addr, but has current address and date of address change = blank",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-record-with-no-previous-addr--but-has-current-address-and-date-of-address-change-=-blank",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 497,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "",
                  "",
                  "",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12313000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 500,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 501,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 502,
            "name": "I verify that person with S1501634E is not persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is not",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 503,
            "name": "the error message contains Invalid nca address type",
            "match": {
              "arguments": [
                {
                  "val": "Invalid nca address type",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:00:55.632Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 395000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 562,
        "name": "Datasource service processes a MHA new citizen file with invalid citizenship attainment date",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-invalid-citizenship-attainment-date",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 563,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "99990101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18605000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 566,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 567,
            "name": "the Mha New Citizen batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 568,
            "name": "the error message contains Citizenship attainment date must be before dateOfRun",
            "match": {
              "arguments": [
                {
                  "val": "Citizenship attainment date must be before dateOfRun",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "71"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:01:14.672Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 454000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 696,
        "name": "Datasource service processes a MHA new citizen file with an existing foreigner record in the database",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-an-existing-foreigner-record-in-the-database",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 697,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000101",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 700,
            "name": "the person already exists in the database as a foreigner",
            "match": {
              "arguments": [
                {
                  "val": "foreigner",
                  "offset": 47
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonAlreadyExistsInTheDatabaseAsA(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20426000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 701,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 702,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 703,
            "name": "the relevant records for the person with an existing FIN are persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "an existing FIN",
                  "offset": 41
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.theRelevantRecordsForThePersonWithArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 53000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 704,
            "name": "both the old and new property record(s) is/are added to Datasource",
            "match": {
              "arguments": [
                {
                  "val": "both the old and new",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.propertiesArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "84"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:01:35.710Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 631000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 719,
        "name": "Datasource service processes a MHA new citizen file with an existing ceased citizen record in the database",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-an-existing-ceased-citizen-record-in-the-database;;2",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 710,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000101",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 43000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 713,
            "name": "the person already exists in the database as a ceased citizen",
            "match": {
              "arguments": [
                {
                  "val": "ceased citizen",
                  "offset": 47
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonAlreadyExistsInTheDatabaseAsA(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20149000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 714,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 715,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 716,
            "name": "the error message contains NRIC of this record and Nationality is also found for this NRIC record",
            "match": {
              "arguments": [
                {
                  "val": "NRIC of this record and Nationality is also found for this NRIC record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "86"
          },
          {
            "name": "and"
          },
          {
            "name": "87"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:01:56.576Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 534000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 720,
        "name": "Datasource service processes a MHA new citizen file with an existing ceased citizen record in the database",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-an-existing-ceased-citizen-record-in-the-database;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 710,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000101",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "",
                  "",
                  "",
                  "",
                  "",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 43000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 713,
            "name": "the person already exists in the database as a ceased citizen",
            "match": {
              "arguments": [
                {
                  "val": "ceased citizen",
                  "offset": 47
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonAlreadyExistsInTheDatabaseAsA(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20311000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 714,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 715,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 716,
            "name": "the error message contains NRIC of this record and Nationality is also found for this NRIC record",
            "match": {
              "arguments": [
                {
                  "val": "NRIC of this record and Nationality is also found for this NRIC record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "86"
          },
          {
            "name": "and"
          },
          {
            "name": "87"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:34.998Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 499000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 31,
        "name": "Datasource service processes a MHA new citizen file with hybrid (both completely & partially) duplicate records",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-hybrid-(both-completely-&-partially)-duplicate-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 32,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501626D",
                  "G1801520Q",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              },
              {
                "cells": [
                  "S1501626D",
                  "G1801520Q",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              },
              {
                "cells": [
                  "S1501626D",
                  "G1801520Q",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "118       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12766000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 37,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 38,
            "name": "the Mha New Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 39,
            "name": "I verify that person with S1501626D is not persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501626D",
                  "offset": 26
                },
                {
                  "val": "is not",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 40,
            "name": "the error message contains Partially Duplicate Record found.",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found.",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:48.332Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 589000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 137,
        "name": "Datasource service processes a MHA new citizen file with DOB DD = 00, and MM = 00 , Invalid year = 0000",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-dob-dd-=-00--and-mm-=-00---invalid-year-=-0000",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 138,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12141000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 141,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 142,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 143,
            "name": "the error message contains Date of Birth must be in valid format",
            "match": {
              "arguments": [
                {
                  "val": "Date of Birth must be in valid format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:01.111Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 382000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 230,
        "name": "Datasource service processes a MHA new citizen file with invalid fin contains only 8 alpha-numeric characters",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-invalid-fin-contains-only-8-alpha-numeric-characters",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 231,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12116000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 234,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 235,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 236,
            "name": "the error message contains Must be valid FIN",
            "match": {
              "arguments": [
                {
                  "val": "Must be valid FIN",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:13.657Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 379000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 332,
        "name": "Datasource service processes a MHA new citizen file with previous address of valid mha address type",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-previous-address-of-valid-mha-address-type",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 333,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S3185487C",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "B",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S8723883J",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "X",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S2190962I",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "C",
                  "C",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S3205362I",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "D",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S6843886A",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "E",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S2915858D",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "F",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S4897112A",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "Q",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S1765629E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "I",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S0263529A",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25012000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 345,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 346,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 42000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 347,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 348,
            "name": "I verify that person with S3185487C is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S3185487C",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 349,
            "name": "I verify that person with S8723883J is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S8723883J",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 350,
            "name": "I verify that person with S2190962I is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S2190962I",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 351,
            "name": "I verify that person with S3205362I is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S3205362I",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 352,
            "name": "I verify that person with S6843886A is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S6843886A",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 353,
            "name": "I verify that person with S2915858D is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S2915858D",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 354,
            "name": "I verify that person with S4897112A is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S4897112A",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 355,
            "name": "I verify that person with S1765629E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1765629E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 356,
            "name": "I verify that person with S0263529A is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S0263529A",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:39.323Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 543000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 507,
        "name": "Datasource service processes a MHA new citizen file record with no previous addr, but has current address and there is date of address change",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-record-with-no-previous-addr--but-has-current-address-and-there-is-date-of-address-change",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 508,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "",
                  "",
                  "",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12053000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 511,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 512,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 513,
            "name": "I verify that person with S1501634E is not persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is not",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 514,
            "name": "the error message contains Invalid nca address type",
            "match": {
              "arguments": [
                {
                  "val": "Invalid nca address type",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:51.963Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 393000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 571,
        "name": "Datasource service processes a MHA new citizen file with a Linked FIN but no citizenship attainment date",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-a-linked-fin-but-no-citizenship-attainment-date",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 572,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  ""
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12013000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 575,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 576,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 577,
            "name": "the error message contains FIN is valid, attainment date cannot be blank",
            "match": {
              "arguments": [
                {
                  "val": "FIN is valid, attainment date cannot be blank",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "72"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:04.413Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 390000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 692,
        "name": "Datasource service processes a MHA new citizen file with an existing NRIC record in the database (no nationality)",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-an-existing-nric-record-in-the-database-(no-nationality);;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 681,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000101",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  ""
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 684,
            "name": "the person already exists in the database as a Singaporean",
            "match": {
              "arguments": [
                {
                  "val": "Singaporean",
                  "offset": 47
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonAlreadyExistsInTheDatabaseAsA(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 685,
            "name": "Datasource has no existing person detail or nationality records",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonHasNoExistingNationalityRecords()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19566000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 686,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 687,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 688,
            "name": "the relevant records for the person with an existing NRIC are persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "an existing NRIC",
                  "offset": 41
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.theRelevantRecordsForThePersonWithArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 689,
            "name": "both the old and new property record(s) is/are added to Datasource",
            "match": {
              "arguments": [
                {
                  "val": "both the old and new",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.propertiesArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "82"
          },
          {
            "name": "and"
          },
          {
            "name": "83"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:24.478Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 564000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 693,
        "name": "Datasource service processes a MHA new citizen file with an existing NRIC record in the database (no nationality)",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-an-existing-nric-record-in-the-database-(no-nationality);;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 681,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000101",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 684,
            "name": "the person already exists in the database as a Singaporean",
            "match": {
              "arguments": [
                {
                  "val": "Singaporean",
                  "offset": 47
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonAlreadyExistsInTheDatabaseAsA(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 685,
            "name": "Datasource has no existing person detail or nationality records",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonHasNoExistingNationalityRecords()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19572000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 686,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 687,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 688,
            "name": "the relevant records for the person with an existing NRIC are persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "an existing NRIC",
                  "offset": 41
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.theRelevantRecordsForThePersonWithArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 689,
            "name": "both the old and new property record(s) is/are added to Datasource",
            "match": {
              "arguments": [
                {
                  "val": "both the old and new",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.propertiesArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "82"
          },
          {
            "name": "and"
          },
          {
            "name": "83"
          }
        ]
      }
    ],
    "name": "Data processing for MHA new citizen file",
    "description": "",
    "id": "data-processing-for-mha-new-citizen-file",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_new_citizen.feature",
    "tags": [
      {
        "name": "@datasource",
        "location": {
          "line": 1,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@development",
        "location": {
          "line": 2,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@new_citizen",
        "location": {
          "line": 3,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@mha",
        "location": {
          "line": 4,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@truncate",
        "location": {
          "line": 5,
          "column": 1
        },
        "type": "Tag"
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:54:53.662Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 528000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "Datasource service processes a MHA no interaction list file with wrong footer count.",
        "description": "",
        "id": "data-processing-for-mha-no-interaction-list-(nil);datasource-service-processes-a-mha-no-interaction-list-file-with-wrong-footer-count.",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 10,
            "name": "the file have the following header details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingHeaderDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "2019010120190101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 12,
            "name": "the file have the following record details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingRecordDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "valid_from_date",
                  "valid_till_date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "19901001",
                  "20201230"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 15,
            "name": "the file have the following footer details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHasTheFollowingFooterDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "000000999"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 17,
            "name": "the MHA no interaction file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theMhaNoInteractionFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1132000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 18,
            "name": "MHA sends the MHA_NO_INTERACTION file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 19,
            "name": "the Mha no interaction batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "no interaction",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 20,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Footer size does not match body size.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 23,
            "name": "I verify number of records in MHA no interaction validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 68
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.verifyNumberOfRecordsInNoInteractionValidatedTable(long)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@no_interaction"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:55.397Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 376000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 179,
        "name": "Datasource service processes a MHA no interaction list file with extraction & cut-off date after file received.",
        "description": "",
        "id": "data-processing-for-mha-no-interaction-list-(nil);datasource-service-processes-a-mha-no-interaction-list-file-with-extraction-&-cut-off-date-after-file-received.",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 180,
            "name": "the file have the following header details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingHeaderDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "9999010199990101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 182,
            "name": "the file have the following record details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingRecordDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "valid_from_date",
                  "valid_till_date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "19901001",
                  "20201230"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 185,
            "name": "the file have the following footer details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHasTheFollowingFooterDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 187,
            "name": "the MHA no interaction file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theMhaNoInteractionFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12493000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 188,
            "name": "MHA sends the MHA_NO_INTERACTION file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 189,
            "name": "the Mha no interaction batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "no interaction",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 190,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Extraction date cannot be after File Received date.",
                  "1"
                ]
              },
              {
                "cells": [
                  "Cut-off date cannot be after File Received date.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 194,
            "name": "I verify number of records in MHA no interaction validated table is 1",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 68
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.verifyNumberOfRecordsInNoInteractionValidatedTable(long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@no_interaction"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:16:55.539Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 446000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 162,
        "name": "Datasource service processes a MHA no interaction list file with extraction date before cut-off date.",
        "description": "",
        "id": "data-processing-for-mha-no-interaction-list-(nil);datasource-service-processes-a-mha-no-interaction-list-file-with-extraction-date-before-cut-off-date.",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 163,
            "name": "the file have the following header details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingHeaderDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "2019122920191230"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 165,
            "name": "the file have the following record details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingRecordDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "valid_from_date",
                  "valid_till_date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "19901001",
                  "20201230"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 168,
            "name": "the file have the following footer details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHasTheFollowingFooterDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 170,
            "name": "the MHA no interaction file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theMhaNoInteractionFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12241000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 171,
            "name": "MHA sends the MHA_NO_INTERACTION file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 172,
            "name": "the Mha no interaction batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "no interaction",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 173,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "\"Extraction Date must be equal/after Cut-off Date.\"",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 176,
            "name": "I verify number of records in MHA no interaction validated table is 1",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 68
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.verifyNumberOfRecordsInNoInteractionValidatedTable(long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@no_interaction"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_10"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:16:36.367Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 528000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 94,
        "name": "Datasource service processes a MHA no interaction list file with wrong header extraction date format.",
        "description": "",
        "id": "data-processing-for-mha-no-interaction-list-(nil);datasource-service-processes-a-mha-no-interaction-list-file-with-wrong-header-extraction-date-format.",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 95,
            "name": "the file have the following header details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingHeaderDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "201901 120190103"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 97,
            "name": "the file have the following record details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingRecordDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "valid_from_date",
                  "valid_till_date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "19901001",
                  "20201230"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 100,
            "name": "the file have the following footer details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHasTheFollowingFooterDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 102,
            "name": "the MHA no interaction file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theMhaNoInteractionFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12107000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 103,
            "name": "MHA sends the MHA_NO_INTERACTION file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 104,
            "name": "the Mha no interaction batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "no interaction",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 105,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "\"Must be in yyyyMMdd date format.\"",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 108,
            "name": "I verify number of records in MHA no interaction validated table is 1",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 68
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.verifyNumberOfRecordsInNoInteractionValidatedTable(long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@no_interaction"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_6"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:19.077Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 565000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 111,
        "name": "Datasource service processes a MHA no interaction list file with wrong header cut-off date format.",
        "description": "",
        "id": "data-processing-for-mha-no-interaction-list-(nil);datasource-service-processes-a-mha-no-interaction-list-file-with-wrong-header-cut-off-date-format.",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 112,
            "name": "the file have the following header details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingHeaderDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "201901012019ab03"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 114,
            "name": "the file have the following record details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingRecordDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "valid_from_date",
                  "valid_till_date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "19901001",
                  "20201230"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 117,
            "name": "the file have the following footer details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHasTheFollowingFooterDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 119,
            "name": "the MHA no interaction file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theMhaNoInteractionFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12133000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 120,
            "name": "MHA sends the MHA_NO_INTERACTION file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 121,
            "name": "the Mha no interaction batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "no interaction",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 122,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "\"Must be in yyyyMMdd date format.\"",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 125,
            "name": "I verify number of records in MHA no interaction validated table is 1",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 68
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.verifyNumberOfRecordsInNoInteractionValidatedTable(long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@no_interaction"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:59:31.841Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 402000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 287,
        "name": "Datasource service processes a MHA no interaction list file successfully.",
        "description": "",
        "id": "data-processing-for-mha-no-interaction-list-(nil);datasource-service-processes-a-mha-no-interaction-list-file-successfully.",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 288,
            "name": "the database populated with the following person and person id details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.databasePopulatedWithTheFollowingPersonAndPersonIdDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "id_type"
                ]
              },
              {
                "cells": [
                  "S1501500D",
                  "NRIC"
                ]
              },
              {
                "cells": [
                  "T1601600J",
                  "NRIC"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 292,
            "name": "the file have the following header details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingHeaderDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "2019010120190101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 294,
            "name": "the file have the following record details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingRecordDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "valid_from_date",
                  "valid_till_date"
                ]
              },
              {
                "cells": [
                  "S1501500D",
                  "19900101",
                  "20200101"
                ]
              },
              {
                "cells": [
                  "T1601600J",
                  "20000101",
                  "22220101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 298,
            "name": "the file have the following footer details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHasTheFollowingFooterDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "000000002"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 300,
            "name": "the MHA no interaction file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theMhaNoInteractionFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25132000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 301,
            "name": "MHA sends the MHA_NO_INTERACTION file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 302,
            "name": "the Mha no interaction batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "no interaction",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 303,
            "name": "I verify number of records in MHA no interaction validated table is 2",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 68
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.verifyNumberOfRecordsInNoInteractionValidatedTable(long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 304,
            "name": "I verify that the person status is updated correctly",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.verifyThePersonStatusUpdatedCorrectly()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 305,
            "name": "I remove the test data from the prepared database",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.removeTheTestDataFromPreparedDatabase()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@no_interaction"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_7"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:04:47.167Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 598000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 128,
        "name": "Datasource service processes a MHA no interaction list file with no header provided.",
        "description": "",
        "id": "data-processing-for-mha-no-interaction-list-(nil);datasource-service-processes-a-mha-no-interaction-list-file-with-no-header-provided.",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 129,
            "name": "the file have the following record details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingRecordDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "valid_from_date",
                  "valid_till_date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "19901001",
                  "20201230"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "the file have the following footer details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHasTheFollowingFooterDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 134,
            "name": "the MHA no interaction file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theMhaNoInteractionFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1224000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 135,
            "name": "MHA sends the MHA_NO_INTERACTION file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 136,
            "name": "the Mha no interaction batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "no interaction",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 137,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Wrong header length.",
                  "1"
                ]
              },
              {
                "cells": [
                  "Footer size does not match body size.",
                  "1"
                ]
              },
              {
                "cells": [
                  "Must have at least 1 valid body record.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 142,
            "name": "I verify number of records in MHA no interaction validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 68
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.verifyNumberOfRecordsInNoInteractionValidatedTable(long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@no_interaction"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:04:49.048Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 387000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 308,
        "name": "Datasource service processes a MHA no interaction list file with no content (i.e totally empty file).",
        "description": "",
        "id": "data-processing-for-mha-no-interaction-list-(nil);datasource-service-processes-a-mha-no-interaction-list-file-with-no-content-(i.e-totally-empty-file).",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 309,
            "name": "the MHA_NO_INTERACTION file is empty",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 4
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theFileIsEmpty(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1347000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 310,
            "name": "MHA sends the MHA_NO_INTERACTION file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 311,
            "name": "the Mha no interaction batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "no interaction",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 312,
            "name": "I verify number of records in Incoming Record table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.verifyNumberOfRecordsInIncomingRecordTable(long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 313,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Must have at least 1 valid body record.",
                  "1"
                ]
              },
              {
                "cells": [
                  "Must have 1 Footer record.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@no_interaction"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_8"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:19.812Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 486000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 238,
        "name": "Datasource service processes a MHA no interaction list file with no body provided.",
        "description": "",
        "id": "data-processing-for-mha-no-interaction-list-(nil);datasource-service-processes-a-mha-no-interaction-list-file-with-no-body-provided.",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 239,
            "name": "the file have the following header details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingHeaderDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "2019010120190101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 241,
            "name": "the file have the following footer details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHasTheFollowingFooterDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "000000000"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 243,
            "name": "the MHA no interaction file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theMhaNoInteractionFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1121000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 244,
            "name": "MHA sends the MHA_NO_INTERACTION file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 245,
            "name": "the Mha no interaction batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "no interaction",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 246,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Must have at least 1 valid body record.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 249,
            "name": "I verify number of records in MHA no interaction validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 68
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.verifyNumberOfRecordsInNoInteractionValidatedTable(long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@no_interaction"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_4"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:14:49.361Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 423000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 77,
        "name": "Datasource service processes a MHA no interaction list file with wrong header length.",
        "description": "",
        "id": "data-processing-for-mha-no-interaction-list-(nil);datasource-service-processes-a-mha-no-interaction-list-file-with-wrong-header-length.",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 78,
            "name": "the file have the following header details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingHeaderDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "20190101201901"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 80,
            "name": "the file have the following record details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingRecordDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "valid_from_date",
                  "valid_till_date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "19901001",
                  "20201230"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "the file have the following footer details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHasTheFollowingFooterDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 85,
            "name": "the MHA no interaction file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theMhaNoInteractionFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1175000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 86,
            "name": "MHA sends the MHA_NO_INTERACTION file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 87,
            "name": "the Mha no interaction batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "no interaction",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 88,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Wrong header length.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 91,
            "name": "I verify number of records in MHA no interaction validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 68
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.verifyNumberOfRecordsInNoInteractionValidatedTable(long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@no_interaction"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_5"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:57:27.544Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 584000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 145,
        "name": "Datasource service processes a MHA no interaction list file with empty header provided.",
        "description": "",
        "id": "data-processing-for-mha-no-interaction-list-(nil);datasource-service-processes-a-mha-no-interaction-list-file-with-empty-header-provided.",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 146,
            "name": "the file have the following header details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingHeaderDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "blank"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 148,
            "name": "the file have the following record details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingRecordDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "valid_from_date",
                  "valid_till_date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "19901001",
                  "20201230"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 151,
            "name": "the file have the following footer details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHasTheFollowingFooterDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 153,
            "name": "the MHA no interaction file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theMhaNoInteractionFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1229000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 154,
            "name": "MHA sends the MHA_NO_INTERACTION file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 155,
            "name": "the Mha no interaction batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "no interaction",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 156,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Wrong header length.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 159,
            "name": "I verify number of records in MHA no interaction validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 68
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.verifyNumberOfRecordsInNoInteractionValidatedTable(long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@no_interaction"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_9"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T02:02:17.505Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 559000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 26,
        "name": "Datasource service processes a MHA no interaction list file with wrong footer format.",
        "description": "",
        "id": "data-processing-for-mha-no-interaction-list-(nil);datasource-service-processes-a-mha-no-interaction-list-file-with-wrong-footer-format.",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 27,
            "name": "the file have the following header details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingHeaderDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "2019010120190101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 29,
            "name": "the file have the following record details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingRecordDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "valid_from_date",
                  "valid_till_date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "19901001",
                  "20201230"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 32,
            "name": "the file have the following footer details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHasTheFollowingFooterDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "000000abc"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 34,
            "name": "the MHA no interaction file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theMhaNoInteractionFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1262000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 35,
            "name": "MHA sends the MHA_NO_INTERACTION file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 36,
            "name": "the Mha no interaction batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "no interaction",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 37,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Footer record count must be numeric.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 40,
            "name": "I verify number of records in MHA no interaction validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 68
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.verifyNumberOfRecordsInNoInteractionValidatedTable(long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@no_interaction"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_2"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:44.706Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 581000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 43,
        "name": "Datasource service processes a MHA no interaction list file with no footer provided.",
        "description": "",
        "id": "data-processing-for-mha-no-interaction-list-(nil);datasource-service-processes-a-mha-no-interaction-list-file-with-no-footer-provided.",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 44,
            "name": "the file have the following header details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingHeaderDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "2019010120190101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 46,
            "name": "the file have the following record details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingRecordDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "valid_from_date",
                  "valid_till_date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "19901001",
                  "20201230"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 49,
            "name": "the MHA no interaction file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theMhaNoInteractionFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1161000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 50,
            "name": "MHA sends the MHA_NO_INTERACTION file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 51,
            "name": "the Mha no interaction batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "no interaction",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 52,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Footer record count must be numeric.",
                  "1"
                ]
              },
              {
                "cells": [
                  "Must have at least 1 valid body record.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 56,
            "name": "I verify number of records in MHA no interaction validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 68
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.verifyNumberOfRecordsInNoInteractionValidatedTable(long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@no_interaction"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      }
    ],
    "name": "Data processing for MHA no interaction list (NIL)",
    "description": "",
    "id": "data-processing-for-mha-no-interaction-list-(nil)",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_no_interaction.feature",
    "tags": [
      {
        "name": "@datasource",
        "location": {
          "line": 1,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@development",
        "location": {
          "line": 2,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@no_interaction",
        "location": {
          "line": 3,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@mha",
        "location": {
          "line": 4,
          "column": 1
        },
        "type": "Tag"
      },
      {
        "name": "@truncate",
        "location": {
          "line": 5,
          "column": 1
        },
        "type": "Tag"
      }
    ]
  }
]