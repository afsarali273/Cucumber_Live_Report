[
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:42:48.773Z",
        "before": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 51000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 2248000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 38,
        "name": "Datasource service processes an empty MHA bulk citizen file",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-service-processes-an-empty-mha-bulk-citizen-file",
        "after": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 126000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 64000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 39,
            "name": "the mha bulk file is being created with no records",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsBeingCreatedWithNoRecords()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2869000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 40,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 41,
            "name": "the Mha Bulk batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 18000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 42,
            "name": "the error message contains Must have at least 1 valid body record",
            "match": {
              "arguments": [
                {
                  "val": "Must have at least 1 valid body record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:42:54.303Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 596000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 181,
        "name": "Datasource should not process record(s) with invalid DateOfDeath",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofdeath;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 173,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "00001010",
                  "M",
                  "Z",
                  "E",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20100528"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12539000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 176,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 177,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 178,
            "name": "the error message contains Date of death format is invalid",
            "match": {
              "arguments": [
                {
                  "val": "Date of death format is invalid",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:43:07.531Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 532000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 182,
        "name": "Datasource should not process record(s) with invalid DateOfDeath",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofdeath;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 173,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "10102008",
                  "M",
                  "Z",
                  "E",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20100528"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12226000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 176,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 177,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 178,
            "name": "the error message contains Date of death format is invalid",
            "match": {
              "arguments": [
                {
                  "val": "Date of death format is invalid",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:43:20.350Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 498000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 183,
        "name": "Datasource should not process record(s) with invalid DateOfDeath",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofdeath;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 173,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "00000000",
                  "M",
                  "Z",
                  "E",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20100528"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12204000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 176,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 177,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 178,
            "name": "the error message contains Date of death format is invalid",
            "match": {
              "arguments": [
                {
                  "val": "Date of death format is invalid",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:43:33.116Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 521000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 184,
        "name": "Datasource should not process record(s) with invalid DateOfDeath",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofdeath;;5",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 173,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "19990516",
                  "M",
                  "Z",
                  "E",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20100528"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 155751000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 176,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 177,
            "name": "the Mha Bulk Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 178,
            "name": "the error message contains ",
            "match": {
              "arguments": [
                {
                  "val": "",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:46:09.442Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 630000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 185,
        "name": "Datasource should not process record(s) with invalid DateOfDeath",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-invalid-dateofdeath;;6",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 173,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "John",
                  "19990516",
                  "19901231",
                  "M",
                  "Z",
                  "E",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "20100528"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 48524000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 176,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 177,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 178,
            "name": "the error message contains Date of death must be equal/before cut-off date and equal/after date of birth",
            "match": {
              "arguments": [
                {
                  "val": "Date of death must be equal/before cut-off date and equal/after date of birth",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:46:58.661Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 554000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 394,
        "name": "To verify that Datasource should flag repeating record that already persisted in database as error when the person is a born SG",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;to-verify-that-datasource-should-flag-repeating-record-that-already-persisted-in-database-as-error-when-the-person-is-a-born-sg;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 379,
            "name": "MHA send MHA_BULK_CITIZEN file with date of run on 20200413 and cut off date on 20191231",
            "match": {
              "arguments": [
                {
                  "val": "20200413",
                  "offset": 51
                },
                {
                  "val": "20191231",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.dateOfRunOnDATE_OF_RUNCutOffDateOnCUT_OF_DATE(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 380,
            "name": "the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T3455467B",
                  "-",
                  "Bob The Builder",
                  "20000505",
                  "-",
                  "M",
                  "-",
                  "S",
                  "19",
                  "91",
                  "520",
                  "604093",
                  "",
                  "2132",
                  "2132",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 128080000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 383,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 384,
            "name": "the Mha Bulk Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 385,
            "name": "MHA send MHA_BULK_CITIZEN file with date of run on 20200415 and cut off date on 20200131",
            "match": {
              "arguments": [
                {
                  "val": "20200415",
                  "offset": 51
                },
                {
                  "val": "20200131",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.dateOfRunOnDATE_OF_RUNCutOffDateOnCUT_OF_DATE(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 386,
            "name": "the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T3455467B",
                  "-",
                  "Bob The Builder",
                  "20000505",
                  "-",
                  "M",
                  "-",
                  "S",
                  "19",
                  "91",
                  "520",
                  "604093",
                  "",
                  "2132",
                  "2132",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 48955000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 389,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 390,
            "name": "the Mha Bulk Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 391,
            "name": "the error message contains Duplicate NRIC exists in the database",
            "match": {
              "arguments": [
                {
                  "val": "Duplicate NRIC exists in the database",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      }
    ],
    "name": "Data processing for MHA bulk citizen file",
    "description": "",
    "id": "data-processing-for-mha-bulk-citizen-file",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_bulk_citizen.feature",
    "tags": [
      {
        "name": "@datasource",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@development",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@bulk_citizen",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      },
      {
        "name": "@mha",
        "type": "Tag",
        "location": {
          "line": 4,
          "column": 1
        }
      },
      {
        "name": "@truncate",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:49:56.326Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 685000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 36,
        "name": "Mha sends a ceased citizenship file with completely duplicate records",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-completely-duplicate-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 192000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 37,
            "name": "the database populated with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theDatabasePopulatedWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "SingaporeCitizen",
                  "DualCitizen"
                ]
              },
              {
                "cells": [
                  "1",
                  "0"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 40,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen",
                  "NumberOfDuplication"
                ]
              },
              {
                "cells": [
                  "1",
                  "3"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25315000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 43,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 44,
            "name": "the Mha Ceased Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 45,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 3",
            "match": {
              "arguments": [
                {
                  "val": "3",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 46,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Completely Duplicate Record found.",
                  "3"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 83000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 49,
            "name": "I verify that the correct persons have ceased being singaporean",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyThatTheCorrectPersonsHaveCeasedBeingSingaporean()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:22.695Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 598000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 164,
        "name": "Mha sends a ceased citizenship file with partially duplicate records",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-partially-duplicate-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 47000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 165,
            "name": "the database populated with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theDatabasePopulatedWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "SingaporeCitizen",
                  "DualCitizen"
                ]
              },
              {
                "cells": [
                  "1",
                  "0"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 168,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen",
                  "NumberOfPartialDuplication"
                ]
              },
              {
                "cells": [
                  "1",
                  "3"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12582000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 171,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 172,
            "name": "the Mha Ceased Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 173,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 174,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Partially Duplicate Record found.",
                  "3"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:35.988Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 519000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 321,
        "name": "Mha sends a ceased citizenship file with completely duplicate records but nric not found in system",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-completely-duplicate-records-but-nric-not-found-in-system",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 322,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen",
                  "NumberOfDuplication"
                ]
              },
              {
                "cells": [
                  "1",
                  "2"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23759000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 325,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 326,
            "name": "the Mha Ceased Citizen batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 327,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 1",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 328,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Completely Duplicate Record found.",
                  "2"
                ]
              },
              {
                "cells": [
                  "NRIC not found in System.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      }
    ],
    "name": "Data processing for Mha ceased citizenship",
    "description": "",
    "id": "data-processing-for-mha-ceased-citizenship",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_ceased_sc.feature",
    "tags": [
      {
        "name": "@datasource",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@development",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@ceased_citizen",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      },
      {
        "name": "@mha",
        "type": "Tag",
        "location": {
          "line": 4,
          "column": 1
        }
      },
      {
        "name": "@truncate",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:51:00.355Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 423000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 29,
        "name": "CDS processes a MHA change address file with full duplicated records of same NRIC and current address",
        "description": "",
        "id": "mha-change-address;cds-processes-a-mha-change-address-file-with-full-duplicated-records-of-same-nric-and-current-address",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 89000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 30,
            "name": "A singaporean person john resides in a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 39
                },
                {
                  "val": "abc",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 44000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 31,
            "name": "A singaporean person jane resides in a condo property efg",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "condo",
                  "offset": 39
                },
                {
                  "val": "efg",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 32,
            "name": "the mha change address file contains the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "jane",
                  "Existing:efg,AddrType:C",
                  "IndType:Z,AddrType:C,Block:13C,Street:22 Hilton Street,Unit:22,Floor:32,Building:The Sail,Postal:232903",
                  "20190909"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:C",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "20190909"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:C",
                  "IndType:Z,AddrType:C,Block:12B,Street:16 Sheraton Street,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "20190909"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25080000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 37,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 38,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 39,
            "name": "the error message contains Completely Duplicate Record found.",
            "match": {
              "arguments": [
                {
                  "val": "Completely Duplicate Record found.",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:26.049Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 639000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 216,
        "name": "Person has changed his address many times in the past and mha tells us that he change address again",
        "description": "",
        "id": "mha-change-address;person-has-changed-his-address-many-times-in-the-past-and-mha-tells-us-that-he-change-address-again",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 73000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 217,
            "name": "A 30 year old singaporean person john resides a hdb property abc",
            "match": {
              "arguments": [
                {
                  "val": "30",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "hdb",
                  "offset": 48
                },
                {
                  "val": "abc",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 140000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 218,
            "name": "john had lived in a hdb property abd from 12 Jan 2000 to 12 Jan 2015",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "hdb",
                  "offset": 20
                },
                {
                  "val": "abd",
                  "offset": 33
                },
                {
                  "val": "12 Jan 2000",
                  "offset": 42
                },
                {
                  "val": "12 Jan 2015",
                  "offset": 57
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personHadLivedInAPropertyFromYearsAgoToYearsAgo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 52000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 219,
            "name": "john had lived in a hdb property abf from 13 Feb 2015 to 12 Jan 2019",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "hdb",
                  "offset": 20
                },
                {
                  "val": "abf",
                  "offset": 33
                },
                {
                  "val": "13 Feb 2015",
                  "offset": 42
                },
                {
                  "val": "12 Jan 2019",
                  "offset": 57
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personHadLivedInAPropertyFromYearsAgoToYearsAgo(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 220,
            "name": "the mha change address file contains information that john changed from (mha_z)abc to a new (mha_z)landed property 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abc",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 93
                },
                {
                  "val": "landed",
                  "offset": 99
                },
                {
                  "val": "5",
                  "offset": 115
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat2(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19713000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 221,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 222,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 223,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 224,
            "name": "john does not reside in abc since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abc",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:46.725Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 568000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 341,
        "name": "Given the new address is private property type",
        "description": "",
        "id": "mha-change-address;given-the-new-address-is-private-property-type",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 75000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 342,
            "name": "A singaporean person john owns a landed property a",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "owns",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 33
                },
                {
                  "val": "a",
                  "offset": 49
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 343,
            "name": "john resides in a hdb property b",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "hdb",
                  "offset": 18
                },
                {
                  "val": "b",
                  "offset": 31
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 344,
            "name": "the mha change address file contains information that john changed from (mha_z)b to (mha_z)a 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "b",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 85
                },
                {
                  "val": "a",
                  "offset": 91
                },
                {
                  "val": "5",
                  "offset": 93
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19660000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 345,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 346,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 347,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      }
    ],
    "name": "MHA Change address",
    "description": "",
    "id": "mha-change-address",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_change_address.feature",
    "tags": [
      {
        "name": "@datasource",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@development",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@change_address",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      },
      {
        "name": "@mha",
        "type": "Tag",
        "location": {
          "line": 4,
          "column": 1
        }
      },
      {
        "name": "@truncate",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:52:07.103Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 590000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 32,
        "name": "Mha sends a Change in Person details file with an invalid data item change category",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-change-in-person-details-file-with-an-invalid-data-item-change-category",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 89000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 33,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "S",
                  "M",
                  "F",
                  "valid"
                ]
              },
              {
                "cells": [
                  "valid",
                  "N",
                  "Chao Ah Beng",
                  "Tan Ah Beng",
                  "valid"
                ]
              },
              {
                "cells": [
                  "valid",
                  "D",
                  "20010924",
                  "20000924",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25070000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 38,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 39,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 40,
            "name": "the error message contains Invalid Person Detail Data Item Changed type",
            "match": {
              "arguments": [
                {
                  "val": "Invalid Person Detail Data Item Changed type",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:32.898Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 525000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 161,
        "name": "Mha sends a valid Change in Person details file for processing which will affect other tables",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-valid-change-in-person-details-file-for-processing-which-will-affect-other-tables",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 44000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 162,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "B",
                  "20000101",
                  "19900101",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19682000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 165,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 166,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 33000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 167,
            "name": "the corresponding records for person with nric S3899408E are now valid from the value 19900101",
            "match": {
              "arguments": [
                {
                  "val": "S3899408E",
                  "offset": 47
                },
                {
                  "val": "19900101",
                  "offset": 86
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingRecordsForPersonAreNowValidFromTheNewValue(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:53.216Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 517000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 337,
        "name": "Mha sends a person detail change file with a DOB change for a local born SC person",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-person-detail-change-file-with-a-dob-change-for-a-local-born-sc-person;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 39000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 328,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "local_born_sc",
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "true",
                  "S3899408E",
                  "B",
                  "19900101",
                  "19890101",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19708000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 331,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 332,
            "name": "the Mha Change of Personal Details batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 333,
            "name": "the corresponding Person_Detail record for person with nric S3899408E now reflects the new value 19890101",
            "match": {
              "arguments": [
                {
                  "val": "Person_Detail",
                  "offset": 18
                },
                {
                  "val": "S3899408E",
                  "offset": 60
                },
                {
                  "val": "19890101",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNricNowReflectsTheNewValue(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 334,
            "name": "the corresponding Person_Detail record for person with nric S3899408E now reflects new valid_from value 19890101",
            "match": {
              "arguments": [
                {
                  "val": "Person_Detail",
                  "offset": 18
                },
                {
                  "val": "S3899408E",
                  "offset": 60
                },
                {
                  "val": "19890101",
                  "offset": 104
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theCorrespondingData_item_changed_catRecordForPersonWithNricNowReflectsTheNew_ValidFrom_Value(cds_automation.enums.datasource.MhaChangePersonDetailsEnum,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          },
          {
            "name": "@gryffindor-1304"
          }
        ]
      }
    ],
    "name": "Data processing for Mha Change in Person Details",
    "description": "",
    "id": "data-processing-for-mha-change-in-person-details",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_change_person_details.feature",
    "tags": [
      {
        "name": "@datasource",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@development",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@change_person_details",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      },
      {
        "name": "@mha",
        "type": "Tag",
        "location": {
          "line": 4,
          "column": 1
        }
      },
      {
        "name": "@truncate",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:53:13.533Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 483000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 25,
        "name": "MHA sends a Death file with some dude whose birth date is more recent than his corresponding death date",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-a-death-file-with-some-dude-whose-birth-date-is-more-recent-than-his-corresponding-death-date",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 61000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 26,
            "name": "the mha death file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "ValidSCDeathCases",
                  "DeathDateEarlierThanBirthDate"
                ]
              },
              {
                "cells": [
                  "1",
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 23780000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 29,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 30,
            "name": "the Mha Death batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 31,
            "name": "the error message contains Date of death is earlier than Date of birth",
            "match": {
              "arguments": [
                {
                  "val": "Date of death is earlier than Date of birth",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:37.897Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 521000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 115,
        "name": "MHA sends a person who does not exist in CDS",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-a-person-who-does-not-exist-in-cds",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 116,
            "name": "the mha death file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NonExistentPpl"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18243000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 119,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 120,
            "name": "the Mha Death batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 121,
            "name": "the error message contains NRIC not found in prepared database",
            "match": {
              "arguments": [
                {
                  "val": "NRIC not found in prepared database",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      }
    ],
    "name": "Data processing for MHA death broadcast",
    "description": "",
    "id": "data-processing-for-mha-death-broadcast",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_death.feature",
    "tags": [
      {
        "name": "@datasource",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@development",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@death",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      },
      {
        "name": "@mha",
        "type": "Tag",
        "location": {
          "line": 4,
          "column": 1
        }
      },
      {
        "name": "@truncate",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 5,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:53:56.702Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 410000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 26,
        "name": "MHA sends file with empty spaces of Date of Run",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;mha-sends-file-with-empty-spaces-of-date-of-run",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 27,
            "name": "the mha dual citizen file contains invalid date of run and date of run is EMPTY_SPACE",
            "match": {
              "arguments": [
                {
                  "val": "EMPTY_SPACE",
                  "offset": 74
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileContainsInvalidDateOfRunAndDateOfRunIs(cds_automation.enums.datasource.InvalidDateOfRunEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12364000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 28,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 29,
            "name": "the Mha Dual Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 30,
            "name": "I verify that there is an error message for wrong date format",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatThereIsAnErrorMessageForWrongDateFormat()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:09.535Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 392000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 98,
        "name": "Person nric is not found in CDS",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;person-nric-is-not-found-in-cds",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 42000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 99,
            "name": "the mha dual citizen file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.thatTheMhaDualCitizenFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NonExistentNrics",
                  "NewDualCitizensInFile"
                ]
              },
              {
                "cells": [
                  "1",
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24969000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 102,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 103,
            "name": "the Mha Dual Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 104,
            "name": "no update is done for non-existent nrics",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.noUpdateIsDoneForNonExistentNrics()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 105,
            "name": "I verify that there are new dual citizen in datasource db",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatThereAreNewDualCitizensInDatasourceDb()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      }
    ],
    "name": "Data processing for MHA dual citizenship",
    "description": "",
    "id": "data-processing-for-mha-dual-citizenship",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_dual_citizen.feature",
    "tags": [
      {
        "name": "@development",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@dual_citizen",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@mha",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      },
      {
        "name": "@truncate",
        "type": "Tag",
        "location": {
          "line": 4,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:54:34.998Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 499000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 31,
        "name": "Datasource service processes a MHA new citizen file with hybrid (both completely \u0026 partially) duplicate records",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-hybrid-(both-completely-\u0026-partially)-duplicate-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 32,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501626D",
                  "G1801520Q",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              },
              {
                "cells": [
                  "S1501626D",
                  "G1801520Q",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              },
              {
                "cells": [
                  "S1501626D",
                  "G1801520Q",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "118       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12766000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 37,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 38,
            "name": "the Mha New Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 39,
            "name": "I verify that person with S1501626D is not persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501626D",
                  "offset": 26
                },
                {
                  "val": "is not",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 40,
            "name": "the error message contains Partially Duplicate Record found.",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found.",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:48.332Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 589000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 137,
        "name": "Datasource service processes a MHA new citizen file with DOB DD \u003d 00, and MM \u003d 00 , Invalid year \u003d 0000",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-dob-dd-\u003d-00--and-mm-\u003d-00---invalid-year-\u003d-0000",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 138,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12141000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 141,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 142,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 143,
            "name": "the error message contains Date of Birth must be in valid format",
            "match": {
              "arguments": [
                {
                  "val": "Date of Birth must be in valid format",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:01.111Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 382000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 230,
        "name": "Datasource service processes a MHA new citizen file with invalid fin contains only 8 alpha-numeric characters",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-invalid-fin-contains-only-8-alpha-numeric-characters",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 231,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12116000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 234,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 235,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 236,
            "name": "the error message contains Must be valid FIN",
            "match": {
              "arguments": [
                {
                  "val": "Must be valid FIN",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:13.657Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 379000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 332,
        "name": "Datasource service processes a MHA new citizen file with previous address of valid mha address type",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-previous-address-of-valid-mha-address-type",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 333,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S3185487C",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "B",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S8723883J",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "X",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S2190962I",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "C",
                  "C",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S3205362I",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "D",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S6843886A",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "E",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S2915858D",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "F",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S4897112A",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "Q",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S1765629E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "I",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S0263529A",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25012000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 345,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 346,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 42000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 347,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 348,
            "name": "I verify that person with S3185487C is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S3185487C",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 349,
            "name": "I verify that person with S8723883J is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S8723883J",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 350,
            "name": "I verify that person with S2190962I is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S2190962I",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 351,
            "name": "I verify that person with S3205362I is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S3205362I",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 352,
            "name": "I verify that person with S6843886A is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S6843886A",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 353,
            "name": "I verify that person with S2915858D is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S2915858D",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 354,
            "name": "I verify that person with S4897112A is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S4897112A",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 355,
            "name": "I verify that person with S1765629E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1765629E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 356,
            "name": "I verify that person with S0263529A is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S0263529A",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:39.323Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 543000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 507,
        "name": "Datasource service processes a MHA new citizen file record with no previous addr, but has current address and there is date of address change",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-record-with-no-previous-addr--but-has-current-address-and-there-is-date-of-address-change",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 508,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "",
                  "",
                  "",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12053000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 511,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 512,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 513,
            "name": "I verify that person with S1501634E is not persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is not",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 514,
            "name": "the error message contains Invalid nca address type",
            "match": {
              "arguments": [
                {
                  "val": "Invalid nca address type",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:55:51.963Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 393000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 571,
        "name": "Datasource service processes a MHA new citizen file with a Linked FIN but no citizenship attainment date",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-a-linked-fin-but-no-citizenship-attainment-date",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 572,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  ""
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12013000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 575,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 576,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 577,
            "name": "the error message contains FIN is valid, attainment date cannot be blank",
            "match": {
              "arguments": [
                {
                  "val": "FIN is valid, attainment date cannot be blank",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "72"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:04.413Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 390000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 692,
        "name": "Datasource service processes a MHA new citizen file with an existing NRIC record in the database (no nationality)",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-an-existing-nric-record-in-the-database-(no-nationality);;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 681,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000101",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  ""
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 684,
            "name": "the person already exists in the database as a Singaporean",
            "match": {
              "arguments": [
                {
                  "val": "Singaporean",
                  "offset": 47
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonAlreadyExistsInTheDatabaseAsA(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 685,
            "name": "Datasource has no existing person detail or nationality records",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonHasNoExistingNationalityRecords()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19566000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 686,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 687,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 688,
            "name": "the relevant records for the person with an existing NRIC are persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "an existing NRIC",
                  "offset": 41
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.theRelevantRecordsForThePersonWithArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 689,
            "name": "both the old and new property record(s) is/are added to Datasource",
            "match": {
              "arguments": [
                {
                  "val": "both the old and new",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.propertiesArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "82"
          },
          {
            "name": "and"
          },
          {
            "name": "83"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:56:24.478Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 564000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 693,
        "name": "Datasource service processes a MHA new citizen file with an existing NRIC record in the database (no nationality)",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-an-existing-nric-record-in-the-database-(no-nationality);;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 681,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000101",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19000615"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 684,
            "name": "the person already exists in the database as a Singaporean",
            "match": {
              "arguments": [
                {
                  "val": "Singaporean",
                  "offset": 47
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonAlreadyExistsInTheDatabaseAsA(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 685,
            "name": "Datasource has no existing person detail or nationality records",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonHasNoExistingNationalityRecords()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19572000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 686,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 687,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 688,
            "name": "the relevant records for the person with an existing NRIC are persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "an existing NRIC",
                  "offset": 41
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.theRelevantRecordsForThePersonWithArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 689,
            "name": "both the old and new property record(s) is/are added to Datasource",
            "match": {
              "arguments": [
                {
                  "val": "both the old and new",
                  "offset": 0
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.propertiesArePersistedInDatasource(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "82"
          },
          {
            "name": "and"
          },
          {
            "name": "83"
          }
        ]
      }
    ],
    "name": "Data processing for MHA new citizen file",
    "description": "",
    "id": "data-processing-for-mha-new-citizen-file",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_new_citizen.feature",
    "tags": [
      {
        "name": "@datasource",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@development",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@new_citizen",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      },
      {
        "name": "@mha",
        "type": "Tag",
        "location": {
          "line": 4,
          "column": 1
        }
      },
      {
        "name": "@truncate",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:56:44.706Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 581000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 43,
        "name": "Datasource service processes a MHA no interaction list file with no footer provided.",
        "description": "",
        "id": "data-processing-for-mha-no-interaction-list-(nil);datasource-service-processes-a-mha-no-interaction-list-file-with-no-footer-provided.",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 44,
            "name": "the file have the following header details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingHeaderDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "2019010120190101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 46,
            "name": "the file have the following record details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingRecordDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "valid_from_date",
                  "valid_till_date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "19901001",
                  "20201230"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 49,
            "name": "the MHA no interaction file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theMhaNoInteractionFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1161000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 50,
            "name": "MHA sends the MHA_NO_INTERACTION file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 51,
            "name": "the Mha no interaction batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "no interaction",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 52,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Footer record count must be numeric.",
                  "1"
                ]
              },
              {
                "cells": [
                  "Must have at least 1 valid body record.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 56,
            "name": "I verify number of records in MHA no interaction validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 68
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.verifyNumberOfRecordsInNoInteractionValidatedTable(long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@no_interaction"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_3"
          }
        ]
      }
    ],
    "name": "Data processing for MHA no interaction list (NIL)",
    "description": "",
    "id": "data-processing-for-mha-no-interaction-list-(nil)",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_no_interaction.feature",
    "tags": [
      {
        "name": "@datasource",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@development",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@no_interaction",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      },
      {
        "name": "@mha",
        "type": "Tag",
        "location": {
          "line": 4,
          "column": 1
        }
      },
      {
        "name": "@truncate",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      }
    ]
  }
]
