[
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:41:57.568Z",
        "before": [
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 72000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 2678000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "Datasource service processes a MHA bulk citizen file",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-service-processes-a-mha-bulk-citizen-file",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 50000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 63000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 10,
            "name": "the mha bulk file is being created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsBeingCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 61000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 11,
            "name": "the mha bulk file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Singaporean,M,Name:Dao Sa Pia,Fin:F8100327X,DoB:20070101,DoD:20200101,MHAAddress,BuildingName:123113afweaafawe aefa121,UnitNo:12,BlkNo:212,StrtName:faea eae,FlrNo:12,InvalidAddressTag:D,ctzIssDate:20100101,Quantity:1"
                ]
              },
              {
                "cells": [
                  "PermanentResident,DoB:19860901,Name:Roti John,F,Overseas,mhaAddrType:C,BlkNo:212,StrtName:faea eae,FlrNo:12,BuildingName:123113afweaafawe aefa121,mhaAddrType:A,Quantity:1"
                ]
              },
              {
                "cells": [
                  "DualCitizen,M,NCAAddress,BlkNo:212,StrtCode:1h2y3u,LvlNo:131,UnitNo:123ka,Quantity:1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 16,
            "name": "the mha bulk file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theMhaBulkFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 222287000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 17,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 26000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 19,
            "name": "the Mha Bulk batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 53
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          },
          {
            "name": "@GRYFFINDOR-912"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:45:42.921Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 697000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 143,
        "name": "Datasource should not process record(s) with empty name",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;datasource-should-not-process-record(s)-with-empty-name",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 144,
            "name": "MHA send MHA_BULK_CITIZEN file with the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.mhaSendMHA_BULK_CITIZENFileWithTheFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S4764841F",
                  "G4503131X",
                  "-",
                  "19990219",
                  "-",
                  "M",
                  "Z",
                  "F",
                  "66",
                  "99",
                  "02Z",
                  "Jewel Falls",
                  "Toy-Konopelski",
                  "7876",
                  "027112",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12298000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 147,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 2000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 148,
            "name": "the Mha Bulk Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 22000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 149,
            "name": "the error message contains Name field cannot be empty",
            "match": {
              "arguments": [
                {
                  "val": "Name field cannot be empty",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:45:56.013Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 510000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 352,
        "name": "To verify record is persisted correctly when person record does not exist in database but residential address is, and person is a born SG",
        "description": "",
        "id": "data-processing-for-mha-bulk-citizen-file;to-verify-record-is-persisted-correctly-when-person-record-does-not-exist-in-database-but-residential-address-is--and-person-is-a-born-sg;;2",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 334,
            "name": "MHA send MHA_BULK_CITIZEN file with date of run on 20200413 and cut off date on 20191231",
            "match": {
              "arguments": [
                {
                  "val": "20200413",
                  "offset": 51
                },
                {
                  "val": "20191231",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.dateOfRunOnDATE_OF_RUNCutOffDateOnCUT_OF_DATE(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 335,
            "name": "the following data:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theFollowingData(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "DOD",
                  "GENDER",
                  "ADDR_IND",
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE",
                  "INVALID_ADDR_TAG",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "T3455467B",
                  "-",
                  "Bob The Builder",
                  "20000505",
                  "-",
                  "M",
                  "Z",
                  "A",
                  "104",
                  "10",
                  "537",
                  "Bukit Batok Street 52",
                  "Bukit Batok Estate",
                  "-",
                  "650537",
                  "-",
                  "-"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 46000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 338,
            "name": "the database has the following mha property persisted:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.theDatabaseHasTheFollowingMhaPropertyPersisted(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "ADDR_TYPE",
                  "UNIT_NO",
                  "FLOOR_NO",
                  "BLOCK_NO",
                  "STREET_NAME",
                  "BUILDING_NAME",
                  "OLD_POSTAL_CODE",
                  "POSTAL_CODE"
                ]
              },
              {
                "cells": [
                  "A",
                  "104",
                  "10",
                  "537",
                  "Bukit Batok Street 52",
                  "Bukit Batok Estate",
                  "-",
                  "650537"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 108397000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 341,
            "name": "MHA sends the MHA_BULK_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_BULK_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 342,
            "name": "the Mha Bulk Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Bulk Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 85000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 343,
            "name": "I verify that a NRIC record is created in PERSON_ID table that valid from 20000505",
            "match": {
              "arguments": [
                {
                  "val": "NRIC",
                  "offset": 16
                },
                {
                  "val": "20000505",
                  "offset": 74
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatANricRecordIsCreatedInPERSON_IDTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 344,
            "name": "I verify that a record with name Bob The Builder is created in PERSON_NAME table that valid from 20000505",
            "match": {
              "arguments": [
                {
                  "val": "Bob The Builder",
                  "offset": 33
                },
                {
                  "val": "20000505",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPERSON_NAMETableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 345,
            "name": "I verify that a record with gender type M is created in GENDER table that valid from 20000505",
            "match": {
              "arguments": [
                {
                  "val": "M",
                  "offset": 40
                },
                {
                  "val": "20000505",
                  "offset": 85
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInGENDERTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 346,
            "name": "I verify that a record with date of birth 20000505 is created in PERSON_DETAIL table that valid from 20000505",
            "match": {
              "arguments": [
                {
                  "val": "20000505",
                  "offset": 42
                },
                {
                  "val": "20000505",
                  "offset": 101
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPERSON_DETAILTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 347,
            "name": "I verify that a record with type SINGAPORE_CITIZEN is created in NATIONALITY table that valid from 20000505",
            "match": {
              "arguments": [
                {
                  "val": "SINGAPORE_CITIZEN",
                  "offset": 33
                },
                {
                  "val": "20000505",
                  "offset": 99
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInNATIONALITYTableThatValidFromDOB(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 348,
            "name": "I verify that no record is created in PROPERTY_DETAIL",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatNoRecordIsCreatedInPROPERTY_DETAIL()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 349,
            "name": "I verify that a record with type RESIDENCE is created in PERSON_PROPERTY that valid from 31 December of preceding year",
            "match": {
              "arguments": [
                {
                  "val": "RESIDENCE",
                  "offset": 33
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaBulkSteps.iVerifyThatARecordIsCreatedInPERSON_PROPERTYThatValidFromDecemberOfPrecedingYear(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@bulk_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      }
    ],
    "name": "Data processing for MHA bulk citizen file",
    "description": "",
    "id": "data-processing-for-mha-bulk-citizen-file",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_bulk_citizen.feature",
    "tags": [
      {
        "name": "@datasource",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@development",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@bulk_citizen",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      },
      {
        "name": "@mha",
        "type": "Tag",
        "location": {
          "line": 4,
          "column": 1
        }
      },
      {
        "name": "@truncate",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:47:45.204Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 631000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "Mha sends a ceased citizenship file with a person detail record not found in system",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-file-with-a-person-detail-record-not-found-in-system",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 10,
            "name": "the file has the following details with Header date of run valid",
            "match": {
              "arguments": [
                {
                  "val": "valid",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.theFileHasTheFollowingDetails(java.lang.String,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "CeasedCitizen"
                ]
              },
              {
                "cells": [
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18697000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 13,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 14,
            "name": "the Mha Ceased Citizen batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 15,
            "name": "I verify number of is mappable records in the Ceased Citizen Validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyNumberOfIsMappableRecordsInCeasedCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 16,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "NRIC not found in System.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:04.623Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 522000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 144,
        "name": "Mha sends a ceased citizenship for a citizen would was previously a dual citizen",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;mha-sends-a-ceased-citizenship-for-a-citizen-would-was-previously-a-dual-citizen",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 30000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 92000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 145,
            "name": "that john was convert from a dual citizen to a singaporean 10 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 5
                },
                {
                  "val": "10",
                  "offset": 59
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.thatPersonWasConvertFromADualCitizenToASCDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 146,
            "name": "john\u0027s citizenship ceased 9 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "9",
                  "offset": 26
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.hisCitizenshipCeasedDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20138000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 147,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 148,
            "name": "the Mha Ceased Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 149,
            "name": "I verify that john is not a citizen 9 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 14
                },
                {
                  "val": "9",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.iVerifyThatPersonIsNotACitizenDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:25.462Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 569000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 302,
        "name": "John ceased citizenship after he becomes Singapore Citizen",
        "description": "",
        "id": "data-processing-for-mha-ceased-citizenship;john-ceased-citizenship-after-he-becomes-singapore-citizen",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 33000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 303,
            "name": "john who is 50 years old attained his Singapore Citizenship 100 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "50",
                  "offset": 12
                },
                {
                  "val": "100",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.personAttainedHisSingaporeCitizenshipDaysAgo(java.lang.String,int,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 304,
            "name": "MHA sends a ceased citizenship file stating that john renounced his citizenship 10 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 49
                },
                {
                  "val": "10",
                  "offset": 80
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.mhaSendsACeasedCitizenshipFileStatingThatPersonRenouncedHisCitizenshipDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19965000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 305,
            "name": "MHA sends the MHA_CEASED_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CEASED_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 306,
            "name": "the Mha Ceased Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Ceased Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 307,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 308,
            "name": "john is a non singaporean since 10 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "10",
                  "offset": 32
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaCeasedSingaporeCitizenSteps.personIsANonSingaporeanSinceDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@ceased_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      }
    ],
    "name": "Data processing for Mha ceased citizenship",
    "description": "",
    "id": "data-processing-for-mha-ceased-citizenship",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_ceased_sc.feature",
    "tags": [
      {
        "name": "@datasource",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@development",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@ceased_citizen",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      },
      {
        "name": "@mha",
        "type": "Tag",
        "location": {
          "line": 4,
          "column": 1
        }
      },
      {
        "name": "@truncate",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:48:46.094Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 616000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "MHA sends an empty change address file",
        "description": "",
        "id": "mha-change-address;mha-sends-an-empty-change-address-file",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 10,
            "name": "the mha change address file is empty",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileIsEmpty()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1272000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 11,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 12,
            "name": "the Mha Change Address batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 13,
            "name": "the error message contains Must have at least 1 valid body record",
            "match": {
              "arguments": [
                {
                  "val": "Must have at least 1 valid body record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:48:48.047Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 447000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 192,
        "name": "John moves to an existing address that Jane is living in",
        "description": "",
        "id": "mha-change-address;john-moves-to-an-existing-address-that-jane-is-living-in",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 68000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 193,
            "name": "A 30 year old singaporean person john owns a landed property abc",
            "match": {
              "arguments": [
                {
                  "val": "30",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "john",
                  "offset": 33
                },
                {
                  "val": "owns",
                  "offset": 38
                },
                {
                  "val": "landed",
                  "offset": 45
                },
                {
                  "val": "abc",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 194,
            "name": "john resides in a hdb property abd",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "resides",
                  "offset": 5
                },
                {
                  "val": "hdb",
                  "offset": 18
                },
                {
                  "val": "abd",
                  "offset": 31
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAnotherProperty(java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 37000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 195,
            "name": "A 28 year old singaporean person jane resides a condo property abe",
            "match": {
              "arguments": [
                {
                  "val": "28",
                  "offset": 2
                },
                {
                  "val": "singaporean",
                  "offset": 14
                },
                {
                  "val": "jane",
                  "offset": 33
                },
                {
                  "val": "resides",
                  "offset": 38
                },
                {
                  "val": "condo",
                  "offset": 48
                },
                {
                  "val": "abe",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 196,
            "name": "the mha change address file contains information that john changed from (mha_z)abd to (mha_z)abe 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 54
                },
                {
                  "val": "mha_z",
                  "offset": 73
                },
                {
                  "val": "abd",
                  "offset": 79
                },
                {
                  "val": "mha_z",
                  "offset": 87
                },
                {
                  "val": "abe",
                  "offset": 93
                },
                {
                  "val": "5",
                  "offset": 97
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileContainsInfoThat(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20277000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 197,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 198,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 199,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 17000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 200,
            "name": "john does not reside in abd since 6 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abd",
                  "offset": 24
                },
                {
                  "val": "6",
                  "offset": 34
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.johnDoesNotResideInAbeSinceDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 201,
            "name": "john resides in abe from 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 0
                },
                {
                  "val": "abe",
                  "offset": 16
                },
                {
                  "val": "5",
                  "offset": 25
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.residesInAddressFromDaysAgo(java.lang.String,java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:08.978Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 603000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 321,
        "name": "Given address indicator is MHA but Address format is NCA, and vice versa",
        "description": "",
        "id": "mha-change-address;given-address-indicator-is-mha-but-address-format-is-nca--and-vice-versa",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 63000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 322,
            "name": "A singaporean person john resides in a landed property abc",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 39
                },
                {
                  "val": "abc",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 37000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 323,
            "name": "A singaporean person jane resides in a landed property def",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "jane",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "landed",
                  "offset": 39
                },
                {
                  "val": "def",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 324,
            "name": "the mha change address file contains the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:abc,AddrType:C",
                  "IndType:Z,AddrType:S,Block:13C,Street:22 Hilton Street,Unit:22,Floor:32,Building:The Sail,Postal:232903",
                  "20190909"
                ]
              },
              {
                "cells": [
                  "jane",
                  "Existing:def,AddrType:C",
                  "IndType: ,AddrType:C,Block:13C,Street:22 Hilton Street,Unit:22,Floor:32,Building:The Sail,Postal:232903",
                  "20190909"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12254000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 328,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 329,
            "name": "the Mha Change Address batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:21.969Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 548000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 456,
        "name": "Given a change address file which contains a special property island street code",
        "description": "",
        "id": "mha-change-address;given-a-change-address-file-which-contains-a-special-property-island-street-code",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 57000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 457,
            "name": "A singaporean person john resides in a hdb property angmokio",
            "match": {
              "arguments": [
                {},
                {
                  "val": "singaporean",
                  "offset": 2
                },
                {
                  "val": "john",
                  "offset": 21
                },
                {
                  "val": "resides",
                  "offset": 26
                },
                {
                  "val": "hdb",
                  "offset": 39
                },
                {
                  "val": "angmokio",
                  "offset": 52
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.personAOwnsAProperty(java.lang.Integer,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 458,
            "name": "the mha change address file contains the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.theMhaChangeAddressFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "person",
                  "previous_address",
                  "current_address",
                  "address_change_dte"
                ]
              },
              {
                "cells": [
                  "john",
                  "Existing:angmokio,AddrType:C",
                  "IndType: ,AddrType:S,Block:12B,Street:PUU00N,Unit:13,Floor:12,Building:The Clive,Postal:232902",
                  "20190909"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20297000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 461,
            "name": "MHA sends the MHA_CHANGE_ADDRESS file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_CHANGE_ADDRESS",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 462,
            "name": "the Mha Change Address batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change Address",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 463,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 464,
            "name": "I verify that john has previous residence angmokio and now has special property persisted in Special Property with type SPECIAL_ISLAND_STREET_CODE",
            "match": {
              "arguments": [
                {
                  "val": "john",
                  "offset": 14
                },
                {
                  "val": "angmokio",
                  "offset": 42
                },
                {
                  "val": "SPECIAL_ISLAND_STREET_CODE",
                  "offset": 120
                }
              ],
              "location": "cds_automation.step_definition.datasource.ChangeAddressSteps.iVerifyThatJohnHasSpecialPropertyPersistedInSpecialProperty(java.lang.String,java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_address"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      }
    ],
    "name": "MHA Change address",
    "description": "",
    "id": "mha-change-address",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_change_address.feature",
    "tags": [
      {
        "name": "@datasource",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@development",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@change_address",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      },
      {
        "name": "@mha",
        "type": "Tag",
        "location": {
          "line": 4,
          "column": 1
        }
      },
      {
        "name": "@truncate",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:49:42.943Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 628000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "Mha sends an empty file for Change in Person details",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-an-empty-file-for-change-in-person-details",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 10,
            "name": "the mha change in person details file is empty",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaChangeInPersonDetailsFileIsEmpty()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1235000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 11,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 12,
            "name": "the Mha Change of Personal Details batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 13,
            "name": "the error message contains Must have at least 1 valid body record",
            "match": {
              "arguments": [
                {
                  "val": "Must have at least 1 valid body record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:49:44.857Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 404000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 140,
        "name": "Mha sends a file with a detail change for a person but new value is already in the database",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-but-new-value-is-already-in-the-database;;2",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 46000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "B",
                  "20000101",
                  "20000101",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18460000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 135,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 136,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 137,
            "name": "the error message contains New DOB already exists",
            "match": {
              "arguments": [
                {
                  "val": "New DOB already exists",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:03.805Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 533000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 141,
        "name": "Mha sends a file with a detail change for a person but new value is already in the database",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-but-new-value-is-already-in-the-database;;3",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 49000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "Samantha Nami",
                  "Samantha Nami",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18445000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 135,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 136,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 137,
            "name": "the error message contains New name already exists",
            "match": {
              "arguments": [
                {
                  "val": "New name already exists",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:22.872Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 522000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 142,
        "name": "Mha sends a file with a detail change for a person but new value is already in the database",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-file-with-a-detail-change-for-a-person-but-new-value-is-already-in-the-database;;4",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario Outline",
        "steps": [
          {
            "result": {
              "duration": 50000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 132,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "S",
                  "F",
                  "F",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 18511000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 135,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 136,
            "name": "the Mha Change of Personal Details batch job completes running with status VALIDATED_TO_PREPARED_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "VALIDATED_TO_PREPARED_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 137,
            "name": "the error message contains New gender already exists",
            "match": {
              "arguments": [
                {
                  "val": "New gender already exists",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:50:41.997Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 578000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 292,
        "name": "Mha sends a person detail change file containing valid, invalid, completely, partially and hybrid duplicate records",
        "description": "",
        "id": "data-processing-for-mha-change-in-person-details;mha-sends-a-person-detail-change-file-containing-valid--invalid--completely--partially-and-hybrid-duplicate-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 237000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 293,
            "name": "the mha person details file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.theMhaPersonDetailsFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "data_item_change_category",
                  "data_item_orig_value",
                  "data_item_change_value",
                  "data_item_change_date"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "New Name",
                  "New Name",
                  "20200211"
                ]
              },
              {
                "cells": [
                  "S3899408E",
                  "N",
                  "New Name",
                  "New Name",
                  "20200211"
                ]
              },
              {
                "cells": [
                  "S3098804C",
                  "N",
                  "Michael Jackson",
                  "Robert Chan",
                  "valid"
                ]
              },
              {
                "cells": [
                  "S2915858D",
                  "B",
                  "19910101",
                  "19910101",
                  "20200211"
                ]
              },
              {
                "cells": [
                  "S2915858D",
                  "B",
                  "19910101",
                  "19910101",
                  "20190211"
                ]
              },
              {
                "cells": [
                  "S1765629E",
                  "B",
                  "19910101",
                  "19910101",
                  "20200211"
                ]
              },
              {
                "cells": [
                  "S1765629E",
                  "B",
                  "19910101",
                  "19910101",
                  "20200211"
                ]
              },
              {
                "cells": [
                  "S1765629E",
                  "B",
                  "19910101",
                  "19910101",
                  "20190211"
                ]
              },
              {
                "cells": [
                  "T1601547J",
                  "N",
                  "Name of T1601547J",
                  "Name of T1601547J",
                  "valid"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24119000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 304,
            "name": "MHA sends the MHA_PERSON_DETAIL_CHANGE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_PERSON_DETAIL_CHANGE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 305,
            "name": "the Mha Change of Personal Details batch job completes running with status ERROR_RATE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Change of Personal Details",
                  "offset": 8
                },
                {
                  "val": "ERROR_RATE_ERROR",
                  "offset": 75
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 306,
            "name": "I verify number of is mappable records in the Change Person Detail Validated table is 2",
            "match": {
              "arguments": [
                {
                  "val": "2",
                  "offset": 86
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaChangePersonDetailsSteps.iVerifyNumberOfIsMappableRecordsInNewCitizenValidated(int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 307,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "New name already exists in CD database",
                  "2"
                ]
              },
              {
                "cells": [
                  "Completely Duplicate Record found.",
                  "2"
                ]
              },
              {
                "cells": [
                  "Partially Duplicate Record found.",
                  "5"
                ]
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@change_person_details"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      }
    ],
    "name": "Data processing for Mha Change in Person Details",
    "description": "",
    "id": "data-processing-for-mha-change-in-person-details",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_change_person_details.feature",
    "tags": [
      {
        "name": "@datasource",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@development",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@change_person_details",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      },
      {
        "name": "@mha",
        "type": "Tag",
        "location": {
          "line": 4,
          "column": 1
        }
      },
      {
        "name": "@truncate",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:51:06.987Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 523000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "MHA sends an empty Death file",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-an-empty-death-file",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 10,
            "name": "the mha death file is empty",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileIsEmpty()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1221000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 11,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 12,
            "name": "the Mha Death batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 13,
            "name": "the error message contains Must have at least 1 valid body record",
            "match": {
              "arguments": [
                {
                  "val": "Must have at least 1 valid body record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:51:08.778Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 471000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 97,
        "name": "MHA sends a Singapore citizen with death date that is the same as run date",
        "description": "",
        "id": "data-processing-for-mha-death-broadcast;mha-sends-a-singapore-citizen-with-death-date-that-is-the-same-as-run-date",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 72000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 98,
            "name": "the mha death file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.theMhaDeathFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "ValidSCDeathCasesOnCutoffDay",
                  "ValidSCDeathCases"
                ]
              },
              {
                "cells": [
                  "2",
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25311000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 101,
            "name": "MHA sends the MHA_DEATH_DATE file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DEATH_DATE",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 102,
            "name": "the Mha Death batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Death",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 54
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 103,
            "name": "I verify that the people listed in the death file have the correct death dates",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDeathSteps.iVerifyThatThePeopleListedInTheDeathFileHaveTheCorrectDeathDates()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@death"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      }
    ],
    "name": "Data processing for MHA death broadcast",
    "description": "",
    "id": "data-processing-for-mha-death-broadcast",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_death.feature",
    "tags": [
      {
        "name": "@datasource",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@development",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@death",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      },
      {
        "name": "@mha",
        "type": "Tag",
        "location": {
          "line": 4,
          "column": 1
        }
      },
      {
        "name": "@truncate",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 5,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:51:34.687Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 490000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 8,
        "name": "Dual Citizen batch job processing runs successfully",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;dual-citizen-batch-job-processing-runs-successfully",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 74000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 9,
            "name": "the mha dual citizen file has the following details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.thatTheMhaDualCitizenFileHasTheFollowingDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NewDualCitizensInFile",
                  "ExistingDualCitizensInFile",
                  "ExpiredDualCitizens"
                ]
              },
              {
                "cells": [
                  "1",
                  "1",
                  "1"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25246000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 12,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 13,
            "name": "the Mha Dual Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 29000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 14,
            "name": "I verify that there are new dual citizen in datasource db",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatThereAreNewDualCitizensInDatasourceDb()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 15,
            "name": "I verify that no changes were made to existing dual citizens",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatNoChangesWereMadeToExistingDualCitizens()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 16,
            "name": "I verify that the dual citizens who are not in the file will be Singaporeans",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatTheDualCitizensWhoAreNotInTheFileWillBeSingaporeans()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:00.599Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 515000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 82,
        "name": "MHA sends file with S888 nric",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;mha-sends-file-with-s888-nric",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 83,
            "name": "the mha dual citizen file has S888 nric",
            "match": {
              "arguments": [
                {
                  "val": "S888",
                  "offset": 30
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileHasAnNric(cds_automation.enums.datasource.InvalidNricEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12197000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 84,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 85,
            "name": "the Mha Dual Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 13000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 86,
            "name": "I verify that there is an error message for invalid nric",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.iVerifyThatThereIsAnErrorMessageForInvalidNric()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:13.359Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 417000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 166,
        "name": "Person who previously ceased citizenship becomes a dual citizen",
        "description": "",
        "id": "data-processing-for-mha-dual-citizenship;person-who-previously-ceased-citizenship-becomes-a-dual-citizen",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 32000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 44000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 167,
            "name": "jane who is 12 years old had her citizenship renounced 365 days ago",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 0
                },
                {
                  "val": "12",
                  "offset": 12
                },
                {
                  "val": "365",
                  "offset": 55
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.personHadHisHerCitizenshipRenouncedDaysAgo(java.lang.String,int,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 16000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 168,
            "name": "jane became a singapore citizen 10 days ago",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 0
                },
                {
                  "val": "10",
                  "offset": 32
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.personBecameASingaporeCitizenDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 169,
            "name": "the mha dual citizen file sends information that jane is a dual citizen 5 days ago",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 49
                },
                {
                  "val": "5",
                  "offset": 72
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.theMhaDualCitizenFileSendsInformationThatPersonIsADualCitizenDaysAgo(java.lang.String,int)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19982000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 170,
            "name": "MHA sends the MHA_DUAL_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_DUAL_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 171,
            "name": "the Mha Dual Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "Dual Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 61
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 172,
            "name": "there are no error messages",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.thereAreNoErrorMessages()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 173,
            "name": "jane is a dual citizen with a citizenship attainment date dating 10 days ago",
            "match": {
              "arguments": [
                {
                  "val": "jane",
                  "offset": 0
                },
                {
                  "val": "10",
                  "offset": 65
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaDualCitizenSteps.personIsADualCitizen(java.lang.String,java.lang.Integer)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@development"
          },
          {
            "name": "@dual_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      }
    ],
    "name": "Data processing for MHA dual citizenship",
    "description": "",
    "id": "data-processing-for-mha-dual-citizenship",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_dual_citizen.feature",
    "tags": [
      {
        "name": "@development",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@dual_citizen",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@mha",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      },
      {
        "name": "@truncate",
        "type": "Tag",
        "location": {
          "line": 4,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:52:33.899Z",
        "before": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 523000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "Datasource service processes a MHA new citizen file with complete duplicate records",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-complete-duplicate-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 4000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 10,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S3450033I",
                  "F1701510U",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              },
              {
                "cells": [
                  "S3450033I",
                  "F1701510U",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25404000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 14,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 15,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 38000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 16,
            "name": "I verify that person with S3450033I is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S3450033I",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 6000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 17,
            "name": "the error message contains Completely Duplicate Record found.",
            "match": {
              "arguments": [
                {
                  "val": "Completely Duplicate Record found.",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:52:59.925Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 666000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 119,
        "name": "Datasource service processes a MHA new citizen file with with NRIC S888",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-with-nric-s888",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 120,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S8881634E",
                  "",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12358000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 123,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 124,
            "name": "the Mha New Citizen batch job completes running with status RAW_DATA_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "RAW_DATA_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 125,
            "name": "the error message contains Must be valid NRIC",
            "match": {
              "arguments": [
                {
                  "val": "Must be valid NRIC",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:12.995Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 422000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 209,
        "name": "Datasource service processes a MHA new citizen file with 2 or more records with the same Linked FIN but different details",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-2-or-more-records-with-the-same-linked-fin-but-different-details",
        "after": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 210,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F0000001U",
                  "Person A",
                  "18000000",
                  "F",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 12723000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 214,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 215,
            "name": "the Mha New Citizen batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 216,
            "name": "the error message contains Partially Duplicate Record found",
            "match": {
              "arguments": [
                {
                  "val": "Partially Duplicate Record found",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:26.184Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 549000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 306,
        "name": "Datasource service processes a MHA new citizen file with a mixture of MHA and NCA format type records",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-a-mixture-of-mha-and-nca-format-type-records",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 3000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 307,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "F8100327X",
                  "Person A",
                  "19001231",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "19001231"
                ]
              },
              {
                "cells": [
                  "S1501501B",
                  "",
                  "Person B",
                  "18881231",
                  "F",
                  "Z",
                  "A",
                  "999       High Rise",
                  "",
                  "S",
                  "001       Low Rise",
                  "",
                  "20200301",
                  ""
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 25290000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 311,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 312,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 40000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 313,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 314,
            "name": "I verify that person with S1501501B is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501501B",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 10000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 315,
            "name": "I verify that person with S1501634E has existing property type format MHA persisted in PropertyDetail",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "MHA",
                  "offset": 70
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.iVerifyThatPersonWithFormatTypePersistedInPropertyDetail(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 316,
            "name": "I verify that person with S1501501B has existing property type format NCA persisted in PropertyDetail",
            "match": {
              "arguments": [
                {
                  "val": "S1501501B",
                  "offset": 26
                },
                {
                  "val": "NCA",
                  "offset": 70
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.iVerifyThatPersonWithFormatTypePersistedInPropertyDetail(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:53:52.137Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 728000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 466,
        "name": "Datasource service processes a MHA new citizen file having previous address with valid postal codes",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-having-previous-address-with-valid-postal-codes",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 467,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "OLD_ADDR_POSTAL_CODE",
                  "OLD_ADDR_NEW_POSTAL_CODE",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "1234",
                  "123456",
                  "Z",
                  "A",
                  "888       Diamond Rise",
                  "D",
                  "20200301",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19988000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 470,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 471,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 472,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:12.929Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 581000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 486,
        "name": "Datasource service processes a MHA new citizen file record with previous addr, current address \u003d blank and date of address change \u003d blank",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-record-with-previous-addr--current-address-\u003d-blank-and-date-of-address-change-\u003d-blank",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 487,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "",
                  "",
                  "",
                  "D",
                  "",
                  "18000101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 19706000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 490,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 491,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 36000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 492,
            "name": "I verify that person with S1501634E is persisted in Datasource",
            "match": {
              "arguments": [
                {
                  "val": "S1501634E",
                  "offset": 26
                },
                {
                  "val": "is",
                  "offset": 36
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatPersonWithFXIsPersistedInDatasource(java.lang.String,java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:33.286Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 553000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 670,
        "name": "Datasource service processes a MHA new citizen file with an existing born Singaporean record in the database",
        "description": "",
        "id": "data-processing-for-mha-new-citizen-file;datasource-service-processes-a-mha-new-citizen-file-with-an-existing-born-singaporean-record-in-the-database",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 2000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 671,
            "name": "a MHA_NEW_CITIZEN file with the following details",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 2
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.aMHA_NEW_CITIZENFileWithTheFollowingDetails(cds_automation.enums.datasource.FileTypeEnum,io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "NRIC",
                  "FIN",
                  "NAME",
                  "DOB",
                  "GENDER",
                  "OLD_ADDR_IND",
                  "OLD_ADDR_TYPE",
                  "OLD_ADDR",
                  "NEW_ADDR_IND",
                  "NEW_ADDR_TYPE",
                  "NEW_ADDR",
                  "NEW_INVALID_ADDR_TAG",
                  "DATE_OF_ADDR_CHANGE",
                  "CTZ_ATT_DATE"
                ]
              },
              {
                "cells": [
                  "S1501634E",
                  "",
                  "Person A",
                  "18000000",
                  "M",
                  "Z",
                  "A",
                  "117       Vista Rise",
                  "",
                  "",
                  "",
                  "",
                  "",
                  ""
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 24000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 674,
            "name": "the person already exists in the database as a Singaporean",
            "match": {
              "arguments": [
                {
                  "val": "Singaporean",
                  "offset": 47
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNewCitizenSteps.thePersonAlreadyExistsInTheDatabaseAsA(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 19757000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 675,
            "name": "MHA sends the MHA_NEW_CITIZEN file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NEW_CITIZEN",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 676,
            "name": "the Mha New Citizen batch job completes running with status CLEANUP",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "New Citizen",
                  "offset": 8
                },
                {
                  "val": "CLEANUP",
                  "offset": 60
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 677,
            "name": "the error message contains NRIC of this record and Nationality is also found for this NRIC record",
            "match": {
              "arguments": [
                {
                  "val": "NRIC of this record and Nationality is also found for this NRIC record",
                  "offset": 27
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theErrorMessageContains(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@new_citizen"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          },
          {
            "name": "#"
          },
          {
            "name": "UAT"
          },
          {
            "name": "scenario"
          },
          {
            "name": "81"
          }
        ]
      }
    ],
    "name": "Data processing for MHA new citizen file",
    "description": "",
    "id": "data-processing-for-mha-new-citizen-file",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_new_citizen.feature",
    "tags": [
      {
        "name": "@datasource",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@development",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@new_citizen",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      },
      {
        "name": "@mha",
        "type": "Tag",
        "location": {
          "line": 4,
          "column": 1
        }
      },
      {
        "name": "@truncate",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      }
    ]
  },
  {
    "line": 6,
    "elements": [
      {
        "start_timestamp": "2020-04-22T01:54:53.662Z",
        "before": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 528000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 9,
        "name": "Datasource service processes a MHA no interaction list file with wrong footer count.",
        "description": "",
        "id": "data-processing-for-mha-no-interaction-list-(nil);datasource-service-processes-a-mha-no-interaction-list-file-with-wrong-footer-count.",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 12000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 10,
            "name": "the file have the following header details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingHeaderDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "2019010120190101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 12,
            "name": "the file have the following record details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingRecordDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "valid_from_date",
                  "valid_till_date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "19901001",
                  "20201230"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 15,
            "name": "the file have the following footer details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHasTheFollowingFooterDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "000000999"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 17,
            "name": "the MHA no interaction file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theMhaNoInteractionFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1132000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 18,
            "name": "MHA sends the MHA_NO_INTERACTION file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 8000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 19,
            "name": "the Mha no interaction batch job completes running with status FILE_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "no interaction",
                  "offset": 8
                },
                {
                  "val": "FILE_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 20,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Footer size does not match body size.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 23,
            "name": "I verify number of records in MHA no interaction validated table is 0",
            "match": {
              "arguments": [
                {
                  "val": "0",
                  "offset": 68
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.verifyNumberOfRecordsInNoInteractionValidatedTable(long)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@no_interaction"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      },
      {
        "start_timestamp": "2020-04-22T01:54:55.397Z",
        "before": [
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.SpringContextLoader.setupContext()"
            }
          },
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.before()"
            }
          },
          {
            "result": {
              "duration": 376000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.beforeScenario(io.cucumber.java.Scenario)"
            }
          }
        ],
        "line": 179,
        "name": "Datasource service processes a MHA no interaction list file with extraction \u0026 cut-off date after file received.",
        "description": "",
        "id": "data-processing-for-mha-no-interaction-list-(nil);datasource-service-processes-a-mha-no-interaction-list-file-with-extraction-\u0026-cut-off-date-after-file-received.",
        "after": [
          {
            "result": {
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.afterScenario(io.cucumber.java.Scenario)"
            }
          },
          {
            "result": {
              "duration": 11000000,
              "status": "passed"
            },
            "match": {
              "location": "cds_automation.step_definition.datasource.Hooks.after(io.cucumber.java.Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 180,
            "name": "the file have the following header details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingHeaderDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "9999010199990101"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 182,
            "name": "the file have the following record details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHaveTheFollowingRecordDetails(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "nric",
                  "valid_from_date",
                  "valid_till_date"
                ]
              },
              {
                "cells": [
                  "valid",
                  "19901001",
                  "20201230"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 1000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 185,
            "name": "the file have the following footer details:",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theFileHasTheFollowingFooterDetails(java.lang.String)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "000000001"
                ]
              }
            ],
            "keyword": "Given "
          },
          {
            "result": {
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 187,
            "name": "the MHA no interaction file is created",
            "match": {
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.theMhaNoInteractionFileIsCreated()"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 12493000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 188,
            "name": "MHA sends the MHA_NO_INTERACTION file to Datasource sftp for processing",
            "match": {
              "arguments": [
                {
                  "val": "MHA_NO_INTERACTION",
                  "offset": 14
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommandSteps.mhaSendsTheFileToDatasourceSftpForProcessing(cds_automation.enums.datasource.FileTypeEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 7000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 189,
            "name": "the Mha no interaction batch job completes running with status BULK_CHECK_VALIDATION_ERROR",
            "match": {
              "arguments": [
                {
                  "val": "Mha",
                  "offset": 4
                },
                {
                  "val": "no interaction",
                  "offset": 8
                },
                {
                  "val": "BULK_CHECK_VALIDATION_ERROR",
                  "offset": 63
                }
              ],
              "location": "cds_automation.step_definition.datasource.CommonSteps.theBatchJobCompletesRunning(java.lang.String,java.lang.String,cds_automation.enums.datasource.BatchStatusEnum)"
            },
            "after": [
              {
                "result": {
                  "duration": 1000000,
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 9000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 190,
            "name": "I verify that the following error message appeared:",
            "match": {
              "location": "cds_automation.step_definition.datasource.CommonSteps.iVerifyThatTheFollowingErrorMessageAppeared(io.cucumber.datatable.DataTable)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "Message",
                  "Count"
                ]
              },
              {
                "cells": [
                  "Extraction date cannot be after File Received date.",
                  "1"
                ]
              },
              {
                "cells": [
                  "Cut-off date cannot be after File Received date.",
                  "1"
                ]
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 5000000,
              "status": "passed"
            },
            "before": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.startStepTimer()"
                }
              }
            ],
            "line": 194,
            "name": "I verify number of records in MHA no interaction validated table is 1",
            "match": {
              "arguments": [
                {
                  "val": "1",
                  "offset": 68
                }
              ],
              "location": "cds_automation.step_definition.datasource.MhaNoInteractionSteps.verifyNumberOfRecordsInNoInteractionValidatedTable(long)"
            },
            "after": [
              {
                "result": {
                  "status": "passed"
                },
                "match": {
                  "location": "cds_automation.step_definition.datasource.Hooks.stopStepTimer()"
                }
              }
            ],
            "keyword": "And "
          }
        ],
        "tags": [
          {
            "name": "@datasource"
          },
          {
            "name": "@development"
          },
          {
            "name": "@no_interaction"
          },
          {
            "name": "@mha"
          },
          {
            "name": "@truncate"
          },
          {
            "name": "@set_1"
          }
        ]
      }
    ],
    "name": "Data processing for MHA no interaction list (NIL)",
    "description": "",
    "id": "data-processing-for-mha-no-interaction-list-(nil)",
    "keyword": "Feature",
    "uri": "classpath:cds_automation/datasource/batch_processing/mha/mha_no_interaction.feature",
    "tags": [
      {
        "name": "@datasource",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      },
      {
        "name": "@development",
        "type": "Tag",
        "location": {
          "line": 2,
          "column": 1
        }
      },
      {
        "name": "@no_interaction",
        "type": "Tag",
        "location": {
          "line": 3,
          "column": 1
        }
      },
      {
        "name": "@mha",
        "type": "Tag",
        "location": {
          "line": 4,
          "column": 1
        }
      },
      {
        "name": "@truncate",
        "type": "Tag",
        "location": {
          "line": 5,
          "column": 1
        }
      }
    ]
  }
]
